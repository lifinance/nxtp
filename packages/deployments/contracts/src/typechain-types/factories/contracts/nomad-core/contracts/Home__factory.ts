/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Home,
  HomeInterface,
} from "../../../../contracts/nomad-core/contracts/Home";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationAndNonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "committedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "ImproperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldUpdater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newUpdater",
        type: "address",
      },
    ],
    name: "NewUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updaterManager",
        type: "address",
      },
    ],
    name: "NewUpdaterManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reporter",
        type: "address",
      },
    ],
    name: "UpdaterSlashed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_MESSAGE_BODY_BYTES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "improperUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUpdaterManager",
        name: "_updaterManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_item",
        type: "bytes32",
      },
    ],
    name: "queueContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueEnd",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updaterManager",
        type: "address",
      },
    ],
    name: "setUpdaterManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum NomadBase.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "suggestUpdate",
    outputs: [
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_new",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updaterManager",
    outputs: [
      {
        internalType: "contract IUpdaterManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620024e3380380620024e38339810160408190526100319161003f565b63ffffffff1660805261006c565b60006020828403121561005157600080fd5b815163ffffffff8116811461006557600080fd5b9392505050565b6080516124466200009d6000396000818161022601528181610566015281816107c30152610ac001526124466000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80639df6c8e1116100de578063df034cd011610097578063f6d1610211610071578063f6d1610214610371578063fa31de0114610398578063fd54b228146103ab578063ffa1ad74146103b557600080fd5b8063df034cd014610343578063ebf0c71714610356578063f2fde38b1461035e57600080fd5b80639df6c8e1146102bb578063ab91c7b0146102ce578063b31c01fb146102d6578063b95a2001146102e9578063c19d93fb1461030f578063c4d66de81461033057600080fd5b806367a6771d1161014b5780638da5cb5b116101255780638da5cb5b1461025d5780638e4e30e0146102825780639776120e146102955780639d54f419146102a857600080fd5b806367a6771d14610210578063715018a6146102195780638d3638f41461022157600080fd5b806306661abd1461019357806319d9d21a146101aa5780632bef2892146101bf57806336e104de146101e257806345630b1a146101ff578063522ae00214610207575b600080fd5b6054545b6040519081526020015b60405180910390f35b6101bd6101b8366004611d31565b6103cf565b005b6101d26101cd366004611dc0565b61050e565b60405190151581526020016101a1565b6101ea610521565b604080519283526020830191909152016101a1565b61019761055f565b61019761080081565b61019760ba5481565b6101bd61058f565b6102487f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101a1565b6087546001600160a01b03165b6040516001600160a01b0390911681526020016101a1565b6101d2610290366004611e7c565b6105a3565b6101bd6102a3366004611ee1565b6106d5565b6101bd6102b6366004611ee1565b6106e9565b60eb5461026a906001600160a01b031681565b61019761073e565b6101bd6102e4366004611e7c565b61074a565b6102486102f7366004611f17565b60ea6020526000908152604090205463ffffffff1681565b60b95461032390600160a01b900460ff1681565b6040516101a19190611f48565b6101bd61033e366004611ee1565b610825565b60b95461026a906001600160a01b031681565b61019761096e565b6101bd61036c366004611ee1565b61097a565b600154600160801b90046001600160801b0316600090815260026020526040902054610197565b6101bd6103a6366004611f70565b6109f0565b6054546101979081565b6103bd600081565b60405160ff90911681526020016101a1565b600260b954600160a01b900460ff1660028111156103ef576103ef611f32565b036104155760405162461bcd60e51b815260040161040c90611fb1565b60405180910390fd5b604080516020601f86018190048102820181019092528481526104579188918835918890889081908401838280828437600092019190915250610b7d92505050565b80156104a657506104a686866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b7d92505050565b80156104b757508435602086013514155b15610506576104c4610bf0565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040516104fd96959493929190612016565b60405180910390a15b505050505050565b600061051b600183610c9c565b92915050565b60008061052e6001610cf7565b1561055b57505060ba54600154600160801b90046001600160801b03166000908152600260205260409020545b9091565b600061058a7f0000000000000000000000000000000000000000000000000000000000000000610d21565b905090565b610597610d6a565b6105a16000610dc4565b565b6000600260b954600160a01b900460ff1660028111156105c5576105c5611f32565b036105e25760405162461bcd60e51b815260040161040c90611fb1565b6105ed848484610b7d565b6106285760405162461bcd60e51b815260206004820152600c60248201526b21757064617465722073696760a01b604482015260640161040c565b60ba5484146106705760405162461bcd60e51b81526020600482015260146024820152736e6f7420612063757272656e742075706461746560601b604482015260640161040c565b61067b600184610c9c565b6106ca57610687610bf0565b7f6844fd5e21c932b5197b78ac11bf96e2eaa4e882dd0c88087060cf2065c04ab28484846040516106ba939291906120b4565b60405180910390a15060016106ce565b5060005b9392505050565b6106dd610d6a565b6106e681610e16565b50565b60eb546001600160a01b031633146107355760405162461bcd60e51b815260206004820152600f60248201526e10bab83230ba32b926b0b730b3b2b960891b604482015260640161040c565b6106e681610ec2565b600061058a6001610cf7565b600260b954600160a01b900460ff16600281111561076a5761076a611f32565b036107875760405162461bcd60e51b815260040161040c90611fb1565b6107928383836105a3565b610820575b60006107a36001610f1c565b90508281036107b257506107b8565b50610797565b8160ba8190555081837f000000000000000000000000000000000000000000000000000000000000000063ffffffff167f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b28460405161081791906120dc565b60405180910390a45b505050565b600054610100900460ff16158080156108455750600054600160ff909116105b8061085f5750303b15801561085f575060005460ff166001145b61087b5760405162461bcd60e51b815260040161040c906120ef565b6000805460ff19166001179055801561089e576000805461ff0019166101001790555b6108a6610fe1565b6108af82610e16565b60eb5460408051630df034cd60e41b81529051610923926001600160a01b03169163df034cd09160048083019260209291908290030181865afa1580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e919061213d565b6110a6565b801561096a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050565b600061058a6034611185565b610982610d6a565b6001600160a01b0381166109e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040c565b6106e681610dc4565b600260b954600160a01b900460ff166002811115610a1057610a10611f32565b03610a2d5760405162461bcd60e51b815260040161040c90611fb1565b61080081511115610a6f5760405162461bcd60e51b815260206004820152600c60248201526b6d736720746f6f206c6f6e6760a01b604482015260640161040c565b63ffffffff808416600090815260ea602052604090205416610a92816001612170565b63ffffffff858116600090815260ea60205260408120805463ffffffff191693909216929092179055610ae97f00000000000000000000000000000000000000000000000000000000000000003384888888611198565b80516020820120909150610afe6034826111d0565b610b11610b0961096e565b6001906112e8565b5060545467ffffffff00000000602088901b1663ffffffff85161790610b3990600190612198565b827f9d4c83d2e57d7d381feb264b44a5015e7f9ef26340f4fc46b558a6dc16dd811a60ba5486604051610b6d9291906121af565b60405180910390a4505050505050565b600080610b8861055f565b604080516020810192909252810186905260608101859052608001604051602081830303815290604052805190602001209050610bc481611349565b60b9549091506001600160a01b0316610bdd8285611384565b6001600160a01b03161495945050505050565b60b9805460ff60a01b1916600160a11b17905560eb54604051635b3c2cbf60e01b81523360048201526001600160a01b0390911690635b3c2cbf90602401600060405180830381600087803b158015610c4857600080fd5b505af1158015610c5c573d6000803e3d6000fd5b505060b9546040513393506001600160a01b0390911691507f98064af315f26d7333ba107ba43a128ec74345f4d4e6f2549840fe092a1c8bce90600090a3565b81546000906001600160801b03165b8354600160801b90046001600160801b031681116106ca576000818152600185016020526040902054839003610ce557600191505061051b565b80610cef816121c8565b915050610cab565b80546000906001600160801b03600160801b820481169116610d1982826113a8565b949350505050565b6040516001600160e01b031960e083901b166020820152641393d3505160da1b60248201526000906029015b604051602081830303815290604052805190602001209050919050565b6087546001600160a01b031633146105a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b608780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b610e6d5760405162461bcd60e51b815260206004820152601860248201527f21636f6e747261637420757064617465724d616e616765720000000000000000604482015260640161040c565b60eb80546001600160a01b0319166001600160a01b0383169081179091556040519081527f958d788fb4c373604cd4c73aa8c592de127d0819b49bb4dc02c8ecd666e965bf906020015b60405180910390a150565b60b980546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f0f20622a7af9e952a6fec654a196f29e04477b5d335772c26902bec35cc9f22a9101610961565b80546000906001600160801b03600160801b820481169116610f3e82826113a8565b600003610f755760405162461bcd60e51b8152602060048201526005602482015264456d70747960d81b604482015260640161040c565b6001600160801b038116600090815260018501602052604090205492508215610fb4576001600160801b03811660009081526001850160205260408120555b610fbf8160016121e1565b84546001600160801b0319166001600160801b03919091161790935550919050565b600054610100900460ff16158080156110015750600054600160ff909116105b8061101b5750303b15801561101b575060005460ff166001145b6110375760405162461bcd60e51b815260040161040c906120ef565b6000805460ff19166001179055801561105a576000805461ff0019166101001790555b61106460016113d0565b80156106e6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610eb7565b600054610100900460ff16158080156110c65750600054600160ff909116105b806110e05750303b1580156110e0575060005460ff166001145b6110fc5760405162461bcd60e51b815260040161040c906120ef565b6000805460ff19166001179055801561111f576000805461ff0019166101001790555b6111276113f6565b61113082610ec2565b60b9805460ff60a01b1916600160a01b179055801561096a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610961565b600061051b82611193611425565b6118e6565b60608686868686866040516020016111b596959493929190612203565b60405160208183030381529060405290509695505050505050565b60016111de60206002612341565b6111e89190612198565b82602001541061122d5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b604482015260640161040c565b6001826020016000828254611242919061234d565b9091555050602082015460005b60208110156112df578160011660010361127e578284826020811061127657611276611fd7565b015550505050565b83816020811061129057611290611fd7565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826112cb9190612365565b9150806112d7816121c8565b91505061124f565b50610820612387565b815460009061130890600160801b90046001600160801b031660016121e1565b83546001600160801b03808316600160801b0291161784559050811561051b576001600160801b038116600090815260019390930160205260409092205590565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610d4d565b600080600061139385856119b8565b915091506113a0816119fd565b509392505050565b6000816113b68460016121e1565b6113c0919061239d565b6001600160801b03169392505050565b80546001600160801b03166000036106e65780546001600160801b031916600117815550565b600054610100900460ff1661141d5760405162461bcd60e51b815260040161040c906123c5565b6105a1611bb3565b61142d611cd0565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b60208110156119b057600182821c16600086836020811061191357611913611fd7565b015490508160010361195057604080516020810183905290810186905260600160405160208183030381529060405280519060200120945061199b565b8486846020811061196357611963611fd7565b6020020151604051602001611982929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b505080806119a8906121c8565b9150506118f0565b505092915050565b60008082516041036119ee5760208301516040840151606085015160001a6119e287828585611be3565b945094505050506119f6565b506000905060025b9250929050565b6000816004811115611a1157611a11611f32565b03611a195750565b6001816004811115611a2d57611a2d611f32565b03611a7a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161040c565b6002816004811115611a8e57611a8e611f32565b03611adb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161040c565b6003816004811115611aef57611aef611f32565b03611b475760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161040c565b6004816004811115611b5b57611b5b611f32565b036106e65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161040c565b600054610100900460ff16611bda5760405162461bcd60e51b815260040161040c906123c5565b6105a133610dc4565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611c1a5750600090506003611cc7565b8460ff16601b14158015611c3257508460ff16601c14155b15611c435750600090506004611cc7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611c97573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611cc057600060019250925050611cc7565b9150600090505b94509492505050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112611d0157600080fd5b50813567ffffffffffffffff811115611d1957600080fd5b6020830191508360208285010111156119f657600080fd5b60008060008060008060a08789031215611d4a57600080fd5b863595506060870188811115611d5f57600080fd5b6020880195503567ffffffffffffffff80821115611d7c57600080fd5b611d888a838b01611cef565b90965094506080890135915080821115611da157600080fd5b50611dae89828a01611cef565b979a9699509497509295939492505050565b600060208284031215611dd257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611e0057600080fd5b813567ffffffffffffffff80821115611e1b57611e1b611dd9565b604051601f8301601f19908116603f01168101908282118183101715611e4357611e43611dd9565b81604052838152866020858801011115611e5c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611e9157600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611eb657600080fd5b611ec286828701611def565b9150509250925092565b6001600160a01b03811681146106e657600080fd5b600060208284031215611ef357600080fd5b81356106ce81611ecc565b803563ffffffff81168114611f1257600080fd5b919050565b600060208284031215611f2957600080fd5b6106ce82611efe565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611f6a57634e487b7160e01b600052602160045260246000fd5b91905290565b600080600060608486031215611f8557600080fd5b611f8e84611efe565b925060208401359150604084013567ffffffffffffffff811115611eb657600080fd5b6020808252600c908201526b6661696c656420737461746560a01b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152604086602083013760a06060820152600061203860a083018688611fed565b828103608084015261204b818587611fed565b9998505050505050505050565b60005b8381101561207357818101518382015260200161205b565b83811115612082576000848401525b50505050565b600081518084526120a0816020860160208601612058565b601f01601f19169290920160200192915050565b8381528260208201526060604082015260006120d36060830184612088565b95945050505050565b6020815260006106ce6020830184612088565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006020828403121561214f57600080fd5b81516106ce81611ecc565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681851680830382111561218f5761218f61215a565b01949350505050565b6000828210156121aa576121aa61215a565b500390565b828152604060208201526000610d196040830184612088565b6000600182016121da576121da61215a565b5060010190565b60006001600160801b0380831681851680830382111561218f5761218f61215a565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161224b81604c850160208701612058565b91909101604c01979650505050505050565b600181815b8085111561229857816000190482111561227e5761227e61215a565b8085161561228b57918102915b93841c9390800290612262565b509250929050565b6000826122af5750600161051b565b816122bc5750600061051b565b81600181146122d257600281146122dc576122f8565b600191505061051b565b60ff8411156122ed576122ed61215a565b50506001821b61051b565b5060208310610133831016604e8410600b841016171561231b575081810a61051b565b612325838361225d565b80600019048211156123395761233961215a565b029392505050565b60006106ce83836122a0565b600082198211156123605761236061215a565b500190565b60008261238257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b60006001600160801b03838116908316818110156123bd576123bd61215a565b039392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122058b4f479066d83d828bed0eab4ab8e21c87876992b338f7f1710cd8c8f55c50a64736f6c634300080f0033";

type HomeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HomeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Home__factory extends ContractFactory {
  constructor(...args: HomeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _localDomain: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Home> {
    return super.deploy(_localDomain, overrides || {}) as Promise<Home>;
  }
  override getDeployTransaction(
    _localDomain: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_localDomain, overrides || {});
  }
  override attach(address: string): Home {
    return super.attach(address) as Home;
  }
  override connect(signer: Signer): Home__factory {
    return super.connect(signer) as Home__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HomeInterface {
    return new utils.Interface(_abi) as HomeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Home {
    return new Contract(address, _abi, signerOrProvider) as Home;
  }
}
