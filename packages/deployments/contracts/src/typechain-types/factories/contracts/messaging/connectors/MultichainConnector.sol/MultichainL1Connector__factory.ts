/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainL1Connector,
  MultichainL1ConnectorInterface,
} from "../../../../../contracts/messaging/connectors/MultichainConnector.sol/MultichainL1Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162002eff38038062002eff833981016040819052620000359162000327565b8888888888888888888888878787878787878063ffffffff166000036200008d5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000d25760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000084565b6001600160a01b038516620001195760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640162000084565b620001243362000296565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001aa5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000084565b613a98811015620001ed5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000084565b610120919091526101405250506040805163c34c08e560e01b815290516001600160a01b038c16955063c34c08e59450600480830194506020935090918290030181865afa15801562000244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200026a9190620003be565b6001600160a01b0316610160525050506101809390935250620003e39c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805163ffffffff811681146200030a57600080fd5b919050565b80516001600160a01b03811681146200030a57600080fd5b60008060008060008060008060006101208a8c0312156200034757600080fd5b620003528a620002f5565b98506200036260208b01620002f5565b975060408a015196506200037960608b016200030f565b95506200038960808b016200030f565b94506200039960a08b016200030f565b935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b600060208284031215620003d157600080fd5b620003dc826200030f565b9392505050565b60805160a05160c05160e0516101005161012051610140516101605161018051612a50620004af600039600081816112010152611385015260006112e201526000818161025e0152610f8301526000818161056f01528181610fa4015261102b0152600081816102f10152610d590152600081816103a0015281816108670152610d3201526000818161054801528181610600015281816111c6015261128601526000818161036601528181610bff0152610e8501526000818161041b01526104e30152612a506000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80639abaf4791161013b578063d1851c92116100b8578063ebf0c7171161007c578063ebf0c717146105a4578063ee250e06146105ac578063f38a267b146105b5578063fa31de01146105d8578063fd54b228146105eb57600080fd5b8063d1851c9214610520578063d232c22014610531578063d69f9d6114610543578063d88beda21461056a578063db1b76591461059157600080fd5b8063b697f531116100ff578063b697f531146104a5578063b95a2001146104b8578063c2fb26a6146104de578063c5b350df14610505578063cc3942831461050d57600080fd5b80639abaf479146104505780639fa92f9d14610471578063b1f8100d14610477578063b2f876431461048a578063b46300ec1461049d57600080fd5b806352a9674b116101c95780636a42b8f81161018d5780636a42b8f8146103f5578063715018a6146103fe57806382646a58146104065780638d3638f4146104195780638da5cb5b1461043f57600080fd5b806352a9674b146103615780635bd11efc146103885780635f61e3ec1461039b5780636188af0e146103da57806365eaf11b146103ed57600080fd5b80632bbd59ca116102105780632bbd59ca146102bc5780633490334a146102ec5780633cf52ffb146103285780634ff746f6146103305780635190bc531461034557600080fd5b806306661abd1461024257806325e3beda14610259578063272efc691461028057806329460bd0146102b3575b600080fd5b6023545b6040519081526020015b60405180910390f35b6102467f000000000000000000000000000000000000000000000000000000000000000081565b6102a361028e3660046122ec565b60286020526000908152604090205460ff1681565b6040519015158152602001610250565b61024660255481565b6102df6102ca366004612309565b602a6020526000908152604090205460ff1681565b6040516102509190612338565b6103137f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610250565b600254610246565b61034361033e366004612403565b6105f5565b005b6102a36103533660046122ec565b6001600160a01b0316301490565b6103137f000000000000000000000000000000000000000000000000000000000000000081565b6103436103963660046122ec565b6106a4565b6103c27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610250565b6103436103e8366004612438565b610738565b61024661078e565b62093a80610246565b61034361079d565b610343610414366004612403565b61085c565b7f0000000000000000000000000000000000000000000000000000000000000000610313565b6000546001600160a01b03166103c2565b61046361045e366004612403565b6108fd565b6040516102509291906124f0565b306103c2565b6103436104853660046122ec565b61090f565b6103436104983660046122ec565b6109b7565b610343610a33565b6103436104b33660046122ec565b610a69565b6103136104c6366004612524565b60296020526000908152604090205463ffffffff1681565b6103137f000000000000000000000000000000000000000000000000000000000000000081565b610343610ae8565b6024546103c2906001600160a01b031681565b6001546001600160a01b03166103c2565b6000546001600160a01b0316156102a3565b6103c27f000000000000000000000000000000000000000000000000000000000000000081565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b6102a361059f3660046122ec565b610b43565b610246610b54565b61024660265481565b6102a36105c3366004612309565b60276020526000908152604090205460ff1681565b6103436105e636600461253f565b610b60565b6023546102469081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065f5760405162461bcd60e51b81526004016106569060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61066881610c9d565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610699929190612596565b60405180910390a150565b6000546001600160a01b031633146106cf576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b61074a83805190602001208383610de1565b61077f5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610656565b61078883610e6f565b50505050565b6000610798610b54565b905090565b6000546001600160a01b031633146107c8576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107eb57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107fd91906125d6565b1161081b576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610845576040516323295ef960e01b815260040160405180910390fd5b60015461085a906001600160a01b0316611158565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108c35760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610656565b6108cc816111b7565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc8133604051610699929190612596565b6000606061090a83610c9d565b915091565b6000546001600160a01b0316331461093a576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561095f57506001600160a01b03811615155b1561097d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109ab57604051634a2fb73f60e11b815260040160405180910390fd5b6109b48161122b565b50565b6000546001600160a01b031633146109e2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610699565b6000610a3d610b54565b604051602001610a4f91815260200190565b60405160208183030381529060405290506108cc816111b7565b6000546001600160a01b03163314610a94576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610699565b6001546001600160a01b03163314610b13576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610b2591906125d6565b116108455760405163d39c12bb60e01b815260040160405180910390fd5b6000610b4e82611279565b92915050565b600061079860036113af565b3360009081526028602052604090205460ff16610bae5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610656565b63ffffffff80841660009081526029602052604090205416610bd18160016125ed565b63ffffffff8581166000908152602960205260408120805463ffffffff191693909216929092179055610c287f000000000000000000000000000000000000000000000000000000000000000033848888886113c2565b80516020820120909150610c3d6003826113fa565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610c6a60235490565b610c7491906125d6565b610c7c610b54565b85604051610c8d9493929190612615565b60405180910390a1505050505050565b602454610cb2906001600160a01b0316611279565b610ced5760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606401610656565b8051602014610d285760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610656565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166378ffd0a17f0000000000000000000000000000000000000000000000000000000000000000610d818461263a565b6040516001600160e01b031960e085901b16815263ffffffff92909216600483015260248201526044015b600060405180830381600087803b158015610dc657600080fd5b505af1158015610dda573d6000803e3d6000fd5b5050505050565b6000806000858152602a602052604090205460ff166002811115610e0757610e07612322565b14610e4a5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610656565b506000838152602a60205260409020805460ff191660019081179091555b9392505050565b600080610e7c8382611517565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610eb462ffffff19831661153b565b63ffffffff1614610ef65760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610656565b6000610f0762ffffff198316611550565b905060016000828152602a602052604090205460ff166002811115610f2e57610f2e612322565b14610f655760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610656565b6000818152602a60205260409020805460ff19166002179055610fc87f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061265e565b5a10156110005760405162461bcd60e51b8152600401610656906020808252600490820152632167617360e01b604082015260600190565b600061101162ffffff198416611599565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061106e62ffffff1989166115aa565b61107d62ffffff198a166115be565b61108c62ffffff198b166115d3565b6110a961109e62ffffff198d166115e8565b62ffffff1916611616565b6040516024016110bc9493929190612676565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611105578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611143939291906126a5565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405163bd45c4e760e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381169163bd45c4e791610dac9185906000907f00000000000000000000000000000000000000000000000000000000000000009082906004016126c6565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112dd5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610656565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561133e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113629190612704565b5091509150836001600160a01b0316826001600160a01b03161480156113a757507f000000000000000000000000000000000000000000000000000000000000000081145b949350505050565b6000610b4e826113bd61165f565b611b20565b60608686868686866040516020016113df9695949392919061273b565b60405160208183030381529060405290509695505050505050565b600161140860206002612879565b61141291906125d6565b8260200154106114575760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610656565b600182602001600082825461146c919061265e565b9091555050602082015460005b602081101561150957816001166001036114a857828482602081106114a0576114a0612885565b015550505050565b8381602081106114ba576114ba612885565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826114f5919061289b565b915080611501816128bd565b915050611479565b506115126128d6565b505050565b81516000906020840161153264ffffffffff85168284611bf2565b95945050505050565b6000610b4e62ffffff19831660286004611c39565b6000806115668360781c6001600160601b031690565b6001600160601b0316905060006115868460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610b4e6115a783611c69565b90565b6000610b4e62ffffff198316826004611c39565b6000610b4e62ffffff19831660246004611c39565b6000610b4e62ffffff19831660046020611c7a565b6000610b4e604c61160681601886901c6001600160601b03166125d6565b62ffffff19851691906000611dd6565b606060008061162e8460181c6001600160601b031690565b6001600160601b03169050604051915081925061164e8483602001611e50565b508181016020016040529052919050565b6116676122b8565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611bea57600182821c166000868360208110611b4d57611b4d612885565b0154905081600103611b8a576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611bd5565b84868460208110611b9d57611b9d612885565b6020020151604051602001611bbc929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611be2906128bd565b915050611b2a565b505092915050565b600080611bff838561265e565b9050604051811115611c0f575060005b80600003611c245762ffffff19915050610e68565b5050606092831b9190911790911b1760181b90565b6000611c468260206128ec565b611c5190600861290f565b60ff16611c5f858585611c7a565b901c949350505050565b6000610b4e62ffffff198316602c60205b60008160ff16600003611c8f57506000610e68565b611ca28460181c6001600160601b031690565b6001600160601b0316611cb860ff84168561265e565b1115611d1c57611d03611cd48560781c6001600160601b031690565b6001600160601b0316611cf08660181c6001600160601b031690565b6001600160601b0316858560ff16611fa7565b60405162461bcd60e51b81526004016106569190612930565b60208260ff161115611d965760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610656565b600882026000611daf8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611dec8660781c6001600160601b031690565b6001600160601b03169050611e0086612015565b84611e0b878461265e565b611e15919061265e565b1115611e285762ffffff199150506113a7565b611e32858261265e565b9050611e468364ffffffffff168286611bf2565b9695505050505050565b600062ffffff1980841603611eb85760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610656565b611ec18361204e565b611f215760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610656565b6000611f368460181c6001600160601b031690565b6001600160601b031690506000611f568560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611f765760206060fd5b8285848460045afa50611e46611f8c8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b60606000611fb48661208b565b9150506000611fc28661208b565b9150506000611fd08661208b565b9150506000611fde8661208b565b91505083838383604051602001611ff89493929190612943565b604051602081830303815290604052945050505050949350505050565b600061202a8260181c6001600160601b031690565b61203d8360781c6001600160601b031690565b016001600160601b03169050919050565b600061205a8260d81c90565b64ffffffffff1664ffffffffff0361207457506000919050565b600061207f83612015565b60405110199392505050565b600080601f5b600f8160ff1611156120e05760006120aa82600861290f565b60ff1685901c90506120bb81612139565b61ffff16841793508160ff166010146120d657601084901b93505b5060001901612091565b50600f5b60ff8160ff1610156121335760006120fd82600861290f565b60ff1685901c905061210e81612139565b61ffff16831792508160ff1660001461212957601083901b92505b50600019016120e4565b50915091565b600061214b60048360ff16901c61216b565b60ff1661ffff919091161760081b6121628261216b565b60ff1617919050565b600060f08083179060ff821690036121865750603092915050565b8060ff1660f10361219a5750603192915050565b8060ff1660f2036121ae5750603292915050565b8060ff1660f3036121c25750603392915050565b8060ff1660f4036121d65750603492915050565b8060ff1660f5036121ea5750603592915050565b8060ff1660f6036121fe5750603692915050565b8060ff1660f7036122125750603792915050565b8060ff1660f8036122265750603892915050565b8060ff1660f90361223a5750603992915050565b8060ff1660fa0361224e5750606192915050565b8060ff1660fb036122625750606292915050565b8060ff1660fc036122765750606392915050565b8060ff1660fd0361228a5750606492915050565b8060ff1660fe0361229e5750606592915050565b8060ff1660ff036122b25750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b03811681146109b457600080fd5b6000602082840312156122fe57600080fd5b8135610e68816122d7565b60006020828403121561231b57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061235a57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261238757600080fd5b813567ffffffffffffffff808211156123a2576123a2612360565b604051601f8301601f19908116603f011681019082821181831017156123ca576123ca612360565b816040528381528660208588010111156123e357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561241557600080fd5b813567ffffffffffffffff81111561242c57600080fd5b6113a784828501612376565b6000806000610440848603121561244e57600080fd5b833567ffffffffffffffff81111561246557600080fd5b61247186828701612376565b93505061042084018581111561248657600080fd5b60208501925080359150509250925092565b60005b838110156124b357818101518382015260200161249b565b838111156107885750506000910152565b600081518084526124dc816020860160208601612498565b601f01601f19169290920160200192915050565b82151581526040602082015260006113a760408301846124c4565b803563ffffffff8116811461251f57600080fd5b919050565b60006020828403121561253657600080fd5b610e688261250b565b60008060006060848603121561255457600080fd5b61255d8461250b565b925060208401359150604084013567ffffffffffffffff81111561258057600080fd5b61258c86828701612376565b9150509250925092565b6040815260006125a960408301856124c4565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156125e8576125e86125c0565b500390565b600063ffffffff80831681851680830382111561260c5761260c6125c0565b01949350505050565b848152836020820152826040820152608060608201526000611e4660808301846124c4565b805160208083015191908110156122b25760001960209190910360031b1b16919050565b60008219821115612671576126716125c0565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611e4660808301846124c4565b838152821515602082015260606040820152600061153260608301846124c4565b600060018060a01b03808816835260a060208401526126e860a08401886124c4565b9516604083015250606081019290925260809091015292915050565b60008060006060848603121561271957600080fd5b8351612724816122d7565b602085015160409095015190969495509392505050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161278381604c850160208701612498565b91909101604c01979650505050505050565b600181815b808511156127d05781600019048211156127b6576127b66125c0565b808516156127c357918102915b93841c939080029061279a565b509250929050565b6000826127e757506001610b4e565b816127f457506000610b4e565b816001811461280a576002811461281457612830565b6001915050610b4e565b60ff841115612825576128256125c0565b50506001821b610b4e565b5060208310610133831016604e8410600b8410161715612853575081810a610b4e565b61285d8383612795565b8060001904821115612871576128716125c0565b029392505050565b6000610e6883836127d8565b634e487b7160e01b600052603260045260246000fd5b6000826128b857634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016128cf576128cf6125c0565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600060ff821660ff841680821015612906576129066125c0565b90039392505050565b600060ff821660ff84168160ff0481118215151615612871576128716125c0565b602081526000610e6860208301846124c4565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611e4656fea2646970667358221220449cbbd6ceb9d0007b9599cd40cd97d51ec289397e94637ddb12f55eab6a786064736f6c634300080f0033";

type MultichainL1ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainL1ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainL1Connector__factory extends ContractFactory {
  constructor(...args: MultichainL1ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainL1Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _mirrorChainId,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<MultichainL1Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _mirrorChainId,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): MultichainL1Connector {
    return super.attach(address) as MultichainL1Connector;
  }
  override connect(signer: Signer): MultichainL1Connector__factory {
    return super.connect(signer) as MultichainL1Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainL1ConnectorInterface {
    return new utils.Interface(_abi) as MultichainL1ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainL1Connector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainL1Connector;
  }
}
