/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Replica,
  ReplicaInterface,
} from "../../../../contracts/nomad-core/contracts/Replica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldUpdater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newUpdater",
        type: "address",
      },
    ],
    name: "NewUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousConfirmAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newConfirmAt",
        type: "uint256",
      },
    ],
    name: "SetConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "SetOptimisticTimeout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_confirmAt",
        type: "uint256",
      },
    ],
    name: "setConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "setOptimisticTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum NomadBase.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162002584380380620025848339810160408190526200003491620000d9565b63ffffffff8316608052620cf850821015620000865760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b60448201526064015b60405180910390fd5b613a98811015620000c95760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b60448201526064016200007d565b60a09190915260c052506200011b565b600080600060608486031215620000ef57600080fd5b835163ffffffff811681146200010457600080fd5b602085015160409095015190969495509392505050565b60805160a05160c05161241d62000167600039600081816101a501526108b001526000818161036b015281816108d1015261095801526000818161029a0152610764015261241d6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638d3638f4116100de578063b31c01fb11610097578063df034cd011610071578063df034cd01461038d578063e7e7a7b7146103a0578063f2fde38b146103b3578063ffa1ad74146103c657600080fd5b8063b31c01fb1461033f578063c19d93fb14610352578063d88beda21461036657600080fd5b80638d3638f4146102955780638da5cb5b146102d1578063928bc4b2146102f6578063961681dc146103095780639d54f41914610319578063a3f81d681461032c57600080fd5b806345630b1a1161013057806345630b1a146102365780636188af0e1461023e57806367a6771d14610251578063715018a61461025a57806371bfb7b814610262578063885b5e2d1461028257600080fd5b8063088b5ed31461017857806319d9d21a1461018d57806325e3beda146101a05780632bbd59ca146101da578063371d30711461020a578063399926681461022d575b600080fd5b61018b610186366004611d04565b6103e0565b005b61018b61019b366004611d68565b61043e565b6101c77f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101fd6101e8366004611df7565b609a6020526000908152604090205460ff1681565b6040516101d19190611e44565b61021d610218366004611e69565b6105a8565b60405190151581526020016101d1565b6101c760975481565b6101c7610687565b61018b61024c366004611f44565b6106a1565b6101c760665481565b61018b6106f7565b6101c7610270366004611df7565b60996020526000908152604090205481565b61018b610290366004611df7565b61070b565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101d1565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101d1565b61021d610304366004611f8d565b61074e565b6096546102bc9063ffffffff1681565b61018b610327366004611fde565b610a9c565b61021d61033a366004611df7565b610ab0565b61018b61034d366004611ff9565b610ad8565b6065546101fd90600160a01b900460ff1681565b6101c77f000000000000000000000000000000000000000000000000000000000000000081565b6065546102de906001600160a01b031681565b61018b6103ae366004612049565b610c32565b61018b6103c1366004611fde565b610d76565b6103ce600081565b60405160ff90911681526020016101d1565b6103e8610dec565b60008281526099602090815260409182902080549084905582518181529182018490529184917fe906d465281862f8f37a1bdd7d810e50347f06b0b493701cca6ccb8e6a7b2694910160405180910390a2505050565b6002606554600160a01b900460ff16600281111561045e5761045e611e10565b0361049f5760405162461bcd60e51b815260206004820152600c60248201526b6661696c656420737461746560a01b60448201526064015b60405180910390fd5b604080516020601f86018190048102820181019092528481526104e19188918835918890889081908401838280828437600092019190915250610e4692505050565b8015610530575061053086866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e4692505050565b801561054157508435602086013514155b156105a05761055e6065805460ff60a01b1916600160a11b179055565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f868686868686604051610597969594939291906120d5565b60405180910390a15b505050505050565b6000806000858152609a602052604090205460ff1660028111156105ce576105ce611e10565b146106115760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610496565b6000610647858560208060200260405190810160405280929190826020800280828437600092019190915250879150610eb99050565b905061065281610ab0565b1561067a5750506000838152609a60205260409020805460ff19166001908117909155610680565b60009150505b9392505050565b60965460009061069c9063ffffffff16610f6a565b905090565b6106b3838051906020012083836105a8565b6106e85760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610496565b6106f18361074e565b50505050565b6106ff610dec565b6107096000610fb3565b565b610713610dec565b60978190556040518181527fa8de34d9c26dbb20579bc8c8957813e3168af7c5092d7668390e34471dc4ffb49060200160405180910390a150565b60008061075b8382611005565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661079362ffffff19831661102b565b63ffffffff16146107d55760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610496565b60006107e662ffffff198316611040565b905060016000828152609a602052604090205460ff16600281111561080d5761080d611e10565b146108445760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610496565b60985460ff166001146108865760405162461bcd60e51b815260206004820152600a602482015269085c99595b9d1c985b9d60b21b6044820152606401610496565b6098805460ff199081169091556000828152609a60205260409020805490911660021790556108f57f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061212d565b5a101561092d5760405162461bcd60e51b8152600401610496906020808252600490820152632167617360e01b604082015260600190565b600061093e62ffffff198416611089565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061099b62ffffff19891661109a565b6109aa62ffffff198a166110ae565b6109b962ffffff198b166110c3565b6109d66109cb62ffffff198d166110d8565b62ffffff1916611106565b6040516024016109e9949392919061219d565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115610a32578394505b848252846000602084013e81604051610a4b91906121cc565b604051908190038120908a15159089907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890600090a450506098805460ff1916600117905550949695505050505050565b610aa4610dec565b610aad8161114f565b50565b600081815260996020526040812054808203610acf5750600092915050565b42101592915050565b6002606554600160a01b900460ff166002811115610af857610af8611e10565b03610b345760405162461bcd60e51b815260206004820152600c60248201526b6661696c656420737461746560a01b6044820152606401610496565b6066548314610b7a5760405162461bcd60e51b81526020600482015260126024820152716e6f742063757272656e742075706461746560701b6044820152606401610496565b610b85838383610e46565b610bc05760405162461bcd60e51b815260206004820152600c60248201526b21757064617465722073696760a01b6044820152606401610496565b609754610bcd904261212d565b6000838152609960205260409081902091909155606683905560965490518391859163ffffffff909116907f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b290610c259086906121e8565b60405180910390a4505050565b600054610100900460ff1615808015610c525750600054600160ff909116105b80610c6c5750303b158015610c6c575060005460ff166001145b610c885760405162461bcd60e51b8152600401610496906121fb565b6000805460ff191660011790558015610cab576000805461ff0019166101001790555b610cb4846111b1565b60988054600160ff1990911681179091556096805463ffffffff191663ffffffff88161790556066849055600084815260996020908152604091829020929092556097849055518381527fa8de34d9c26dbb20579bc8c8957813e3168af7c5092d7668390e34471dc4ffb4910160405180910390a18015610d6f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b610d7e610dec565b6001600160a01b038116610de35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610496565b610aad81610fb3565b6033546001600160a01b031633146107095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610496565b600080610e51610687565b604080516020810192909252810186905260608101859052608001604051602081830303815290604052805190602001209050610e8d81611294565b6065549091506001600160a01b0316610ea682856112cf565b6001600160a01b03161495945050505050565b8260005b6020811015610f6257600183821c166000858360208110610ee057610ee0612096565b6020020151905081600103610f20576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350610f4d565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b50508080610f5a90612249565b915050610ebd565b509392505050565b6040516001600160e01b031960e083901b166020820152641393d3505160da1b60248201526000906029015b604051602081830303815290604052805190602001209050919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b81516000906020840161102064ffffffffff851682846112eb565b925050505b92915050565b600061102562ffffff19831660286004611332565b6000806110568360781c6001600160601b031690565b6001600160601b0316905060006110768460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061102561109783611362565b90565b600061102562ffffff198316826004611332565b600061102562ffffff19831660246004611332565b600061102562ffffff19831660046020611373565b6000611025604c6110f681601886901c6001600160601b0316612262565b62ffffff198516919060006114cf565b606060008061111e8460181c6001600160601b031690565b6001600160601b03169050604051915081925061113e848360200161154b565b508181016020016040529052919050565b606580546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f0f20622a7af9e952a6fec654a196f29e04477b5d335772c26902bec35cc9f22a91015b60405180910390a15050565b600054610100900460ff16158080156111d15750600054600160ff909116105b806111eb5750303b1580156111eb575060005460ff166001145b6112075760405162461bcd60e51b8152600401610496906121fb565b6000805460ff19166001179055801561122a576000805461ff0019166101001790555b6112326116ac565b61123b8261114f565b6065805460ff60a01b1916600160a01b1790558015611290576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016111a5565b5050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610f96565b60008060006112de85856116db565b91509150610f6281611720565b6000806112f8838561212d565b9050604051811115611308575060005b8060000361131d5762ffffff19915050610680565b5050606092831b9190911790911b1760181b90565b600061133f826020612279565b61134a90600861229c565b60ff16611358858585611373565b901c949350505050565b600061102562ffffff198316602c60205b60008160ff1660000361138857506000610680565b61139b8460181c6001600160601b031690565b6001600160601b03166113b160ff84168561212d565b1115611415576113fc6113cd8560781c6001600160601b031690565b6001600160601b03166113e98660181c6001600160601b031690565b6001600160601b0316858560ff166118d6565b60405162461bcd60e51b815260040161049691906121e8565b60208260ff16111561148f5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610496565b6008820260006114a88660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806114e58660781c6001600160601b031690565b6001600160601b031690506114f986611944565b84611504878461212d565b61150e919061212d565b11156115215762ffffff19915050611543565b61152b858261212d565b905061153f8364ffffffffff1682866112eb565b9150505b949350505050565b600062ffffff19808416036115b35760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610496565b6115bc8361197d565b61161c5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610496565b60006116318460181c6001600160601b031690565b6001600160601b0316905060006116518560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156116715760206060fd5b8285848460045afa506116a26116878760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b600054610100900460ff166116d35760405162461bcd60e51b8152600401610496906122c5565b6107096119ba565b60008082516041036117115760208301516040840151606085015160001a611705878285856119ea565b94509450505050611719565b506000905060025b9250929050565b600081600481111561173457611734611e10565b0361173c5750565b600181600481111561175057611750611e10565b0361179d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610496565b60028160048111156117b1576117b1611e10565b036117fe5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610496565b600381600481111561181257611812611e10565b0361186a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610496565b600481600481111561187e5761187e611e10565b03610aad5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610496565b606060006118e386611ad7565b91505060006118f186611ad7565b91505060006118ff86611ad7565b915050600061190d86611ad7565b915050838383836040516020016119279493929190612310565b604051602081830303815290604052945050505050949350505050565b60006119598260181c6001600160601b031690565b61196c8360781c6001600160601b031690565b016001600160601b03169050919050565b60006119898260d81c90565b64ffffffffff1664ffffffffff036119a357506000919050565b60006119ae83611944565b60405110199392505050565b600054610100900460ff166119e15760405162461bcd60e51b8152600401610496906122c5565b61070933610fb3565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a215750600090506003611ace565b8460ff16601b14158015611a3957508460ff16601c14155b15611a4a5750600090506004611ace565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a9e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ac757600060019250925050611ace565b9150600090505b94509492505050565b600080601f5b600f8160ff161115611b2c576000611af682600861229c565b60ff1685901c9050611b0781611b85565b61ffff16841793508160ff16601014611b2257601084901b93505b5060001901611add565b50600f5b60ff8160ff161015611b7f576000611b4982600861229c565b60ff1685901c9050611b5a81611b85565b61ffff16831792508160ff16600014611b7557601083901b92505b5060001901611b30565b50915091565b6000611b9760048360ff16901c611bb7565b60ff1661ffff919091161760081b611bae82611bb7565b60ff1617919050565b600060f08083179060ff82169003611bd25750603092915050565b8060ff1660f103611be65750603192915050565b8060ff1660f203611bfa5750603292915050565b8060ff1660f303611c0e5750603392915050565b8060ff1660f403611c225750603492915050565b8060ff1660f503611c365750603592915050565b8060ff1660f603611c4a5750603692915050565b8060ff1660f703611c5e5750603792915050565b8060ff1660f803611c725750603892915050565b8060ff1660f903611c865750603992915050565b8060ff1660fa03611c9a5750606192915050565b8060ff1660fb03611cae5750606292915050565b8060ff1660fc03611cc25750606392915050565b8060ff1660fd03611cd65750606492915050565b8060ff1660fe03611cea5750606592915050565b8060ff1660ff03611cfe5750606692915050565b50919050565b60008060408385031215611d1757600080fd5b50508035926020909101359150565b60008083601f840112611d3857600080fd5b50813567ffffffffffffffff811115611d5057600080fd5b60208301915083602082850101111561171957600080fd5b60008060008060008060a08789031215611d8157600080fd5b863595506060870188811115611d9657600080fd5b6020880195503567ffffffffffffffff80821115611db357600080fd5b611dbf8a838b01611d26565b90965094506080890135915080821115611dd857600080fd5b50611de589828a01611d26565b979a9699509497509295939492505050565b600060208284031215611e0957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110610aad57634e487b7160e01b600052602160045260246000fd5b60208101611e5183611e26565b91905290565b80610400810183101561102557600080fd5b60008060006104408486031215611e7f57600080fd5b83359250611e908560208601611e57565b915061042084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ec857600080fd5b813567ffffffffffffffff80821115611ee357611ee3611ea1565b604051601f8301601f19908116603f01168101908282118183101715611f0b57611f0b611ea1565b81604052838152866020858801011115611f2457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006104408486031215611f5a57600080fd5b833567ffffffffffffffff811115611f7157600080fd5b611f7d86828701611eb7565b935050611e908560208601611e57565b600060208284031215611f9f57600080fd5b813567ffffffffffffffff811115611fb657600080fd5b61154384828501611eb7565b80356001600160a01b0381168114611fd957600080fd5b919050565b600060208284031215611ff057600080fd5b61068082611fc2565b60008060006060848603121561200e57600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561203357600080fd5b61203f86828701611eb7565b9150509250925092565b6000806000806080858703121561205f57600080fd5b843563ffffffff8116811461207357600080fd5b935061208160208601611fc2565b93969395505050506040820135916060013590565b634e487b7160e01b600052603260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152604086602083013760a0606082015260006120f760a0830186886120ac565b828103608084015261210a8185876120ac565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561214057612140612117565b500190565b60005b83811015612160578181015183820152602001612148565b838111156106f15750506000910152565b60008151808452612189816020860160208601612145565b601f01601f19169290920160200192915050565b600063ffffffff8087168352808616602084015250836040830152608060608301526116a26080830184612171565b600082516121de818460208701612145565b9190910192915050565b6020815260006106806020830184612171565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006001820161225b5761225b612117565b5060010190565b60008282101561227457612274612117565b500390565b600060ff821660ff84168082101561229357612293612117565b90039392505050565b600060ff821660ff84168160ff04811182151516156122bd576122bd612117565b029392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016116a256fea2646970667358221220dd0b6ff7b59edc3bdddf7dffab9898df1a0dd040e7d6c948dd8ceb68646b463164736f6c634300080f0033";

type ReplicaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReplicaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Replica__factory extends ContractFactory {
  constructor(...args: ReplicaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _localDomain: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Replica> {
    return super.deploy(
      _localDomain,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<Replica>;
  }
  override getDeployTransaction(
    _localDomain: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): Replica {
    return super.attach(address) as Replica;
  }
  override connect(signer: Signer): Replica__factory {
    return super.connect(signer) as Replica__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReplicaInterface {
    return new utils.Interface(_abi) as ReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Replica {
    return new Contract(address, _abi, signerOrProvider) as Replica;
  }
}
