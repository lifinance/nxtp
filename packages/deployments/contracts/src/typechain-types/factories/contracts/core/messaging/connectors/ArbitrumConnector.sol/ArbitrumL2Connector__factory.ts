/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ArbitrumL2Connector,
  ArbitrumL2ConnectorInterface,
} from "../../../../../../contracts/core/messaging/connectors/ArbitrumConnector.sol/ArbitrumL2Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002d6638038062002d66833981016040819052620000359162000295565b8787878787878787878063ffffffff16600003620000845760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000c95760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064016200007b565b6001600160a01b038516620001105760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016200007b565b6200011b3362000204565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001a15760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b60448201526064016200007b565b613a98811015620001e45760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b60448201526064016200007b565b610120919091526101405250620003229c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805163ffffffff811681146200027857600080fd5b919050565b80516001600160a01b03811681146200027857600080fd5b600080600080600080600080610100898b031215620002b357600080fd5b620002be8962000263565b9750620002ce60208a0162000263565b9650620002de60408a016200027d565b9550620002ee60608a016200027d565b9450620002fe60808a016200027d565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e0516101005161012051610140516129a3620003c3600039600081816102530152610ea101526000818161054301528181610ec20152610f49015260006102e6015260008181610395015261083b01526000818161051c015281816105d4015281816110ef01526111b401526000818161035b01528181610bc10152610da301526000818161041001526104b701526129a36000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639fa92f9d11610130578063d1851c92116100b8578063ebf0c7171161007c578063ebf0c71714610578578063ee250e0614610580578063f38a267b14610589578063fa31de01146105ac578063fd54b228146105bf57600080fd5b8063d1851c92146104f4578063d232c22014610505578063d69f9d6114610517578063d88beda21461053e578063db1b76591461056557600080fd5b8063b697f531116100ff578063b697f53114610479578063b95a20011461048c578063c2fb26a6146104b2578063c5b350df146104d9578063cc394283146104e157600080fd5b80639fa92f9d14610445578063b1f8100d1461044b578063b2f876431461045e578063b46300ec1461047157600080fd5b806352a9674b116101be5780636a42b8f8116101825780636a42b8f8146103ea578063715018a6146103f357806382646a58146103fb5780638d3638f41461040e5780638da5cb5b1461043457600080fd5b806352a9674b146103565780635bd11efc1461037d5780635f61e3ec146103905780636188af0e146103cf57806365eaf11b146103e257600080fd5b80632bbd59ca116102055780632bbd59ca146102b15780633490334a146102e15780633cf52ffb1461031d5780634ff746f6146103255780635190bc531461033a57600080fd5b806306661abd1461023757806325e3beda1461024e578063272efc691461027557806329460bd0146102a8575b600080fd5b6023545b6040519081526020015b60405180910390f35b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b61029861028336600461226c565b60286020526000908152604090205460ff1681565b6040519015158152602001610245565b61023b60255481565b6102d46102bf366004612289565b602a6020526000908152604090205460ff1681565b60405161024591906122b8565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610245565b60025461023b565b610338610333366004612383565b6105c9565b005b61029861034836600461226c565b6001600160a01b0316301490565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b61033861038b36600461226c565b610678565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610245565b6103386103dd3660046123b8565b61070c565b61023b610762565b62093a8061023b565b610338610771565b610338610409366004612383565b610830565b7f0000000000000000000000000000000000000000000000000000000000000000610308565b6000546001600160a01b03166103b7565b306103b7565b61033861045936600461226c565b6108d1565b61033861046c36600461226c565b610979565b6103386109f5565b61033861048736600461226c565b610a2b565b61030861049a366004612431565b60296020526000908152604090205463ffffffff1681565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b610338610aaa565b6024546103b7906001600160a01b031681565b6001546001600160a01b03166103b7565b6000546001600160a01b031615610298565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b61029861057336600461226c565b610b05565b61023b610b16565b61023b60265481565b610298610597366004612289565b60276020526000908152604090205460ff1681565b6103386105ba36600461244c565b610b22565b60235461023b9081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106335760405162461bcd60e51b815260040161062a9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61063c81610c5f565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161066d9291906124fb565b60405180910390a150565b6000546001600160a01b031633146106a3576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b61071e83805190602001208383610cff565b6107535760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b604482015260640161062a565b61075c83610d8d565b50505050565b600061076c610b16565b905090565b6000546001600160a01b0316331461079c576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107bf57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107d1919061253b565b116107ef576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610819576040516323295ef960e01b815260040160405180910390fd5b60015461082e906001600160a01b0316611076565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108975760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161062a565b6108a0816110d5565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161066d9291906124fb565b6000546001600160a01b031633146108fc576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561092157506001600160a01b03811615155b1561093f576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361096d57604051634a2fb73f60e11b815260040160405180910390fd5b6109768161115f565b50565b6000546001600160a01b031633146109a4576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad910161066d565b60006109ff610b16565b604051602001610a1191815260200190565b60405160208183030381529060405290506108a0816110d5565b6000546001600160a01b03163314610a56576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87910161066d565b6001546001600160a01b03163314610ad5576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610ae7919061253b565b116108195760405163d39c12bb60e01b815260040160405180910390fd5b6000610b10826111ad565b92915050565b600061076c60036111f3565b3360009081526028602052604090205460ff16610b705760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161062a565b63ffffffff80841660009081526029602052604090205416610b93816001612552565b63ffffffff8581166000908152602960205260408120805463ffffffff191693909216929092179055610bea7f00000000000000000000000000000000000000000000000000000000000000003384888888611206565b80516020820120909150610bff60038261123e565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610c2c60235490565b610c36919061253b565b610c3e610b16565b85604051610c4f949392919061257a565b60405180910390a1505050505050565b602454610c74906001600160a01b03166111ad565b610cb35760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161062a565b8051602014610cee5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161062a565b610976610cfa8261259f565b61135b565b6000806000858152602a602052604090205460ff166002811115610d2557610d256122a2565b14610d685760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161062a565b506000838152602a60205260409020805460ff191660019081179091555b9392505050565b600080610d9a838261139d565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610dd262ffffff1983166113c1565b63ffffffff1614610e145760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161062a565b6000610e2562ffffff1983166113d6565b905060016000828152602a602052604090205460ff166002811115610e4c57610e4c6122a2565b14610e835760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161062a565b6000818152602a60205260409020805460ff19166002179055610ee67f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006125c3565b5a1015610f1e5760405162461bcd60e51b815260040161062a906020808252600490820152632167617360e01b604082015260600190565b6000610f2f62ffffff19841661141f565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610f8c62ffffff198916611430565b610f9b62ffffff198a16611444565b610faa62ffffff198b16611459565b610fc7610fbc62ffffff198d1661146e565b62ffffff191661149c565b604051602401610fda94939291906125db565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611023578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516110619392919061260a565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6024546040516349460b4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a9261112a929190911690859060040161262b565b600060405180830381600087803b15801561114457600080fd5b505af1158015611158573d6000803e3d6000fd5b5050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006111d87f00000000000000000000000000000000000000000000000000000000000000006114e5565b6001600160a01b0316826001600160a01b0316149050919050565b6000610b108261120161156f565b611a30565b60608686868686866040516020016112239695949392919061264f565b60405160208183030381529060405290509695505050505050565b600161124c6020600261278d565b611256919061253b565b82602001541061129b5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b604482015260640161062a565b60018260200160008282546112b091906125c3565b9091555050602082015460005b602081101561134d57816001166001036112ec57828482602081106112e4576112e4612799565b015550505050565b8381602081106112fe576112fe612799565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261133991906127af565b915080611345816127d1565b9150506112bd565b506113566127ea565b505050565b6026546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602655565b8151600090602084016113b864ffffffffff85168284611b02565b95945050505050565b6000610b1062ffffff19831660286004611b49565b6000806113ec8360781c6001600160601b031690565b6001600160601b03169050600061140c8460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610b1061142d83611b79565b90565b6000610b1062ffffff198316826004611b49565b6000610b1062ffffff19831660246004611b49565b6000610b1062ffffff19831660046020611b8a565b6000610b10604c61148c81601886901c6001600160601b031661253b565b62ffffff19851691906000611ce6565b60606000806114b48460181c6001600160601b031690565b6001600160601b0316905060405191508192506114d48483602001611d62565b508181016020016040529052919050565b60006114f082611ec3565b61150d5760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561154b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190612800565b611577612238565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611afa57600182821c166000868360208110611a5d57611a5d612799565b0154905081600103611a9a576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611ae5565b84868460208110611aad57611aad612799565b6020020151604051602001611acc929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611af2906127d1565b915050611a3a565b505092915050565b600080611b0f83856125c3565b9050604051811115611b1f575060005b80600003611b345762ffffff19915050610d86565b5050606092831b9190911790911b1760181b90565b6000611b5682602061281d565b611b61906008612840565b60ff16611b6f858585611b8a565b901c949350505050565b6000610b1062ffffff198316602c60205b60008160ff16600003611b9f57506000610d86565b611bb28460181c6001600160601b031690565b6001600160601b0316611bc860ff8416856125c3565b1115611c2c57611c13611be48560781c6001600160601b031690565b6001600160601b0316611c008660181c6001600160601b031690565b6001600160601b0316858560ff16611f27565b60405162461bcd60e51b815260040161062a9190612861565b60208260ff161115611ca65760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161062a565b600882026000611cbf8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611cfc8660781c6001600160601b031690565b6001600160601b03169050611d1086611f95565b84611d1b87846125c3565b611d2591906125c3565b1115611d385762ffffff19915050611d5a565b611d4285826125c3565b9050611d568364ffffffffff168286611b02565b9150505b949350505050565b600062ffffff1980841603611dca5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161062a565b611dd383611fce565b611e335760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161062a565b6000611e488460181c6001600160601b031690565b6001600160601b031690506000611e688560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611e885760206060fd5b8285848460045afa50611eb9611e9e8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190612874565b60606000611f348661200b565b9150506000611f428661200b565b9150506000611f508661200b565b9150506000611f5e8661200b565b91505083838383604051602001611f789493929190612896565b604051602081830303815290604052945050505050949350505050565b6000611faa8260181c6001600160601b031690565b611fbd8360781c6001600160601b031690565b016001600160601b03169050919050565b6000611fda8260d81c90565b64ffffffffff1664ffffffffff03611ff457506000919050565b6000611fff83611f95565b60405110199392505050565b600080601f5b600f8160ff16111561206057600061202a826008612840565b60ff1685901c905061203b816120b9565b61ffff16841793508160ff1660101461205657601084901b93505b5060001901612011565b50600f5b60ff8160ff1610156120b357600061207d826008612840565b60ff1685901c905061208e816120b9565b61ffff16831792508160ff166000146120a957601083901b92505b5060001901612064565b50915091565b60006120cb60048360ff16901c6120eb565b60ff1661ffff919091161760081b6120e2826120eb565b60ff1617919050565b600060f08083179060ff821690036121065750603092915050565b8060ff1660f10361211a5750603192915050565b8060ff1660f20361212e5750603292915050565b8060ff1660f3036121425750603392915050565b8060ff1660f4036121565750603492915050565b8060ff1660f50361216a5750603592915050565b8060ff1660f60361217e5750603692915050565b8060ff1660f7036121925750603792915050565b8060ff1660f8036121a65750603892915050565b8060ff1660f9036121ba5750603992915050565b8060ff1660fa036121ce5750606192915050565b8060ff1660fb036121e25750606292915050565b8060ff1660fc036121f65750606392915050565b8060ff1660fd0361220a5750606492915050565b8060ff1660fe0361221e5750606592915050565b8060ff1660ff036122325750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b038116811461097657600080fd5b60006020828403121561227e57600080fd5b8135610d8681612257565b60006020828403121561229b57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106122da57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261230757600080fd5b813567ffffffffffffffff80821115612322576123226122e0565b604051601f8301601f19908116603f0116810190828211818310171561234a5761234a6122e0565b8160405283815286602085880101111561236357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561239557600080fd5b813567ffffffffffffffff8111156123ac57600080fd5b611d5a848285016122f6565b600080600061044084860312156123ce57600080fd5b833567ffffffffffffffff8111156123e557600080fd5b6123f1868287016122f6565b93505061042084018581111561240657600080fd5b60208501925080359150509250925092565b803563ffffffff8116811461242c57600080fd5b919050565b60006020828403121561244357600080fd5b610d8682612418565b60008060006060848603121561246157600080fd5b61246a84612418565b925060208401359150604084013567ffffffffffffffff81111561248d57600080fd5b612499868287016122f6565b9150509250925092565b60005b838110156124be5781810151838201526020016124a6565b8381111561075c5750506000910152565b600081518084526124e78160208601602086016124a3565b601f01601f19169290920160200192915050565b60408152600061250e60408301856124cf565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561254d5761254d612525565b500390565b600063ffffffff80831681851680830382111561257157612571612525565b01949350505050565b848152836020820152826040820152608060608201526000611eb960808301846124cf565b805160208083015191908110156122325760001960209190910360031b1b16919050565b600082198211156125d6576125d6612525565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611eb960808301846124cf565b83815282151560208201526060604082015260006113b860608301846124cf565b6001600160a01b0383168152604060208201819052600090611d5a908301846124cf565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161269781604c8501602087016124a3565b91909101604c01979650505050505050565b600181815b808511156126e45781600019048211156126ca576126ca612525565b808516156126d757918102915b93841c93908002906126ae565b509250929050565b6000826126fb57506001610b10565b8161270857506000610b10565b816001811461271e576002811461272857612744565b6001915050610b10565b60ff84111561273957612739612525565b50506001821b610b10565b5060208310610133831016604e8410600b8410161715612767575081810a610b10565b61277183836126a9565b806000190482111561278557612785612525565b029392505050565b6000610d8683836126ec565b634e487b7160e01b600052603260045260246000fd5b6000826127cc57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016127e3576127e3612525565b5060010190565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561281257600080fd5b8151610d8681612257565b600060ff821660ff84168082101561283757612837612525565b90039392505050565b600060ff821660ff84168160ff048111821515161561278557612785612525565b602081526000610d8660208301846124cf565b60006020828403121561288657600080fd5b81518015158114610d8657600080fd5b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611eb956fea26469706673582212203d7c03ac7c26de3a1ac32c8a5581cd02c435656a60297fae77753d43c457bd7e64736f6c634300080f0033";

type ArbitrumL2ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumL2ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumL2Connector__factory extends ContractFactory {
  constructor(...args: ArbitrumL2ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumL2Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<ArbitrumL2Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumL2Connector {
    return super.attach(address) as ArbitrumL2Connector;
  }
  override connect(signer: Signer): ArbitrumL2Connector__factory {
    return super.connect(signer) as ArbitrumL2Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumL2ConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumL2ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumL2Connector {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumL2Connector;
  }
}
