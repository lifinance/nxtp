/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  OptimismAMB,
  OptimismAMBInterface,
} from "../../../../../contracts/messaging/connectors/OptimismConnector.sol/OptimismAMB";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "_gasLimit",
        type: "uint32",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xDomainMessageSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class OptimismAMB__factory {
  static readonly abi = _abi;
  static createInterface(): OptimismAMBInterface {
    return new utils.Interface(_abi) as OptimismAMBInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismAMB {
    return new Contract(address, _abi, signerOrProvider) as OptimismAMB;
  }
}
