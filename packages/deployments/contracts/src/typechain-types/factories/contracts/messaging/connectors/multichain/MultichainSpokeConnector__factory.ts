/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b506040516200353a3803806200353a8339810160408190526200003591620004f8565b89818d8d838d8d8d8d8d8d8d8d808b8b8b8b8b8b6200005433620003bd565b8563ffffffff166000036200009f5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000eb5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000096565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e052821615620001235762000123826200041c565b80156200013557620001358162000485565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b03909616610100026001600160a81b031990961695909517909455505060016006555050620cf850851015620002025760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000096565b613a98841015620002455760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000096565b6101208590526101408490526001600160a01b038216620002985760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000096565b506001600160a01b03166101005260075550505060008690039450620002f793505050505760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000096565b816001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000336573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035c9190620005c0565b6001600160a01b0316610160819052620003a55760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000096565b6101805250620005e59b505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620004db57600080fd5b919050565b80516001600160a01b0381168114620004db57600080fd5b6000806000806000806000806000806000806101808d8f0312156200051c57600080fd5b620005278d620004c6565b9b506200053760208e01620004c6565b9a506200054760408e01620004e0565b99506200055760608e01620004e0565b98506200056760808e01620004e0565b975060a08d0151965060c08d0151955060e08d015194506101008d01519350620005956101208e01620004e0565b9250620005a66101408e01620004e0565b91506101608d015190509295989b509295989b509295989b565b600060208284031215620005d357600080fd5b620005de82620004e0565b9392505050565b60805160a05160c05160e0516101005161012051610140516101605161018051612e89620006b160003960008181611ef5015261204101526000611f9e0152600081816102d401526117b6015260008181610665015281816117d7015261185e01526000818161054d01528181610aed01528181610f2401526112a10152600061027e0152600061042601526000818161063e0152818161076a01528181611b2a0152611b560152600081816103e1015281816104a90152818161125201526116b80152612e896000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80638da5cb5b11610151578063b95a2001116100c3578063d232c22011610087578063d232c22014610614578063d2a3cc7114610626578063d69f9d6114610639578063d88beda214610660578063db1b765914610687578063fa31de011461069a57600080fd5b8063b95a2001146105b9578063c5b350df146105df578063cc394283146105e7578063cf796c75146105fa578063d1851c921461060357600080fd5b8063a01892a511610115578063a01892a514610548578063ad9c0c2e1461056f578063b1f8100d14610578578063b2f876431461058b578063b46300ec1461059e578063b697f531146105a657600080fd5b80638da5cb5b146104cd57806398c9f2b9146104de5780639abaf479146105015780639d3117c7146105225780639fa92f9d1461054257600080fd5b806352a9674b116101ea5780636a42b8f8116101ae5780636a42b8f8146104685780636b04a933146104715780636eb67a5114610484578063715018a6146104975780638456cb591461049f5780638d3638f4146104a757600080fd5b806352a9674b146103dc5780635bd11efc146104035780635c975abb146104165780635f61e3ec1461042157806365eaf11b1461046057600080fd5b8063301f07c31161023c578063301f07c3146103675780633cf52ffb1461038a5780633f4ba83a146103925780634ff746f61461039a578063508a109b146103ad5780635190bc53146103c057600080fd5b806314168416146102795780631eeaabea146102ba57806325e3beda146102cf578063272efc69146103045780632bbd59ca14610337575b600080fd5b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102cd6102c836600461272f565b6106ad565b005b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102b1565b61032761031236600461275d565b600b6020526000908152604090205460ff1681565b60405190151581526020016102b1565b61035a61034536600461272f565b600d6020526000908152604090205460ff1681565b6040516102b19190612790565b61032761037536600461272f565b60096020526000908152604090205460ff1681565b6002546102f6565b6102cd610722565b6102cd6103a836600461285b565b61075f565b6102cd6103bb366004612890565b610805565b6103276103ce36600461275d565b6001600160a01b0316301490565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6102cd61041136600461275d565b610ab2565b60055460ff16610327565b6104487f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b6102f6610ae9565b62093a806102f6565b6102cd61047f36600461272f565b610b72565b6102cd61049236600461272f565b610c3d565b6102cd610c71565b6102cd610d2e565b7f00000000000000000000000000000000000000000000000000000000000000006102a0565b6000546001600160a01b0316610448565b6103276104ec36600461272f565b600a6020526000908152604090205460ff1681565b61051461050f36600461285b565b610de5565b6040516102b1929190612984565b6102f661053036600461272f565b60086020526000908152604090205481565b30610448565b6104487f000000000000000000000000000000000000000000000000000000000000000081565b6102f660075481565b6102cd61058636600461275d565b610df7565b6102cd61059936600461275d565b610e9c565b6102cd610f18565b6102cd6105b436600461275d565b611001565b6102a06105c73660046129b8565b600c6020526000908152604090205463ffffffff1681565b6102cd611080565b600354610448906001600160a01b031681565b6102f660045481565b6001546001600160a01b0316610448565b6000546001600160a01b031615610327565b6102cd61063436600461275d565b6110db565b6104487f000000000000000000000000000000000000000000000000000000000000000081565b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b61032761069536600461275d565b6111a2565b6102f66106a83660046129d3565b6111b3565b6000546001600160a01b031633146106d8576040516311a8a1bb60e31b815260040160405180910390fd5b600754810361071d5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b6000546001600160a01b0316331461074d576040516311a8a1bb60e31b815260040160405180910390fd5b610755611370565b61075d6113b9565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107c05760405162461bcd60e51b81526004016107149060208082526004908201526310a0a6a160e11b604082015260600190565b6107c98161140b565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107fa929190612a2a565b60405180910390a150565b61080d6114ab565b836108445760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610714565b60008585600081811061085957610859612a54565b905060200281019061086b9190612a6a565b6108759080612a8b565b604051610883929190612ad9565b6040518091039020905060006108ea82888860008181106108a6576108a6612a54565b90506020028101906108b89190612a6a565b602001898960008181106108ce576108ce612a54565b90506020028101906108e09190612a6a565b61042001356114f1565b90506108f881868686611596565b6000828152600d60205260409020805460ff191660019081179091555b63ffffffff8116871115610a1c5787878263ffffffff1681811061093b5761093b612a54565b905060200281019061094d9190612a6a565b6109579080612a8b565b604051610965929190612ad9565b6040518091039020925060006109ba848a8a8563ffffffff1681811061098d5761098d612a54565b905060200281019061099f9190612a6a565b6020018b8b8663ffffffff168181106108ce576108ce612a54565b90508281146109f95760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610714565b506000838152600d60205260409020805460ff1916600190811790915501610915565b5060005b63ffffffff8116871115610aa857610a9f88888363ffffffff16818110610a4957610a49612a54565b9050602002810190610a5b9190612a6a565b610a659080612a8b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061164a92505050565b50600101610a20565b5050505050505050565b6000546001600160a01b03163314610add576040516311a8a1bb60e31b815260040160405180910390fd5b610ae681611991565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d9190612ae9565b905090565b6000546001600160a01b03163314610b9d576040516311a8a1bb60e31b815260040160405180910390fd5b610ba5611370565b6000818152600860205260408120549003610bfa5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610714565b60008181526008602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906107fa9083815260200190565b6000546001600160a01b03163314610c68576040516311a8a1bb60e31b815260040160405180910390fd5b610ae6816119fa565b6000546001600160a01b03163314610c9c576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610cbf57604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610cd19190612b18565b11610cef576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610d19576040516323295ef960e01b815260040160405180910390fd5b60015461075d906001600160a01b0316611a3b565b6005546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e9190612b2f565b610dd55760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610714565b610ddd6114ab565b61075d611a9a565b60006060610df28361140b565b915091565b6000546001600160a01b03163314610e22576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610e4757506001600160a01b03811615155b15610e65576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610e9357604051634a2fb73f60e11b815260040160405180910390fd5b610ae681611ad7565b6000546001600160a01b03163314610ec7576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016107fa565b610f206114ab565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa49190612ae9565b604051602001610fb691815260200190565b6040516020818303038152906040529050610fd081611b25565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107fa929190612a2a565b6000546001600160a01b0316331461102c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016107fa565b6001546001600160a01b031633146110ab576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426110bd9190612b18565b11610d195760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314611106576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b036101009091048116908216036111695760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610714565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016107fa565b60006111ad82611b4f565b92915050565b336000908152600b602052604081205460ff166112015760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610714565b63ffffffff8085166000908152600c602052604090205416611224816001612b51565b63ffffffff8681166000908152600c60205260408120805463ffffffff19169390921692909217905561127b7f00000000000000000000000000000000000000000000000000000000000000003384898989611b7b565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113159190612b79565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611347600184612b18565b84876040516113599493929190612b9d565b60405180910390a1509093505050505b9392505050565b60055460ff1661075d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610714565b6113c1611370565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611420906001600160a01b0316611b4f565b61145f5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610714565b805160201461149a5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610714565b610ae66114a682612bc2565b611bb3565b60055460ff161561075d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610714565b6000806000858152600d602052604090205460ff1660028111156115175761151761277a565b1461155a5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610714565b61158e848460208060200260405190810160405280929190826020800280828437600092019190915250869150611cdc9050565b949350505050565b6000848152600a602052604090205460ff166116445760006115e2858460208060200260405190810160405280929190826020800280828437600092019190915250869150611cdc9050565b90508381146116295760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610714565b506000848152600a60205260409020805460ff191660011790555b50505050565b600060026006540361169e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610714565b600260065560006116af8382611d82565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166116e762ffffff198316611da6565b63ffffffff16146117295760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610714565b600061173a62ffffff198316611dbb565b905060016000828152600d602052604090205460ff1660028111156117615761176161277a565b146117985760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610714565b6000818152600d60205260409020805460ff191660021790556117fb7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612be6565b5a10156118335760405162461bcd60e51b8152600401610714906020808252600490820152632167617360e01b604082015260600190565b600061184462ffffff198416611e04565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006118a162ffffff198916611e15565b6118b062ffffff198a16611e29565b6118bf62ffffff198b16611e3e565b6118dc6118d162ffffff198d16611e53565b62ffffff1916611e81565b6040516024016118ef9493929190612bfe565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611938578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a8460405161197693929190612c2d565b60405180910390a15050600160065550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611aa26114ab565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113ee3390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b610ae67f000000000000000000000000000000000000000000000000000000000000000082611eca565b60006111ad7f000000000000000000000000000000000000000000000000000000000000000083611f55565b6060868686868686604051602001611b9896959493929190612c4e565b60405160208183030381529060405290509695505050505050565b80611bf15760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610714565b60008181526008602052604090205415611c445760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610714565b60008181526009602052604090205460ff1615611c995760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610714565b60008181526008602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906107fa9083815260200190565b8260005b6020811015611d7a57600183821c166000858360208110611d0357611d03612a54565b6020020151905081600103611d43576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611d70565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611ce0565b509392505050565b815160009060208401611d9d64ffffffffff85168284612069565b95945050505050565b60006111ad62ffffff198316602860046120b0565b600080611dd18360781c6001600160601b031690565b6001600160601b031690506000611df18460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006111ad611e12836120e0565b90565b60006111ad62ffffff1983168260046120b0565b60006111ad62ffffff198316602460046120b0565b60006111ad62ffffff198316600460206120f1565b60006111ad604c611e7181601886901c6001600160601b0316612b18565b62ffffff1985169190600061224d565b6060600080611e998460181c6001600160601b031690565b6001600160601b031690506040519150819250611eb984836020016122c7565b508181016020016040529052919050565b60405163bd45c4e760e01b81526001600160a01b0383169063bd45c4e790611f1f90859085906000907f0000000000000000000000000000000000000000000000000000000000000000908290600401612ca8565b600060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03841614611f995760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610714565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201e9190612ce6565b5091509150836001600160a01b0316826001600160a01b0316148015611d9d57507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b6000806120768385612be6565b9050604051811115612086575060005b8060000361209b5762ffffff19915050611369565b5050606092831b9190911790911b1760181b90565b60006120bd826020612d1d565b6120c8906008612d40565b60ff166120d68585856120f1565b901c949350505050565b60006111ad62ffffff198316602c60205b60008160ff1660000361210657506000611369565b6121198460181c6001600160601b031690565b6001600160601b031661212f60ff841685612be6565b11156121935761217a61214b8560781c6001600160601b031690565b6001600160601b03166121678660181c6001600160601b031690565b6001600160601b0316858560ff1661241e565b60405162461bcd60e51b81526004016107149190612d69565b60208260ff16111561220d5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610714565b6008820260006122268660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806122638660781c6001600160601b031690565b6001600160601b031690506122778661248c565b846122828784612be6565b61228c9190612be6565b111561229f5762ffffff1991505061158e565b6122a98582612be6565b90506122bd8364ffffffffff168286612069565b9695505050505050565b600062ffffff198084160361232f5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610714565b612338836124c5565b6123985760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610714565b60006123ad8460181c6001600160601b031690565b6001600160601b0316905060006123cd8560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156123ed5760206060fd5b8285848460045afa506122bd6124038760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6060600061242b86612502565b915050600061243986612502565b915050600061244786612502565b915050600061245586612502565b9150508383838360405160200161246f9493929190612d7c565b604051602081830303815290604052945050505050949350505050565b60006124a18260181c6001600160601b031690565b6124b48360781c6001600160601b031690565b016001600160601b03169050919050565b60006124d18260d81c90565b64ffffffffff1664ffffffffff036124eb57506000919050565b60006124f68361248c565b60405110199392505050565b600080601f5b600f8160ff161115612557576000612521826008612d40565b60ff1685901c9050612532816125b0565b61ffff16841793508160ff1660101461254d57601084901b93505b5060001901612508565b50600f5b60ff8160ff1610156125aa576000612574826008612d40565b60ff1685901c9050612585816125b0565b61ffff16831792508160ff166000146125a057601083901b92505b506000190161255b565b50915091565b60006125c260048360ff16901c6125e2565b60ff1661ffff919091161760081b6125d9826125e2565b60ff1617919050565b600060f08083179060ff821690036125fd5750603092915050565b8060ff1660f1036126115750603192915050565b8060ff1660f2036126255750603292915050565b8060ff1660f3036126395750603392915050565b8060ff1660f40361264d5750603492915050565b8060ff1660f5036126615750603592915050565b8060ff1660f6036126755750603692915050565b8060ff1660f7036126895750603792915050565b8060ff1660f80361269d5750603892915050565b8060ff1660f9036126b15750603992915050565b8060ff1660fa036126c55750606192915050565b8060ff1660fb036126d95750606292915050565b8060ff1660fc036126ed5750606392915050565b8060ff1660fd036127015750606492915050565b8060ff1660fe036127155750606592915050565b8060ff1660ff036127295750606692915050565b50919050565b60006020828403121561274157600080fd5b5035919050565b6001600160a01b0381168114610ae657600080fd5b60006020828403121561276f57600080fd5b813561136981612748565b634e487b7160e01b600052602160045260246000fd5b60208101600383106127b257634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126127df57600080fd5b813567ffffffffffffffff808211156127fa576127fa6127b8565b604051601f8301601f19908116603f01168101908282118183101715612822576128226127b8565b8160405283815286602085880101111561283b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561286d57600080fd5b813567ffffffffffffffff81111561288457600080fd5b61158e848285016127ce565b600080600080600061046086880312156128a957600080fd5b853567ffffffffffffffff808211156128c157600080fd5b818801915088601f8301126128d557600080fd5b8135818111156128e457600080fd5b8960208260051b85010111156128f957600080fd5b60209283019750955050860135925061044086018781111561291a57600080fd5b94979396509194604001933592915050565b60005b8381101561294757818101518382015260200161292f565b838111156116445750506000910152565b6000815180845261297081602086016020860161292c565b601f01601f19169290920160200192915050565b821515815260406020820152600061158e6040830184612958565b803563ffffffff811681146129b357600080fd5b919050565b6000602082840312156129ca57600080fd5b6113698261299f565b6000806000606084860312156129e857600080fd5b6129f18461299f565b925060208401359150604084013567ffffffffffffffff811115612a1457600080fd5b612a20868287016127ce565b9150509250925092565b604081526000612a3d6040830185612958565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612a8157600080fd5b9190910192915050565b6000808335601e19843603018112612aa257600080fd5b83018035915067ffffffffffffffff821115612abd57600080fd5b602001915036819003821315612ad257600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215612afb57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612b2a57612b2a612b02565b500390565b600060208284031215612b4157600080fd5b8151801515811461136957600080fd5b600063ffffffff808316818516808303821115612b7057612b70612b02565b01949350505050565b60008060408385031215612b8c57600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006122bd6080830184612958565b805160208083015191908110156127295760001960209190910360031b1b16919050565b60008219821115612bf957612bf9612b02565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526122bd6080830184612958565b8381528215156020820152606060408201526000611d9d6060830184612958565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612c9681604c85016020870161292c565b91909101604c01979650505050505050565b600060018060a01b03808816835260a06020840152612cca60a0840188612958565b9516604083015250606081019290925260809091015292915050565b600080600060608486031215612cfb57600080fd5b8351612d0681612748565b602085015160409095015190969495509392505050565b600060ff821660ff841680821015612d3757612d37612b02565b90039392505050565b600060ff821660ff84168160ff0481118215151615612d6157612d61612b02565b029392505050565b6020815260006113696020830184612958565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016122bd56fea26469706673582212202e66d2348400e24831d262b6447ea117fbf214bb2155f59bc9dc0266122c6bfb64736f6c634300080f0033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
