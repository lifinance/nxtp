/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620029ce380380620029ce833981016040819052620000359162000351565b80858888828888888585858585856200004e3362000186565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d82620001e5565b80156200012f576200012f816200024e565b5050600680546001600160a01b039d8e166001600160a01b031991821617909155600580549c909d169b169a909a17909a55506200017998508b9750506200028f95505050505050565b50505050505050620003dd565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b6007546001600160a01b031615620002fd5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000090565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200033457600080fd5b919050565b80516001600160a01b03811681146200033457600080fd5b600080600080600080600060e0888a0312156200036d57600080fd5b62000378886200031f565b965062000388602089016200031f565b9550620003986040890162000339565b9450620003a86060890162000339565b9350620003b86080890162000339565b925060a08801519150620003cf60c0890162000339565b905092959891949750929550565b60805160a05160c05160e05161259b62000433600039600081816101d20152610ce3015260008181610265015281816105e80152610cbc0152600081816103b201526104180152600061022b015261259b6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063972c4928116100de578063cf796c7511610097578063d69f9d6111610071578063d69f9d61146103ad578063db1b7659146103d4578063de9b771f146103e7578063f953cec7146103fa57600080fd5b8063cf796c7514610381578063d1851c921461038a578063d232c2201461039b57600080fd5b8063972c49281461031a578063aea4e49e1461032d578063b1f8100d14610340578063c0857ba014610353578063c5b350df14610366578063cc3942831461036e57600080fd5b80635f61e3ec1161014b5780636eb67a51116101255780636eb67a51146102db578063715018a6146102ee57806382646a58146102f65780638da5cb5b1461030957600080fd5b80635f61e3ec14610260578063607f2d421461029f5780636a42b8f8146102d257600080fd5b80630e387de61461019357806314168416146101cd5780633cf52ffb146102095780634ff746f61461021157806352a9674b146102265780635bd11efc1461024d575b600080fd5b6101ba7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101c4565b6002546101ba565b61022461021f3660046120b3565b61040d565b005b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b61022461025b366004612148565b6104b3565b6102877f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c4565b6102c26102ad366004612165565b60086020526000908152604090205460ff1681565b60405190151581526020016101c4565b62093a806101ba565b6102246102e9366004612165565b6104ea565b61022461051e565b6102246103043660046120b3565b6105dd565b6000546001600160a01b0316610287565b600754610287906001600160a01b031681565b61022461033b366004612148565b61067e565b61022461034e366004612148565b61070c565b600654610287906001600160a01b031681565b6102246107b1565b600354610287906001600160a01b031681565b6101ba60045481565b6001546001600160a01b0316610287565b6000546001600160a01b0316156102c2565b6102877f000000000000000000000000000000000000000000000000000000000000000081565b6102c26103e2366004612148565b61080c565b600554610287906001600160a01b031681565b6102246104083660046120b3565b610817565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104775760405162461bcd60e51b815260040161046e9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104a89291906121da565b60405180910390a150565b6000546001600160a01b031633146104de576040516311a8a1bb60e31b815260040160405180910390fd5b6104e781610831565b50565b6000546001600160a01b03163314610515576040516311a8a1bb60e31b815260040160405180910390fd5b6104e78161089a565b6000546001600160a01b03163314610549576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361056c57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261057e919061221a565b1161059c576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156105c6576040516323295ef960e01b815260040160405180910390fd5b6001546105db906001600160a01b03166108db565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106445760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161046e565b61064d8161093a565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516104a89291906121da565b6007546001600160a01b0316156106ea5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161046e565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610737576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561075c57506001600160a01b03811615155b1561077a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036107a857604051634a2fb73f60e11b815260040160405180910390fd5b6104e781610943565b6001546001600160a01b031633146107dc576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107ee919061221a565b116105c65760405163d39c12bb60e01b815260040160405180910390fd5b600060015b92915050565b600061082282610991565b905061082d81610c77565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104e781610d98565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6060600061099e83610e03565b905060006109ab82610e62565b905060006109b883610e8b565b90506000816109c684610eb4565b6109cf86611072565b6040516020016109e193929190612231565b60408051601f1981840301815291815281516020928301206000818152600890935291205490915060ff1615610a655760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b606482015260840161046e565b6000818152600860205260408120805460ff19166001179055610a878561108e565b90506000610a94826111d8565b9050610a9f81611268565b6007546001600160a01b03908116911614610b0a5760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b606482015260840161046e565b6000610b1587611291565b9050610b35610b25846020015190565b87610b2f8a6112ad565b846112c9565b610b8d5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b606482015260840161046e565b610bbb85610b9a8961157c565b610ba38a611598565b84610bad8c6115b4565b610bb68d6115d0565b6115ec565b506000610bc783611712565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610bfd610bf883600061174e565b611786565b14610c4a5760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e415455524500604482015260640161046e565b6000610c5584611801565b806020019051810190610c68919061225e565b9b9a5050505050505050505050565b8051602014610cb25760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161046e565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166378ffd0a17f0000000000000000000000000000000000000000000000000000000000000000610d0b846122d5565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104a89291906121da565b60055460075460405163b472047760e01b81526001600160a01b039283169263b472047792610dce9291169085906004016122f9565b600060405180830381600087803b158015610de857600080fd5b505af1158015610dfc573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610e4d610e488460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b61181d565b60408051602081019091529081529392505050565b60606108118260000151600881518110610e7e57610e7e61231d565b6020026020010151611933565b60006108118260000151600281518110610ea757610ea761231d565b6020026020010151611786565b6040805160208101909152600081528151606091901561081157600080610edc6000866119d0565b60f81c90506001811480610ef357508060ff166003145b15610f9b57600185516002610f089190612333565b610f12919061221a565b67ffffffffffffffff811115610f2a57610f2a612044565b6040519080825280601f01601f191660200182016040528015610f54576020820181803683370190505b5092506000610f646001876119d0565b90508084600081518110610f7a57610f7a61231d565b60200101906001600160f81b031916908160001a9053506001925050610fff565b600285516002610fab9190612333565b610fb5919061221a565b67ffffffffffffffff811115610fcd57610fcd612044565b6040519080825280601f01601f191660200182016040528015610ff7576020820181803683370190505b509250600091505b60ff82165b83518110156110695761102e61101d60ff85168361221a565b611028906002612352565b876119d0565b8482815181106110405761104061231d565b60200101906001600160f81b031916908160001a905350806110618161236a565b915050611004565b50505092915050565b60006108118260000151600981518110610ea757610ea761231d565b6110b260405180606001604052806060815260200160608152602001600081525090565b6110cc8260000151600681518110610e7e57610e7e61231d565b60208281018290526040805180820182526000808252908301528051808201909152825181529181019082015261110281611a51565b15611117576111108161181d565b82526111c4565b6020820151805160009061112d9060019061221a565b67ffffffffffffffff81111561114557611145612044565b6040519080825280601f01601f19166020018201604052801561116f576020820181803683370190505b50905060008083602101915082602001905061118d82828551611a8c565b6040805180820182526000808252602091820152815180830190925284518252808501908201526111bd9061181d565b8652505050505b6111cd83611072565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061122683600001516003815181106112195761121961231d565b602002602001015161181d565b83604001518151811061123b5761123b61231d565b60200260200101519050604051806040016040528082815260200161125f8361181d565b90529392505050565b600061081182602001516000815181106112845761128461231d565b6020026020010151611b17565b60006108118260000151600581518110610ea757610ea761231d565b60606108118260000151600781518110610e7e57610e7e61231d565b6000806112fd8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b9050600061130a8261181d565b90506060808560008061131c8b610eb4565b90508051600003611337576000975050505050505050611574565b60005b865181101561156b57815183111561135d57600098505050505050505050611574565b61137f8782815181106113725761137261231d565b6020026020010151611b31565b9550858051906020012084146113a057600098505050505050505050611574565b6113b58782815181106112195761121961231d565b945084516011036114875781518303611414578c805190602001206113e686601081518110610e7e57610e7e61231d565b805190602001200361140357600198505050505050505050611574565b600098505050505050505050611574565b60008284815181106114285761142861231d565b016020015160f81c9050601081111561144d5760009950505050505050505050611574565b611472868260ff16815181106114655761146561231d565b6020026020010151611bb0565b945061147f600185612352565b935050611559565b84516002036114035760006114b26114ab87600081518110610e7e57610e7e61231d565b8486611bde565b83519091506114c18286612352565b03611514578d805190602001206114e487600181518110610e7e57610e7e61231d565b80519060200120036115025760019950505050505050505050611574565b60009950505050505050505050611574565b8060000361152e5760009950505050505050505050611574565b6115388185612352565b9350611550866001815181106114655761146561231d565b94506115599050565b806115638161236a565b91505061133a565b50505050505050505b949350505050565b60006108118260000151600381518110610ea757610ea761231d565b60006108118260000151600481518110610ea757610ea761231d565b60006108118260000151600081518110610ea757610ea761231d565b60606108118260000151600181518110610e7e57610e7e61231d565b6006546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561163e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116629190612383565b50935050925092506116b9828b611679919061221a565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611ce6565b6117055760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f48454144455200000000604482015260640161046e565b9998505050505050505050565b604080516020810190915260608152604051806020016040528061174684602001516001815181106112195761121961231d565b905292915050565b604080518082019091526000808252602082015282518051839081106117765761177661231d565b6020026020010151905092915050565b80516000901580159061179b57508151602110155b6117a457600080fd5b60006117b38360200151611e4e565b905060008184600001516117c7919061221a565b90506000808386602001516117dc9190612352565b90508051915060208310156117f857826020036101000a820491505b50949350505050565b60606108118260200151600281518110610e7e57610e7e61231d565b606061182882611a51565b61183157600080fd5b600061183c83611ed6565b905060008167ffffffffffffffff81111561185957611859612044565b60405190808252806020026020018201604052801561189e57816020015b60408051808201909152600080825260208201528152602001906001900390816118775790505b50905060006118b08560200151611e4e565b85602001516118bf9190612352565b90506000805b84811015611928576118d683611f5b565b91506040518060400160405280838152602001848152508482815181106118ff576118ff61231d565b60209081029190910101526119148284612352565b9250806119208161236a565b9150506118c5565b509195945050505050565b805160609061194157600080fd5b60006119508360200151611e4e565b90506000818460000151611964919061221a565b905060008167ffffffffffffffff81111561198157611981612044565b6040519080825280601f01601f1916602001820160405280156119ab576020820181803683370190505b50905060008160200190506117f88487602001516119c99190612352565b8285611fff565b60006119dd6002846123e6565b15611a17576010826119f06002866123fa565b81518110611a0057611a0061231d565b0160200151611a12919060f81c61240e565b611a47565b601082611a256002866123fa565b81518110611a3557611a3561231d565b0160200151611a47919060f81c612430565b60f81b9392505050565b80516000908103611a6457506000919050565b6020820151805160001a9060c0821015611a82575060009392505050565b5060019392505050565b80600003611a9957505050565b60208110611ad15782518252611ab0602084612352565b9250611abd602083612352565b9150611aca60208261221a565b9050611a99565b80600003611ade57505050565b60006001611aed83602061221a565b611af990610100612536565b611b03919061221a565b935183518516941916939093179091525050565b8051600090601514611b2857600080fd5b61081182611786565b60606000826000015167ffffffffffffffff811115611b5257611b52612044565b6040519080825280601f01601f191660200182016040528015611b7c576020820181803683370190505b5090508051600003611b8e5792915050565b6000816020019050611ba98460200151828660000151611fff565b5092915050565b8051600090602114611bc157600080fd5b60008083602001516001611bd59190612352565b51949350505050565b60008080611beb86610eb4565b90506000815167ffffffffffffffff811115611c0957611c09612044565b6040519080825280601f01601f191660200182016040528015611c33576020820181803683370190505b509050845b8251611c449087612352565b811015611cb7576000878281518110611c5f57611c5f61231d565b01602001516001600160f81b03191690508083611c7c898561221a565b81518110611c8c57611c8c61231d565b60200101906001600160f81b031916908160001a905350508080611caf9061236a565b915050611c38565b508080519060200120828051906020012003611cd65781519250611cdb565b600092505b509095945050505050565b600060208251611cf691906123e6565b15611d3a5760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b604482015260640161046e565b600060208351611d4a91906123fa565b9050611d57816002612536565b8510611d9d5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b604482015260640161046e565b60008660205b85518111611e4057858101519250611dbc6002896123e6565b600003611df4576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611e21565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611e2c6002896123fa565b9750611e39602082612352565b9050611da3565b509094149695505050505050565b8051600090811a6080811015611e675750600092915050565b60b8811080611e82575060c08110801590611e82575060f881105b15611e905750600192915050565b60c0811015611ec457611ea5600160b8612542565b611eb29060ff168261221a565b611ebd906001612352565b9392505050565b611ea5600160f8612542565b50919050565b80516000908103611ee957506000919050565b600080611ef98460200151611e4e565b8460200151611f089190612352565b9050600084600001518560200151611f209190612352565b90505b80821015611f5257611f3482611f5b565b611f3e9083612352565b915082611f4a8161236a565b935050611f23565b50909392505050565b80516000908190811a6080811015611f765760019150611ba9565b60b8811015611f9c57611f8a60808261221a565b611f95906001612352565b9150611ba9565b60c0811015611fc95760b78103600185019450806020036101000a85510460018201810193505050611ba9565b60f8811015611fdd57611f8a60c08261221a565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361200c57505050565b60208110611ad15782518252612023602084612352565b9250612030602083612352565b915061203d60208261221a565b905061200c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561208357612083612044565b604052919050565b600067ffffffffffffffff8211156120a5576120a5612044565b50601f01601f191660200190565b6000602082840312156120c557600080fd5b813567ffffffffffffffff8111156120dc57600080fd5b8201601f810184136120ed57600080fd5b80356121006120fb8261208b565b61205a565b81815285602083850101111561211557600080fd5b81602084016020830137600091810160200191909152949350505050565b6001600160a01b03811681146104e757600080fd5b60006020828403121561215a57600080fd5b8135611ebd81612133565b60006020828403121561217757600080fd5b5035919050565b60005b83811015612199578181015183820152602001612181565b838111156121a8576000848401525b50505050565b600081518084526121c681602086016020860161217e565b601f01601f19169290920160200192915050565b6040815260006121ed60408301856121ae565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561222c5761222c612204565b500390565b8381526000835161224981602085016020880161217e565b60209201918201929092526040019392505050565b60006020828403121561227057600080fd5b815167ffffffffffffffff81111561228757600080fd5b8201601f8101841361229857600080fd5b80516122a66120fb8261208b565b8181528560208385010111156122bb57600080fd5b6122cc82602083016020860161217e565b95945050505050565b80516020808301519190811015611ed05760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611574908301846121ae565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561234d5761234d612204565b500290565b6000821982111561236557612365612204565b500190565b60006001820161237c5761237c612204565b5060010190565b600080600080600060a0868803121561239b57600080fd5b8551945060208601519350604086015192506060860151915060808601516123c281612133565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b6000826123f5576123f56123d0565b500690565b600082612409576124096123d0565b500490565b600060ff831680612421576124216123d0565b8060ff84160691505092915050565b600060ff831680612443576124436123d0565b8060ff84160491505092915050565b600181815b8085111561248d57816000190482111561247357612473612204565b8085161561248057918102915b93841c9390800290612457565b509250929050565b6000826124a457506001610811565b816124b157506000610811565b81600181146124c757600281146124d1576124ed565b6001915050610811565b60ff8411156124e2576124e2612204565b50506001821b610811565b5060208310610133831016604e8410600b8410161715612510575081810a610811565b61251a8383612452565b806000190482111561252e5761252e612204565b029392505050565b6000611ebd8383612495565b600060ff821660ff84168082101561255c5761255c612204565b9003939250505056fea264697066735822122078410b46156ffcc827938a84152a9ea8b4ffd0d6cbcf5dbea694e23e9cc4c09e64736f6c634300080f0033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
