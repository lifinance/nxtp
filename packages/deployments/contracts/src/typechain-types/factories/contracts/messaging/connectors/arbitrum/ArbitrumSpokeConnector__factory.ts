/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002dfd38038062002dfd83398101604081905262000035916200031d565b87878787878787878787878787876200004e33620001e2565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d8262000241565b80156200012f576200012f81620002aa565b50506001602655505050620cf85083101590506200017f5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000090565b613a98811015620001c25760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000090565b610100919091526101205250620003aa9c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200030057600080fd5b919050565b80516001600160a01b03811681146200030057600080fd5b600080600080600080600080610100898b0312156200033b57600080fd5b6200034689620002eb565b97506200035660208a01620002eb565b96506200036660408a0162000305565b95506200037660608a0162000305565b94506200038660808a0162000305565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e05161010051610120516129c462000439600039600081816102790152610e7b01526000818161050601528181610e9c0152610f230152600061023d015260006103760152600081816104df0152818161058f0152818161117101526111e801526000818161033c015281816103f101528181610ad80152610d7d01526129c46000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80639fa92f9d11610125578063d1851c92116100ad578063db1b76591161007c578063db1b765914610528578063ee250e061461053b578063f38a267b14610544578063fa31de0114610567578063fd54b2281461057a57600080fd5b8063d1851c92146104b7578063d232c220146104c8578063d69f9d61146104da578063d88beda21461050157600080fd5b8063b697f531116100f4578063b697f5311461045a578063b95a20011461046d578063c5b350df14610493578063cc3942831461049b578063cf796c75146104ae57600080fd5b80639fa92f9d14610426578063b1f8100d1461042c578063b2f876431461043f578063b46300ec1461045257600080fd5b80635bd11efc116101a85780636a42b8f8116101775780636a42b8f8146103cb5780636eb67a51146103d4578063715018a6146103e75780638d3638f4146103ef5780638da5cb5b1461041557600080fd5b80635bd11efc1461035e5780635f61e3ec146103715780636188af0e146103b057806365eaf11b146103c357600080fd5b80632bbd59ca116101ef5780632bbd59ca146102ce5780633cf52ffb146102fe5780634ff746f6146103065780635190bc531461031b57806352a9674b1461033757600080fd5b806306661abd14610221578063141684161461023857806325e3beda14610274578063272efc691461029b575b600080fd5b6025545b6040519081526020015b60405180910390f35b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161022f565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b6102be6102a936600461228d565b60296020526000908152604090205460ff1681565b604051901515815260200161022f565b6102f16102dc3660046122aa565b602b6020526000908152604090205460ff1681565b60405161022f91906122d9565b600254610225565b6103196103143660046123a4565b610584565b005b6102be61032936600461228d565b6001600160a01b0316301490565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b61031961036c36600461228d565b610633565b6103987f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161022f565b6103196103be3660046123d9565b61066a565b6102256106c0565b62093a80610225565b6103196103e23660046122aa565b6106d1565b610319610705565b7f000000000000000000000000000000000000000000000000000000000000000061025f565b6000546001600160a01b0316610398565b30610398565b61031961043a36600461228d565b6107c4565b61031961044d36600461228d565b610869565b6103196108e5565b61031961046836600461228d565b61094e565b61025f61047b366004612452565b602a6020526000908152604090205463ffffffff1681565b6103196109cd565b600354610398906001600160a01b031681565b61022560045481565b6001546001600160a01b0316610398565b6000546001600160a01b0316156102be565b6103987f000000000000000000000000000000000000000000000000000000000000000081565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b6102be61053636600461228d565b610a28565b61022560275481565b6102be6105523660046122aa565b60286020526000908152604090205460ff1681565b61031961057536600461246d565b610a39565b6025546102259081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ee5760405162461bcd60e51b81526004016105e59060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b6105f781610b78565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161062892919061251c565b60405180910390a150565b6000546001600160a01b0316331461065e576040516311a8a1bb60e31b815260040160405180910390fd5b61066781610c18565b50565b61067c83805190602001208383610c81565b6106b15760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b60448201526064016105e5565b6106ba83610d0f565b50505050565b60006106cc6005611056565b905090565b6000546001600160a01b031633146106fc576040516311a8a1bb60e31b815260040160405180910390fd5b61066781611069565b6000546001600160a01b03163314610730576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361075357604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610765919061255c565b11610783576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107ad576040516323295ef960e01b815260040160405180910390fd5b6001546107c2906001600160a01b03166110aa565b565b6000546001600160a01b031633146107ef576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561081457506001600160a01b03811615155b15610832576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361086057604051634a2fb73f60e11b815260040160405180910390fd5b61066781611109565b6000546001600160a01b03163314610894576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610628565b60006108f16005611056565b60405160200161090391815260200190565b604051602081830303815290604052905061091d81611157565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161062892919061251c565b6000546001600160a01b03163314610979576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610628565b6001546001600160a01b031633146109f8576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a0a919061255c565b116107ad5760405163d39c12bb60e01b815260040160405180910390fd5b6000610a33826111e1565b92915050565b3360009081526029602052604090205460ff16610a875760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016105e5565b63ffffffff8084166000908152602a602052604090205416610aaa816001612573565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610b017f00000000000000000000000000000000000000000000000000000000000000003384888888611227565b80516020820120909150610b1660058261125f565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610b4360255490565b610b4d919061255c565b610b576005611056565b85604051610b68949392919061259b565b60405180910390a1505050505050565b600354610b8d906001600160a01b03166111e1565b610bcc5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016105e5565b8051602014610c075760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016105e5565b610667610c13826125c0565b61137c565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610ca757610ca76122c3565b14610cea5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016105e5565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b6000600260265403610d635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e5565b60026026556000610d7483826113be565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610dac62ffffff1983166113e2565b63ffffffff1614610dee5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016105e5565b6000610dff62ffffff1983166113f7565b905060016000828152602b602052604090205460ff166002811115610e2657610e266122c3565b14610e5d5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016105e5565b6000818152602b60205260409020805460ff19166002179055610ec07f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006125e4565b5a1015610ef85760405162461bcd60e51b81526004016105e5906020808252600490820152632167617360e01b604082015260600190565b6000610f0962ffffff198416611440565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610f6662ffffff198916611451565b610f7562ffffff198a16611465565b610f8462ffffff198b1661147a565b610fa1610f9662ffffff198d1661148f565b62ffffff19166114bd565b604051602401610fb494939291906125fc565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115610ffd578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a8460405161103b9392919061262b565b60405180910390a15050600160265550949695505050505050565b6000610a3382611064611506565b6119c7565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6003546040516349460b4d60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a926111ac929190911690859060040161264c565b600060405180830381600087803b1580156111c657600080fd5b505af11580156111da573d6000803e3d6000fd5b5050505050565b600061120c7f0000000000000000000000000000000000000000000000000000000000000000611a99565b6001600160a01b0316826001600160a01b0316149050919050565b606086868686868660405160200161124496959493929190612670565b60405160208183030381529060405290509695505050505050565b600161126d602060026127ae565b611277919061255c565b8260200154106112bc5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b60448201526064016105e5565b60018260200160008282546112d191906125e4565b9091555050602082015460005b602081101561136e578160011660010361130d5782848260208110611305576113056127ba565b015550505050565b83816020811061131f5761131f6127ba565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261135a91906127d0565b915080611366816127f2565b9150506112de565b5061137761280b565b505050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b8151600090602084016113d964ffffffffff85168284611b23565b95945050505050565b6000610a3362ffffff19831660286004611b6a565b60008061140d8360781c6001600160601b031690565b6001600160601b03169050600061142d8460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610a3361144e83611b9a565b90565b6000610a3362ffffff198316826004611b6a565b6000610a3362ffffff19831660246004611b6a565b6000610a3362ffffff19831660046020611bab565b6000610a33604c6114ad81601886901c6001600160601b031661255c565b62ffffff19851691906000611d07565b60606000806114d58460181c6001600160601b031690565b6001600160601b0316905060405191508192506114f58483602001611d83565b508181016020016040529052919050565b61150e612259565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611a9157600182821c1660008683602081106119f4576119f46127ba565b0154905081600103611a31576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611a7c565b84868460208110611a4457611a446127ba565b6020020151604051602001611a63929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611a89906127f2565b9150506119d1565b505092915050565b6000611aa482611ee4565b611ac15760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190612821565b600080611b3083856125e4565b9050604051811115611b40575060005b80600003611b555762ffffff19915050610d08565b5050606092831b9190911790911b1760181b90565b6000611b7782602061283e565b611b82906008612861565b60ff16611b90858585611bab565b901c949350505050565b6000610a3362ffffff198316602c60205b60008160ff16600003611bc057506000610d08565b611bd38460181c6001600160601b031690565b6001600160601b0316611be960ff8416856125e4565b1115611c4d57611c34611c058560781c6001600160601b031690565b6001600160601b0316611c218660181c6001600160601b031690565b6001600160601b0316858560ff16611f48565b60405162461bcd60e51b81526004016105e59190612882565b60208260ff161115611cc75760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016105e5565b600882026000611ce08660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611d1d8660781c6001600160601b031690565b6001600160601b03169050611d3186611fb6565b84611d3c87846125e4565b611d4691906125e4565b1115611d595762ffffff19915050611d7b565b611d6385826125e4565b9050611d778364ffffffffff168286611b23565b9150505b949350505050565b600062ffffff1980841603611deb5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016105e5565b611df483611fef565b611e545760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016105e5565b6000611e698460181c6001600160601b031690565b6001600160601b031690506000611e898560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611ea95760206060fd5b8285848460045afa50611eda611ebf8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190612895565b60606000611f558661202c565b9150506000611f638661202c565b9150506000611f718661202c565b9150506000611f7f8661202c565b91505083838383604051602001611f9994939291906128b7565b604051602081830303815290604052945050505050949350505050565b6000611fcb8260181c6001600160601b031690565b611fde8360781c6001600160601b031690565b016001600160601b03169050919050565b6000611ffb8260d81c90565b64ffffffffff1664ffffffffff0361201557506000919050565b600061202083611fb6565b60405110199392505050565b600080601f5b600f8160ff16111561208157600061204b826008612861565b60ff1685901c905061205c816120da565b61ffff16841793508160ff1660101461207757601084901b93505b5060001901612032565b50600f5b60ff8160ff1610156120d457600061209e826008612861565b60ff1685901c90506120af816120da565b61ffff16831792508160ff166000146120ca57601083901b92505b5060001901612085565b50915091565b60006120ec60048360ff16901c61210c565b60ff1661ffff919091161760081b6121038261210c565b60ff1617919050565b600060f08083179060ff821690036121275750603092915050565b8060ff1660f10361213b5750603192915050565b8060ff1660f20361214f5750603292915050565b8060ff1660f3036121635750603392915050565b8060ff1660f4036121775750603492915050565b8060ff1660f50361218b5750603592915050565b8060ff1660f60361219f5750603692915050565b8060ff1660f7036121b35750603792915050565b8060ff1660f8036121c75750603892915050565b8060ff1660f9036121db5750603992915050565b8060ff1660fa036121ef5750606192915050565b8060ff1660fb036122035750606292915050565b8060ff1660fc036122175750606392915050565b8060ff1660fd0361222b5750606492915050565b8060ff1660fe0361223f5750606592915050565b8060ff1660ff036122535750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b038116811461066757600080fd5b60006020828403121561229f57600080fd5b8135610d0881612278565b6000602082840312156122bc57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106122fb57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261232857600080fd5b813567ffffffffffffffff8082111561234357612343612301565b604051601f8301601f19908116603f0116810190828211818310171561236b5761236b612301565b8160405283815286602085880101111561238457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156123b657600080fd5b813567ffffffffffffffff8111156123cd57600080fd5b611d7b84828501612317565b600080600061044084860312156123ef57600080fd5b833567ffffffffffffffff81111561240657600080fd5b61241286828701612317565b93505061042084018581111561242757600080fd5b60208501925080359150509250925092565b803563ffffffff8116811461244d57600080fd5b919050565b60006020828403121561246457600080fd5b610d0882612439565b60008060006060848603121561248257600080fd5b61248b84612439565b925060208401359150604084013567ffffffffffffffff8111156124ae57600080fd5b6124ba86828701612317565b9150509250925092565b60005b838110156124df5781810151838201526020016124c7565b838111156106ba5750506000910152565b600081518084526125088160208601602086016124c4565b601f01601f19169290920160200192915050565b60408152600061252f60408301856124f0565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561256e5761256e612546565b500390565b600063ffffffff80831681851680830382111561259257612592612546565b01949350505050565b848152836020820152826040820152608060608201526000611eda60808301846124f0565b805160208083015191908110156122535760001960209190910360031b1b16919050565b600082198211156125f7576125f7612546565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611eda60808301846124f0565b83815282151560208201526060604082015260006113d960608301846124f0565b6001600160a01b0383168152604060208201819052600090611d7b908301846124f0565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516126b881604c8501602087016124c4565b91909101604c01979650505050505050565b600181815b808511156127055781600019048211156126eb576126eb612546565b808516156126f857918102915b93841c93908002906126cf565b509250929050565b60008261271c57506001610a33565b8161272957506000610a33565b816001811461273f576002811461274957612765565b6001915050610a33565b60ff84111561275a5761275a612546565b50506001821b610a33565b5060208310610133831016604e8410600b8410161715612788575081810a610a33565b61279283836126ca565b80600019048211156127a6576127a6612546565b029392505050565b6000610d08838361270d565b634e487b7160e01b600052603260045260246000fd5b6000826127ed57634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161280457612804612546565b5060010190565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561283357600080fd5b8151610d0881612278565b600060ff821660ff84168082101561285857612858612546565b90039392505050565b600060ff821660ff84168160ff04811182151516156127a6576127a6612546565b602081526000610d0860208301846124f0565b6000602082840312156128a757600080fd5b81518015158114610d0857600080fd5b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611eda56fea26469706673582212204377fcfa0bbb922d508325753ffdb909e4d51443515f5fd9274e05f7b92ddf8164736f6c634300080f0033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
