/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XAppConnectionManager,
  XAppConnectionManagerInterface,
} from "../../../../contracts/nomad-core/contracts/XAppConnectionManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "replica",
        type: "address",
      },
    ],
    name: "ReplicaEnrolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "replica",
        type: "address",
      },
    ],
    name: "ReplicaUnenrolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "access",
        type: "bool",
      },
    ],
    name: "WatcherPermissionSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "domainToReplica",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract Home",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_replica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_replica",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "ownerEnrollReplica",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_replica",
        type: "address",
      },
    ],
    name: "ownerUnenrollReplica",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "replicaToDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_home",
        type: "address",
      },
    ],
    name: "setHome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "_access",
        type: "bool",
      },
    ],
    name: "setWatcherPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_updater",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "unenrollReplica",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "watcherPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e498061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638f5d90e01161008c578063b9cff16211610066578063b9cff16214610234578063e0e7a9131461025d578063f2fde38b14610270578063f31faefb1461028357600080fd5b80638f5d90e0146101fb578063916c34701461020e5780639fa92f9d1461022157600080fd5b80636ef0f37f116100c85780636ef0f37f146101b1578063715018a6146101c65780638d3638f4146101ce5780638da5cb5b146101d657600080fd5b8063427ebef5146100ef5780635190bc53146101455780635f8b1dba14610176575b600080fd5b6101306100fd366004610bfd565b6001600160a01b038216600090815260046020908152604080832063ffffffff8516845290915290205460ff1692915050565b60405190151581526020015b60405180910390f35b610130610153366004610c36565b6001600160a01b031660009081526002602052604090205463ffffffff16151590565b61019c610184366004610c36565b60026020526000908152604090205463ffffffff1681565b60405163ffffffff909116815260200161013c565b6101c46101bf366004610c36565b610296565b005b6101c46102c0565b61019c6102d4565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161013c565b6101c4610209366004610c36565b610347565b6101c461021c366004610c5a565b61035b565b6001546101e3906001600160a01b031681565b6101e3610242366004610caa565b6003602052600090815260409020546001600160a01b031681565b6101c461026b366004610cdd565b6103dc565b6101c461027e366004610c36565b610588565b6101c4610291366004610bfd565b6105fe565b61029e610691565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6102c8610691565b6102d260006106eb565b565b6001546040805163234d8e3d60e21b815290516000926001600160a01b031691638d3638f49160048083019260209291908290030181865afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610daa565b905090565b61034f610691565b6103588161073b565b50565b610363610691565b6001600160a01b038316600081815260046020908152604080832063ffffffff871680855290835292819020805460ff191686151590811790915581519485529184019190915290917f517de16b526853f481451c5151e87484e1b251ec7d0302efa1019c2ece179c2c910160405180910390a2505050565b63ffffffff83166000908152600360205260409020546001600160a01b03168061043f5760405162461bcd60e51b815260206004820152600f60248201526e217265706c6963612065786973747360881b60448201526064015b60405180910390fd5b826001600160a01b0316816001600160a01b031663df034cd06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190610dc7565b6001600160a01b0316146104f45760405162461bcd60e51b815260206004820152601060248201526f10b1bab93932b73a103ab83230ba32b960811b6044820152606401610436565b600061050b856001600160a01b03841686866107ba565b6001600160a01b038116600090815260046020908152604080832063ffffffff8a16845290915290205490915060ff166105785760405162461bcd60e51b815260206004820152600e60248201526d10bb30b634b2103bb0ba31b432b960911b6044820152606401610436565b6105818261073b565b5050505050565b610590610691565b6001600160a01b0381166105f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610436565b610358816106eb565b610606610691565b61060f8261073b565b6001600160a01b0382166000818152600260209081526040808320805463ffffffff191663ffffffff8716908117909155808452600383529281902080546001600160a01b031916851790555192835290917f8440df9bf8a8542634a9eb196da1735b786ed9aa2fc12b080ac34c5fa81a923491015b60405180910390a25050565b6000546001600160a01b031633146102d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610436565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381166000818152600260208181526040808420805463ffffffff168086526003845282862080546001600160a01b031916905594869052928252825463ffffffff19169092559051928352909182917fce1533133fb359ace801d3176bbad25ace030d714aed35e38a6293c8a60b115b9101610685565b600080846001600160a01b03166345630b1a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f9190610de4565b905060008187866040516020016108569392919092835260e09190911b6001600160e01b0319166020830152602482015260440190565b60408051808303601f1901815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000082850152603c8085019190915282518085039091018152605c909301909152815191012090506108bf81856108ca565b979650505050505050565b60008060006108d985856108ee565b915091506108e681610933565b509392505050565b60008082516041036109245760208301516040840151606085015160001a61091887828585610ae9565b9450945050505061092c565b506000905060025b9250929050565b600081600481111561094757610947610dfd565b0361094f5750565b600181600481111561096357610963610dfd565b036109b05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610436565b60028160048111156109c4576109c4610dfd565b03610a115760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610436565b6003816004811115610a2557610a25610dfd565b03610a7d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610436565b6004816004811115610a9157610a91610dfd565b036103585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610436565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610b205750600090506003610bcd565b8460ff16601b14158015610b3857508460ff16601c14155b15610b495750600090506004610bcd565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610b9d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610bc657600060019250925050610bcd565b9150600090505b94509492505050565b6001600160a01b038116811461035857600080fd5b63ffffffff8116811461035857600080fd5b60008060408385031215610c1057600080fd5b8235610c1b81610bd6565b91506020830135610c2b81610beb565b809150509250929050565b600060208284031215610c4857600080fd5b8135610c5381610bd6565b9392505050565b600080600060608486031215610c6f57600080fd5b8335610c7a81610bd6565b92506020840135610c8a81610beb565b915060408401358015158114610c9f57600080fd5b809150509250925092565b600060208284031215610cbc57600080fd5b8135610c5381610beb565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610cf257600080fd5b8335610cfd81610beb565b925060208401359150604084013567ffffffffffffffff80821115610d2157600080fd5b818601915086601f830112610d3557600080fd5b813581811115610d4757610d47610cc7565b604051601f8201601f19908116603f01168101908382118183101715610d6f57610d6f610cc7565b81604052828152896020848701011115610d8857600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208284031215610dbc57600080fd5b8151610c5381610beb565b600060208284031215610dd957600080fd5b8151610c5381610bd6565b600060208284031215610df657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f35585f768f2eb872cf352c249e1f92f2090fe2f95c8d367b51774d996f6446964736f6c634300080f0033";

type XAppConnectionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XAppConnectionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XAppConnectionManager__factory extends ContractFactory {
  constructor(...args: XAppConnectionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XAppConnectionManager> {
    return super.deploy(overrides || {}) as Promise<XAppConnectionManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XAppConnectionManager {
    return super.attach(address) as XAppConnectionManager;
  }
  override connect(signer: Signer): XAppConnectionManager__factory {
    return super.connect(signer) as XAppConnectionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XAppConnectionManagerInterface {
    return new utils.Interface(_abi) as XAppConnectionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XAppConnectionManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XAppConnectionManager;
  }
}
