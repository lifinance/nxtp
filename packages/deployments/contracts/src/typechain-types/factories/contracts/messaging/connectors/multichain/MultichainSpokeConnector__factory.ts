/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101806040523480156200001257600080fd5b506040516200303c3803806200303c833981016040819052620000359162000471565b86818a8a838a8a8a8a8a878787878787620000503362000336565b8563ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011f576200011f8262000395565b801562000131576200013181620003fe565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506001602655505050620cf8508310159050620001d95760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a988110156200021c5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b610100919091526101205250505060008490039250620002739150505760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000092565b816001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d8919062000508565b6001600160a01b0316610140819052620003215760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000092565b61016052506200052d98505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200045457600080fd5b919050565b80516001600160a01b03811681146200045457600080fd5b60008060008060008060008060006101208a8c0312156200049157600080fd5b6200049c8a6200043f565b9850620004ac60208b016200043f565b9750620004bc60408b0162000459565b9650620004cc60608b0162000459565b9550620004dc60808b0162000459565b945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b6000602082840312156200051b57600080fd5b620005268262000459565b9392505050565b60805160a05160c05160e05161010051610120516101405161016051612a63620005d960003960008181611a850152611bd101526000611b2e0152600081816102840152610eb601526000818161053201528181610ed70152610f5e015260006102480152600061038101526000818161050b015281816105bb0152818161119701526111c3015260008181610347015281816103fc01528181610b160152610db80152612a636000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80639abaf47911610130578063cf796c75116100b8578063db1b76591161007c578063db1b765914610554578063ee250e0614610567578063f38a267b14610570578063fa31de0114610593578063fd54b228146105a657600080fd5b8063cf796c75146104da578063d1851c92146104e3578063d232c220146104f4578063d69f9d6114610506578063d88beda21461052d57600080fd5b8063b46300ec116100ff578063b46300ec1461047e578063b697f53114610486578063b95a200114610499578063c5b350df146104bf578063cc394283146104c757600080fd5b80639abaf479146104315780639fa92f9d14610452578063b1f8100d14610458578063b2f876431461046b57600080fd5b80635bd11efc116101b35780636a42b8f8116101825780636a42b8f8146103d65780636eb67a51146103df578063715018a6146103f25780638d3638f4146103fa5780638da5cb5b1461042057600080fd5b80635bd11efc146103695780635f61e3ec1461037c5780636188af0e146103bb57806365eaf11b146103ce57600080fd5b80632bbd59ca116101fa5780632bbd59ca146102d95780633cf52ffb146103095780634ff746f6146103115780635190bc531461032657806352a9674b1461034257600080fd5b806306661abd1461022c578063141684161461024357806325e3beda1461027f578063272efc69146102a6575b600080fd5b6025545b6040519081526020015b60405180910390f35b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161023a565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b6102c96102b43660046122ff565b60296020526000908152604090205460ff1681565b604051901515815260200161023a565b6102fc6102e736600461231c565b602b6020526000908152604090205460ff1681565b60405161023a919061234b565b600254610230565b61032461031f366004612416565b6105b0565b005b6102c96103343660046122ff565b6001600160a01b0316301490565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b6103246103773660046122ff565b61065f565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161023a565b6103246103c936600461244b565b610696565b6102306106ec565b62093a80610230565b6103246103ed36600461231c565b6106fd565b610324610731565b7f000000000000000000000000000000000000000000000000000000000000000061026a565b6000546001600160a01b03166103a3565b61044461043f366004612416565b6107f0565b60405161023a929190612503565b306103a3565b6103246104663660046122ff565b610802565b6103246104793660046122ff565b6108a7565b610324610923565b6103246104943660046122ff565b61098c565b61026a6104a7366004612537565b602a6020526000908152604090205463ffffffff1681565b610324610a0b565b6003546103a3906001600160a01b031681565b61023060045481565b6001546001600160a01b03166103a3565b6000546001600160a01b0316156102c9565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b6102c96105623660046122ff565b610a66565b61023060275481565b6102c961057e36600461231c565b60286020526000908152604090205460ff1681565b6102306105a1366004612552565b610a77565b6025546102309081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461061a5760405162461bcd60e51b81526004016106119060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61062381610bba565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516106549291906125a9565b60405180910390a150565b6000546001600160a01b0316331461068a576040516311a8a1bb60e31b815260040160405180910390fd5b61069381610c56565b50565b6106a883805190602001208383610cbf565b6106dd5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610611565b6106e683610d4a565b50505050565b60006106f86005611091565b905090565b6000546001600160a01b03163314610728576040516311a8a1bb60e31b815260040160405180910390fd5b610693816110a4565b6000546001600160a01b0316331461075c576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361077f57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261079191906125e9565b116107af576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107d9576040516323295ef960e01b815260040160405180910390fd5b6001546107ee906001600160a01b03166110e5565b565b600060606107fd83610bba565b915091565b6000546001600160a01b0316331461082d576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561085257506001600160a01b03811615155b15610870576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361089e57604051634a2fb73f60e11b815260040160405180910390fd5b61069381611144565b6000546001600160a01b031633146108d2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610654565b600061092f6005611091565b60405160200161094191815260200190565b604051602081830303815290604052905061095b81611192565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516106549291906125a9565b6000546001600160a01b031633146109b7576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610654565b6001546001600160a01b03163314610a36576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a4891906125e9565b116107d95760405163d39c12bb60e01b815260040160405180910390fd5b6000610a71826111bc565b92915050565b3360009081526029602052604081205460ff16610ac55760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610611565b63ffffffff8085166000908152602a602052604090205416610ae8816001612600565b63ffffffff8681166000908152602a60205260408120805463ffffffff191693909216929092179055610b3f7f000000000000000000000000000000000000000000000000000000000000000033848989896111e8565b80516020820120909150610b54600582611220565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610b8160255490565b610b8b91906125e9565b610b956005611091565b85604051610ba69493929190612628565b60405180910390a1925050505b9392505050565b600354610bcf906001600160a01b03166111bc565b610c0a5760405162461bcd60e51b815260206004820152600c60248201526b10b618a1b7b73732b1ba37b960a11b6044820152606401610611565b8051602014610c455760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610611565b610693610c518261264d565b61133d565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610ce557610ce5612335565b14610d285760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610611565b5050506000908152602b60205260409020805460ff1916600190811790915590565b6000600260265403610d9e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610611565b60026026556000610daf838261137f565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610de762ffffff1983166113a3565b63ffffffff1614610e295760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610611565b6000610e3a62ffffff1983166113b8565b905060016000828152602b602052604090205460ff166002811115610e6157610e61612335565b14610e985760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610611565b6000818152602b60205260409020805460ff19166002179055610efb7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612671565b5a1015610f335760405162461bcd60e51b8152600401610611906020808252600490820152632167617360e01b604082015260600190565b6000610f4462ffffff198416611401565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610fa162ffffff198916611412565b610fb062ffffff198a16611426565b610fbf62ffffff198b1661143b565b610fdc610fd162ffffff198d16611450565b62ffffff191661147e565b604051602401610fef9493929190612689565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611038578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611076939291906126b8565b60405180910390a15050600160265550949695505050505050565b6000610a718261109f6114c7565b611988565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6106937f000000000000000000000000000000000000000000000000000000000000000082611a5a565b6000610a717f000000000000000000000000000000000000000000000000000000000000000083611ae5565b6060868686868686604051602001611205969594939291906126d9565b60405160208183030381529060405290509695505050505050565b600161122e60206002612817565b61123891906125e9565b82602001541061127d5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610611565b60018260200160008282546112929190612671565b9091555050602082015460005b602081101561132f57816001166001036112ce57828482602081106112c6576112c6612823565b015550505050565b8381602081106112e0576112e0612823565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261131b9190612839565b9150806113278161285b565b91505061129f565b50611338612874565b505050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b81516000906020840161139a64ffffffffff85168284611bf9565b95945050505050565b6000610a7162ffffff19831660286004611c40565b6000806113ce8360781c6001600160601b031690565b6001600160601b0316905060006113ee8460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610a7161140f83611c70565b90565b6000610a7162ffffff198316826004611c40565b6000610a7162ffffff19831660246004611c40565b6000610a7162ffffff19831660046020611c81565b6000610a71604c61146e81601886901c6001600160601b03166125e9565b62ffffff19851691906000611ddd565b60606000806114968460181c6001600160601b031690565b6001600160601b0316905060405191508192506114b68483602001611e59565b508181016020016040529052919050565b6114cf6122cb565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611a5257600182821c1660008683602081106119b5576119b5612823565b01549050816001036119f2576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611a3d565b84868460208110611a0557611a05612823565b6020020151604051602001611a24929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611a4a9061285b565b915050611992565b505092915050565b60405163bd45c4e760e01b81526001600160a01b0383169063bd45c4e790611aaf90859085906000907f000000000000000000000000000000000000000000000000000000000000000090829060040161288a565b600060405180830381600087803b158015611ac957600080fd5b505af1158015611add573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03841614611b295760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610611565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bae91906128c8565b5091509150836001600160a01b0316826001600160a01b031614801561139a57507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b600080611c068385612671565b9050604051811115611c16575060005b80600003611c2b5762ffffff19915050610bb3565b5050606092831b9190911790911b1760181b90565b6000611c4d8260206128ff565b611c58906008612922565b60ff16611c66858585611c81565b901c949350505050565b6000610a7162ffffff198316602c60205b60008160ff16600003611c9657506000610bb3565b611ca98460181c6001600160601b031690565b6001600160601b0316611cbf60ff841685612671565b1115611d2357611d0a611cdb8560781c6001600160601b031690565b6001600160601b0316611cf78660181c6001600160601b031690565b6001600160601b0316858560ff16611fba565b60405162461bcd60e51b81526004016106119190612943565b60208260ff161115611d9d5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610611565b600882026000611db68660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611df38660781c6001600160601b031690565b6001600160601b03169050611e0786612028565b84611e128784612671565b611e1c9190612671565b1115611e2f5762ffffff19915050611e51565b611e398582612671565b9050611e4d8364ffffffffff168286611bf9565b9150505b949350505050565b600062ffffff1980841603611ec15760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610611565b611eca83612061565b611f2a5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610611565b6000611f3f8460181c6001600160601b031690565b6001600160601b031690506000611f5f8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611f7f5760206060fd5b8285848460045afa50611fb0611f958760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000611fc78661209e565b9150506000611fd58661209e565b9150506000611fe38661209e565b9150506000611ff18661209e565b9150508383838360405160200161200b9493929190612956565b604051602081830303815290604052945050505050949350505050565b600061203d8260181c6001600160601b031690565b6120508360781c6001600160601b031690565b016001600160601b03169050919050565b600061206d8260d81c90565b64ffffffffff1664ffffffffff0361208757506000919050565b600061209283612028565b60405110199392505050565b600080601f5b600f8160ff1611156120f35760006120bd826008612922565b60ff1685901c90506120ce8161214c565b61ffff16841793508160ff166010146120e957601084901b93505b50600019016120a4565b50600f5b60ff8160ff161015612146576000612110826008612922565b60ff1685901c90506121218161214c565b61ffff16831792508160ff1660001461213c57601083901b92505b50600019016120f7565b50915091565b600061215e60048360ff16901c61217e565b60ff1661ffff919091161760081b6121758261217e565b60ff1617919050565b600060f08083179060ff821690036121995750603092915050565b8060ff1660f1036121ad5750603192915050565b8060ff1660f2036121c15750603292915050565b8060ff1660f3036121d55750603392915050565b8060ff1660f4036121e95750603492915050565b8060ff1660f5036121fd5750603592915050565b8060ff1660f6036122115750603692915050565b8060ff1660f7036122255750603792915050565b8060ff1660f8036122395750603892915050565b8060ff1660f90361224d5750603992915050565b8060ff1660fa036122615750606192915050565b8060ff1660fb036122755750606292915050565b8060ff1660fc036122895750606392915050565b8060ff1660fd0361229d5750606492915050565b8060ff1660fe036122b15750606592915050565b8060ff1660ff036122c55750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b038116811461069357600080fd5b60006020828403121561231157600080fd5b8135610bb3816122ea565b60006020828403121561232e57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061236d57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261239a57600080fd5b813567ffffffffffffffff808211156123b5576123b5612373565b604051601f8301601f19908116603f011681019082821181831017156123dd576123dd612373565b816040528381528660208588010111156123f657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561242857600080fd5b813567ffffffffffffffff81111561243f57600080fd5b611e5184828501612389565b6000806000610440848603121561246157600080fd5b833567ffffffffffffffff81111561247857600080fd5b61248486828701612389565b93505061042084018581111561249957600080fd5b60208501925080359150509250925092565b60005b838110156124c65781810151838201526020016124ae565b838111156106e65750506000910152565b600081518084526124ef8160208601602086016124ab565b601f01601f19169290920160200192915050565b8215158152604060208201526000611e5160408301846124d7565b803563ffffffff8116811461253257600080fd5b919050565b60006020828403121561254957600080fd5b610bb38261251e565b60008060006060848603121561256757600080fd5b6125708461251e565b925060208401359150604084013567ffffffffffffffff81111561259357600080fd5b61259f86828701612389565b9150509250925092565b6040815260006125bc60408301856124d7565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156125fb576125fb6125d3565b500390565b600063ffffffff80831681851680830382111561261f5761261f6125d3565b01949350505050565b848152836020820152826040820152608060608201526000611fb060808301846124d7565b805160208083015191908110156122c55760001960209190910360031b1b16919050565b60008219821115612684576126846125d3565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611fb060808301846124d7565b838152821515602082015260606040820152600061139a60608301846124d7565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161272181604c8501602087016124ab565b91909101604c01979650505050505050565b600181815b8085111561276e578160001904821115612754576127546125d3565b8085161561276157918102915b93841c9390800290612738565b509250929050565b60008261278557506001610a71565b8161279257506000610a71565b81600181146127a857600281146127b2576127ce565b6001915050610a71565b60ff8411156127c3576127c36125d3565b50506001821b610a71565b5060208310610133831016604e8410600b84101617156127f1575081810a610a71565b6127fb8383612733565b806000190482111561280f5761280f6125d3565b029392505050565b6000610bb38383612776565b634e487b7160e01b600052603260045260246000fd5b60008261285657634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161286d5761286d6125d3565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600060018060a01b03808816835260a060208401526128ac60a08401886124d7565b9516604083015250606081019290925260809091015292915050565b6000806000606084860312156128dd57600080fd5b83516128e8816122ea565b602085015160409095015190969495509392505050565b600060ff821660ff841680821015612919576129196125d3565b90039392505050565b600060ff821660ff84168160ff048111821515161561280f5761280f6125d3565b602081526000610bb360208301846124d7565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611fb056fea264697066735822122059b34597346d79e4b4dd7786c9b856167e34e5cd2c4bb1d33f447696b50399ff64736f6c634300080f0033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
