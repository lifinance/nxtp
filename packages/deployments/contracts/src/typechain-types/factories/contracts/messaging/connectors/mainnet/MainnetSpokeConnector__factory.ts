/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002d5738038062002d57833981016040819052620000359162000375565b87878787878787878787878787876200004e336200023a565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d8262000299565b80156200012f576200012f8162000302565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506001602655505050620cf8508310159050620001d75760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000090565b613a988110156200021a5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000090565b610100919091526101205250620004029c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200035857600080fd5b919050565b80516001600160a01b03811681146200035857600080fd5b600080600080600080600080610100898b0312156200039357600080fd5b6200039e8962000343565b9750620003ae60208a0162000343565b9650620003be60408a016200035d565b9550620003ce60608a016200035d565b9450620003de60808a016200035d565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e05161010051610120516128b86200049f600039600081816102840152610e6501526000818161052401528181610e860152610f0d01526000610248015260008181610381015281816107e40152818161113801526111790152600081816104fd01526105ad0152600081816103470152818161040f01528181610b6101528181610d6701526111a001526128b86000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063cf796c75116100b8578063db1b76591161007c578063db1b765914610546578063ee250e0614610559578063f38a267b14610562578063fa31de0114610585578063fd54b2281461059857600080fd5b8063cf796c75146104cc578063d1851c92146104d5578063d232c220146104e6578063d69f9d61146104f8578063d88beda21461051f57600080fd5b8063b46300ec116100ff578063b46300ec14610470578063b697f53114610478578063b95a20011461048b578063c5b350df146104b1578063cc394283146104b957600080fd5b80638da5cb5b146104335780639fa92f9d14610444578063b1f8100d1461044a578063b2f876431461045d57600080fd5b80635bd11efc116101b35780636a42b8f8116101825780636a42b8f8146103d65780636eb67a51146103df578063715018a6146103f257806382646a58146103fa5780638d3638f41461040d57600080fd5b80635bd11efc146103695780635f61e3ec1461037c5780636188af0e146103bb57806365eaf11b146103ce57600080fd5b80632bbd59ca116101fa5780632bbd59ca146102d95780633cf52ffb146103095780634ff746f6146103115780635190bc531461032657806352a9674b1461034257600080fd5b806306661abd1461022c578063141684161461024357806325e3beda1461027f578063272efc69146102a6575b600080fd5b6025545b6040519081526020015b60405180910390f35b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161023a565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b6102c96102b43660046121d8565b60296020526000908152604090205460ff1681565b604051901515815260200161023a565b6102fc6102e7366004612201565b602b6020526000908152604090205460ff1681565b60405161023a9190612230565b600254610230565b61032461031f3660046122fb565b6105a2565b005b6102c96103343660046121d8565b6001600160a01b0316301490565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b6103246103773660046121d8565b610648565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161023a565b6103246103c9366004612330565b61067f565b6102306106d5565b62093a80610230565b6103246103ed366004612201565b6106e6565b61032461071a565b6103246104083660046122fb565b6107d9565b7f000000000000000000000000000000000000000000000000000000000000000061026a565b6000546001600160a01b03166103a3565b306103a3565b6103246104583660046121d8565b61087a565b61032461046b3660046121d8565b61091f565b61032461099b565b6103246104863660046121d8565b6109d3565b61026a6104993660046123a9565b602a6020526000908152604090205463ffffffff1681565b610324610a52565b6003546103a3906001600160a01b031681565b61023060045481565b6001546001600160a01b03166103a3565b6000546001600160a01b0316156102c9565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b6102c96105543660046121d8565b610aad565b61023060275481565b6102c9610570366004612201565b60286020526000908152604090205460ff1681565b6102306105933660046123c4565b610ac2565b6025546102309081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461060c5760405162461bcd60e51b81526004016106039060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161063d929190612473565b60405180910390a150565b6000546001600160a01b03163314610673576040516311a8a1bb60e31b815260040160405180910390fd5b61067c81610c05565b50565b61069183805190602001208383610c6e565b6106c65760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610603565b6106cf83610cf9565b50505050565b60006106e16005611040565b905090565b6000546001600160a01b03163314610711576040516311a8a1bb60e31b815260040160405180910390fd5b61067c81611053565b6000546001600160a01b03163314610745576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361076857604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261077a91906124b3565b11610798576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107c2576040516323295ef960e01b815260040160405180910390fd5b6001546107d7906001600160a01b0316611094565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108405760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610603565b610849816110f3565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161063d929190612473565b6000546001600160a01b031633146108a5576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156108ca57506001600160a01b03811615155b156108e8576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361091657604051634a2fb73f60e11b815260040160405180910390fd5b61067c81611227565b6000546001600160a01b0316331461094a576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad910161063d565b60006109a76005611040565b6040516020016109b991815260200190565b6040516020818303038152906040529050610849816110f3565b6000546001600160a01b031633146109fe576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87910161063d565b6001546001600160a01b03163314610a7d576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a8f91906124b3565b116107c25760405163d39c12bb60e01b815260040160405180910390fd5b60006001600160a01b03821633145b92915050565b3360009081526029602052604081205460ff16610b105760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610603565b63ffffffff8085166000908152602a602052604090205416610b338160016124ca565b63ffffffff8681166000908152602a60205260408120805463ffffffff191693909216929092179055610b8a7f00000000000000000000000000000000000000000000000000000000000000003384898989611275565b80516020820120909150610b9f6005826112ad565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610bcc60255490565b610bd691906124b3565b610be06005611040565b85604051610bf194939291906124f2565b60405180910390a1925050505b9392505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610c9457610c9461221a565b14610cd75760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610603565b5050506000908152602b60205260409020805460ff1916600190811790915590565b6000600260265403610d4d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610603565b60026026556000610d5e83826113ca565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610d9662ffffff1983166113ee565b63ffffffff1614610dd85760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610603565b6000610de962ffffff198316611403565b905060016000828152602b602052604090205460ff166002811115610e1057610e1061221a565b14610e475760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610603565b6000818152602b60205260409020805460ff19166002179055610eaa7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612517565b5a1015610ee25760405162461bcd60e51b8152600401610603906020808252600490820152632167617360e01b604082015260600190565b6000610ef362ffffff19841661144c565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610f5062ffffff19891661145d565b610f5f62ffffff198a16611471565b610f6e62ffffff198b16611486565b610f8b610f8062ffffff198d1661149b565b62ffffff19166114c9565b604051602401610f9e949392919061252f565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115610fe7578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516110259392919061255e565b60405180910390a15050600160265550949695505050505050565b6000610abc8261104e611512565b6119d3565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805160201461112e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610603565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361116f5761067c61116a8261257f565b611aa5565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166378ffd0a17f00000000000000000000000000000000000000000000000000000000000000006111c88461257f565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561120c57600080fd5b505af1158015611220573d6000803e3d6000fd5b5050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6060868686868686604051602001611292969594939291906125a3565b60405160208183030381529060405290509695505050505050565b60016112bb602060026126e1565b6112c591906124b3565b82602001541061130a5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610603565b600182602001600082825461131f9190612517565b9091555050602082015460005b60208110156113bc578160011660010361135b5782848260208110611353576113536126ed565b015550505050565b83816020811061136d5761136d6126ed565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826113a89190612703565b9150806113b481612725565b91505061132c565b506113c561273e565b505050565b8151600090602084016113e564ffffffffff85168284611ae7565b95945050505050565b6000610abc62ffffff19831660286004611b2e565b6000806114198360781c6001600160601b031690565b6001600160601b0316905060006114398460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610abc61145a83611b5e565b90565b6000610abc62ffffff198316826004611b2e565b6000610abc62ffffff19831660246004611b2e565b6000610abc62ffffff19831660046020611b6f565b6000610abc604c6114b981601886901c6001600160601b03166124b3565b62ffffff19851691906000611ccb565b60606000806114e18460181c6001600160601b031690565b6001600160601b0316905060405191508192506115018483602001611d47565b508181016020016040529052919050565b61151a6121b9565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611a9d57600182821c166000868360208110611a0057611a006126ed565b0154905081600103611a3d576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611a88565b84868460208110611a5057611a506126ed565b6020020151604051602001611a6f929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611a9590612725565b9150506119dd565b505092915050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b600080611af48385612517565b9050604051811115611b04575060005b80600003611b195762ffffff19915050610bfe565b5050606092831b9190911790911b1760181b90565b6000611b3b826020612754565b611b46906008612777565b60ff16611b54858585611b6f565b901c949350505050565b6000610abc62ffffff198316602c60205b60008160ff16600003611b8457506000610bfe565b611b978460181c6001600160601b031690565b6001600160601b0316611bad60ff841685612517565b1115611c1157611bf8611bc98560781c6001600160601b031690565b6001600160601b0316611be58660181c6001600160601b031690565b6001600160601b0316858560ff16611ea8565b60405162461bcd60e51b81526004016106039190612798565b60208260ff161115611c8b5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610603565b600882026000611ca48660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611ce18660781c6001600160601b031690565b6001600160601b03169050611cf586611f16565b84611d008784612517565b611d0a9190612517565b1115611d1d5762ffffff19915050611d3f565b611d278582612517565b9050611d3b8364ffffffffff168286611ae7565b9150505b949350505050565b600062ffffff1980841603611daf5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610603565b611db883611f4f565b611e185760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610603565b6000611e2d8460181c6001600160601b031690565b6001600160601b031690506000611e4d8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611e6d5760206060fd5b8285848460045afa50611e9e611e838760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000611eb586611f8c565b9150506000611ec386611f8c565b9150506000611ed186611f8c565b9150506000611edf86611f8c565b91505083838383604051602001611ef994939291906127ab565b604051602081830303815290604052945050505050949350505050565b6000611f2b8260181c6001600160601b031690565b611f3e8360781c6001600160601b031690565b016001600160601b03169050919050565b6000611f5b8260d81c90565b64ffffffffff1664ffffffffff03611f7557506000919050565b6000611f8083611f16565b60405110199392505050565b600080601f5b600f8160ff161115611fe1576000611fab826008612777565b60ff1685901c9050611fbc8161203a565b61ffff16841793508160ff16601014611fd757601084901b93505b5060001901611f92565b50600f5b60ff8160ff161015612034576000611ffe826008612777565b60ff1685901c905061200f8161203a565b61ffff16831792508160ff1660001461202a57601083901b92505b5060001901611fe5565b50915091565b600061204c60048360ff16901c61206c565b60ff1661ffff919091161760081b6120638261206c565b60ff1617919050565b600060f08083179060ff821690036120875750603092915050565b8060ff1660f10361209b5750603192915050565b8060ff1660f2036120af5750603292915050565b8060ff1660f3036120c35750603392915050565b8060ff1660f4036120d75750603492915050565b8060ff1660f5036120eb5750603592915050565b8060ff1660f6036120ff5750603692915050565b8060ff1660f7036121135750603792915050565b8060ff1660f8036121275750603892915050565b8060ff1660f90361213b5750603992915050565b8060ff1660fa0361214f5750606192915050565b8060ff1660fb036121635750606292915050565b8060ff1660fc036121775750606392915050565b8060ff1660fd0361218b5750606492915050565b8060ff1660fe0361219f5750606592915050565b8060ff1660ff036121b35750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6000602082840312156121ea57600080fd5b81356001600160a01b0381168114610bfe57600080fd5b60006020828403121561221357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061225257634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261227f57600080fd5b813567ffffffffffffffff8082111561229a5761229a612258565b604051601f8301601f19908116603f011681019082821181831017156122c2576122c2612258565b816040528381528660208588010111156122db57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561230d57600080fd5b813567ffffffffffffffff81111561232457600080fd5b611d3f8482850161226e565b6000806000610440848603121561234657600080fd5b833567ffffffffffffffff81111561235d57600080fd5b6123698682870161226e565b93505061042084018581111561237e57600080fd5b60208501925080359150509250925092565b803563ffffffff811681146123a457600080fd5b919050565b6000602082840312156123bb57600080fd5b610bfe82612390565b6000806000606084860312156123d957600080fd5b6123e284612390565b925060208401359150604084013567ffffffffffffffff81111561240557600080fd5b6124118682870161226e565b9150509250925092565b60005b8381101561243657818101518382015260200161241e565b838111156106cf5750506000910152565b6000815180845261245f81602086016020860161241b565b601f01601f19169290920160200192915050565b6040815260006124866040830185612447565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156124c5576124c561249d565b500390565b600063ffffffff8083168185168083038211156124e9576124e961249d565b01949350505050565b848152836020820152826040820152608060608201526000611e9e6080830184612447565b6000821982111561252a5761252a61249d565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611e9e6080830184612447565b83815282151560208201526060604082015260006113e56060830184612447565b805160208083015191908110156121b35760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516125eb81604c85016020870161241b565b91909101604c01979650505050505050565b600181815b8085111561263857816000190482111561261e5761261e61249d565b8085161561262b57918102915b93841c9390800290612602565b509250929050565b60008261264f57506001610abc565b8161265c57506000610abc565b8160018114612672576002811461267c57612698565b6001915050610abc565b60ff84111561268d5761268d61249d565b50506001821b610abc565b5060208310610133831016604e8410600b84101617156126bb575081810a610abc565b6126c583836125fd565b80600019048211156126d9576126d961249d565b029392505050565b6000610bfe8383612640565b634e487b7160e01b600052603260045260246000fd5b60008261272057634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016127375761273761249d565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600060ff821660ff84168082101561276e5761276e61249d565b90039392505050565b600060ff821660ff84168160ff04811182151516156126d9576126d961249d565b602081526000610bfe6020830184612447565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611e9e56fea26469706673582212206cd5f2e71913b52f48b3210b908d15134060e704be320524d517ccd5874fee8c64736f6c634300080f0033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
