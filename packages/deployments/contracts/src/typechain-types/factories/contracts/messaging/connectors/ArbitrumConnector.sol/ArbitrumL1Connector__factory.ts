/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumL1Connector,
  ArbitrumL1ConnectorInterface,
} from "../../../../../contracts/messaging/connectors/ArbitrumConnector.sol/ArbitrumL1Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "DefaultGasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
    ],
    name: "setDefaultGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002f6238038062002f6283398101604081905262000035916200029b565b8888888888888888878063ffffffff16600003620000845760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000c95760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064016200007b565b6001600160a01b038516620001105760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016200007b565b6200011b336200020a565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001a15760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b60448201526064016200007b565b613a98811015620001e45760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b60448201526064016200007b565b6101209190915261014052505050602b9390935550620003329950505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805163ffffffff811681146200027e57600080fd5b919050565b80516001600160a01b03811681146200027e57600080fd5b60008060008060008060008060006101208a8c031215620002bb57600080fd5b620002c68a62000269565b9850620002d660208b0162000269565b9750620002e660408b0162000283565b9650620002f660608b0162000283565b95506200030660808b0162000283565b945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b60805160a05160c05160e051610100516101205161014051612b81620003e1600039600081816102690152610fe601526000818161056c01528181611007015261108e0152600081816102fc0152610dbd0152600081816103ab0152818161086d0152610d960152600081816105450152818161060601528181611275015261135301526000818161037101528181610c5f0152610ee801526000818161043901526104e00152612b816000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80639fa92f9d1161013b578063d232c220116100b8578063ebf0c7171161007c578063ebf0c717146105aa578063ee250e06146105b2578063f38a267b146105bb578063fa31de01146105de578063fd54b228146105f157600080fd5b8063d232c2201461052e578063d69f9d6114610540578063d88beda214610567578063db1b76591461058e578063e7b4294c146105a157600080fd5b8063b95a2001116100ff578063b95a2001146104b5578063c2fb26a6146104db578063c5b350df14610502578063cc3942831461050a578063d1851c921461051d57600080fd5b80639fa92f9d1461046e578063b1f8100d14610474578063b2f8764314610487578063b46300ec1461049a578063b697f531146104a257600080fd5b80635bd11efc116101c9578063715018a61161018d578063715018a61461040957806382646a58146104115780638b42a40a146104245780638d3638f4146104375780638da5cb5b1461045d57600080fd5b80635bd11efc146103935780635f61e3ec146103a65780636188af0e146103e557806365eaf11b146103f85780636a42b8f81461040057600080fd5b80633490334a116102105780633490334a146102f75780633cf52ffb146103335780634ff746f61461033b5780635190bc531461035057806352a9674b1461036c57600080fd5b806306661abd1461024d57806325e3beda14610264578063272efc691461028b57806329460bd0146102be5780632bbd59ca146102c7575b600080fd5b6023545b6040519081526020015b60405180910390f35b6102517f000000000000000000000000000000000000000000000000000000000000000081565b6102ae610299366004612439565b60286020526000908152604090205460ff1681565b604051901515815260200161025b565b61025160255481565b6102ea6102d5366004612456565b602a6020526000908152604090205460ff1681565b60405161025b9190612485565b61031e7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161025b565b600254610251565b61034e610349366004612550565b6105fb565b005b6102ae61035e366004612439565b6001600160a01b0316301490565b61031e7f000000000000000000000000000000000000000000000000000000000000000081565b61034e6103a1366004612439565b6106aa565b6103cd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161025b565b61034e6103f3366004612585565b61073e565b610251610794565b62093a80610251565b61034e6107a3565b61034e61041f366004612550565b610862565b61034e610432366004612456565b610903565b7f000000000000000000000000000000000000000000000000000000000000000061031e565b6000546001600160a01b03166103cd565b306103cd565b61034e610482366004612439565b61096f565b61034e610495366004612439565b610a17565b61034e610a93565b61034e6104b0366004612439565b610ac9565b61031e6104c33660046125fe565b60296020526000908152604090205463ffffffff1681565b61031e7f000000000000000000000000000000000000000000000000000000000000000081565b61034e610b48565b6024546103cd906001600160a01b031681565b6001546001600160a01b03166103cd565b6000546001600160a01b0316156102ae565b6103cd7f000000000000000000000000000000000000000000000000000000000000000081565b6102517f000000000000000000000000000000000000000000000000000000000000000081565b6102ae61059c366004612439565b610ba3565b610251602b5481565b610251610bb4565b61025160265481565b6102ae6105c9366004612456565b60276020526000908152604090205460ff1681565b61034e6105ec366004612619565b610bc0565b6023546102519081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106655760405162461bcd60e51b815260040161065c9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61066e81610cfd565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161069f9291906126c8565b60405180910390a150565b6000546001600160a01b031633146106d5576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b61075083805190602001208383610e44565b6107855760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b604482015260640161065c565b61078e83610ed2565b50505050565b600061079e610bb4565b905090565b6000546001600160a01b031633146107ce576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107f157604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108039190612708565b11610821576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561084b576040516323295ef960e01b815260040160405180910390fd5b600154610860906001600160a01b03166111bb565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108c95760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161065c565b6108d28161121a565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161069f9291906126c8565b6000546001600160a01b0316331461092e576040516311a8a1bb60e31b815260040160405180910390fd5b602b5460408051918252602082018390527f577c2dd19d86f7555790e151b7455ad2b3897b5c6037646b19672da61a1a8734910160405180910390a1602b55565b6000546001600160a01b0316331461099a576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156109bf57506001600160a01b03811615155b156109dd576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610a0b57604051634a2fb73f60e11b815260040160405180910390fd5b610a14816112fe565b50565b6000546001600160a01b03163314610a42576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad910161069f565b6000610a9d610bb4565b604051602001610aaf91815260200190565b60405160208183030381529060405290506108d28161121a565b6000546001600160a01b03163314610af4576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87910161069f565b6001546001600160a01b03163314610b73576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610b859190612708565b1161084b5760405163d39c12bb60e01b815260040160405180910390fd5b6000610bae8261134c565b92915050565b600061079e6003611392565b3360009081526028602052604090205460ff16610c0e5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161065c565b63ffffffff80841660009081526029602052604090205416610c3181600161271f565b63ffffffff8581166000908152602960205260408120805463ffffffff191693909216929092179055610c887f000000000000000000000000000000000000000000000000000000000000000033848888886113a5565b80516020820120909150610c9d6003826113dd565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610cca60235490565b610cd49190612708565b610cdc610bb4565b85604051610ced9493929190612747565b60405180910390a1505050505050565b602454610d12906001600160a01b031661134c565b610d515760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161065c565b8051602014610d8c5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161065c565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166378ffd0a17f0000000000000000000000000000000000000000000000000000000000000000610de58461276c565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610e2957600080fd5b505af1158015610e3d573d6000803e3d6000fd5b5050505050565b6000806000858152602a602052604090205460ff166002811115610e6a57610e6a61246f565b14610ead5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161065c565b506000838152602a60205260409020805460ff191660019081179091555b9392505050565b600080610edf83826114fa565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610f1762ffffff19831661151e565b63ffffffff1614610f595760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161065c565b6000610f6a62ffffff198316611533565b905060016000828152602a602052604090205460ff166002811115610f9157610f9161246f565b14610fc85760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161065c565b6000818152602a60205260409020805460ff1916600217905561102b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612790565b5a10156110635760405162461bcd60e51b815260040161065c906020808252600490820152632167617360e01b604082015260600190565b600061107462ffffff19841661157c565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006110d162ffffff19891661158d565b6110e062ffffff198a166115a1565b6110ef62ffffff198b166115b6565b61110c61110162ffffff198d166115cb565b62ffffff19166115f9565b60405160240161111f94939291906127a8565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611168578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516111a6939291906127d7565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516020146112555760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161065c565b602554602b546024546040516345318d5360e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694638a631aa6946112b79491939092919091169060009088906004016127f8565b6020604051808303816000875af11580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190612836565b5050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006113777f0000000000000000000000000000000000000000000000000000000000000000611642565b6001600160a01b0316826001600160a01b0316149050919050565b6000610bae826113a06117a0565b611c61565b60608686868686866040516020016113c29695949392919061284f565b60405160208183030381529060405290509695505050505050565b60016113eb6020600261298d565b6113f59190612708565b82602001541061143a5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b604482015260640161065c565b600182602001600082825461144f9190612790565b9091555050602082015460005b60208110156114ec578160011660010361148b578284826020811061148357611483612999565b015550505050565b83816020811061149d5761149d612999565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826114d891906129af565b9150806114e4816129d1565b91505061145c565b506114f56129ea565b505050565b81516000906020840161151564ffffffffff85168284611d33565b95945050505050565b6000610bae62ffffff19831660286004611d7a565b6000806115498360781c6001600160601b031690565b6001600160601b0316905060006115698460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610bae61158a83611daa565b90565b6000610bae62ffffff198316826004611d7a565b6000610bae62ffffff19831660246004611d7a565b6000610bae62ffffff19831660046020611dbb565b6000610bae604c6115e981601886901c6001600160601b0316612708565b62ffffff19851691906000611f17565b60606000806116118460181c6001600160601b031690565b6001600160601b0316905060405191508192506116318483602001611f93565b508181016020016040529052919050565b60006001600160a01b038216331461166d5760405163253a6fc960e11b815260040160405180910390fd5b6000826001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d19190612a00565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561170e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117329190612a00565b90506001600160a01b038116610bae5760405162461bcd60e51b815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201526c34ba3437baba1039b2b73232b960991b606482015260840161065c565b6117a8612405565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611d2b57600182821c166000868360208110611c8e57611c8e612999565b0154905081600103611ccb576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611d16565b84868460208110611cde57611cde612999565b6020020151604051602001611cfd929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611d23906129d1565b915050611c6b565b505092915050565b600080611d408385612790565b9050604051811115611d50575060005b80600003611d655762ffffff19915050610ecb565b5050606092831b9190911790911b1760181b90565b6000611d87826020612a1d565b611d92906008612a40565b60ff16611da0858585611dbb565b901c949350505050565b6000610bae62ffffff198316602c60205b60008160ff16600003611dd057506000610ecb565b611de38460181c6001600160601b031690565b6001600160601b0316611df960ff841685612790565b1115611e5d57611e44611e158560781c6001600160601b031690565b6001600160601b0316611e318660181c6001600160601b031690565b6001600160601b0316858560ff166120f4565b60405162461bcd60e51b815260040161065c9190612a61565b60208260ff161115611ed75760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161065c565b600882026000611ef08660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611f2d8660781c6001600160601b031690565b6001600160601b03169050611f4186612162565b84611f4c8784612790565b611f569190612790565b1115611f695762ffffff19915050611f8b565b611f738582612790565b9050611f878364ffffffffff168286611d33565b9150505b949350505050565b600062ffffff1980841603611ffb5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161065c565b6120048361219b565b6120645760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161065c565b60006120798460181c6001600160601b031690565b6001600160601b0316905060006120998560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156120b95760206060fd5b8285848460045afa506120ea6120cf8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000612101866121d8565b915050600061210f866121d8565b915050600061211d866121d8565b915050600061212b866121d8565b915050838383836040516020016121459493929190612a74565b604051602081830303815290604052945050505050949350505050565b60006121778260181c6001600160601b031690565b61218a8360781c6001600160601b031690565b016001600160601b03169050919050565b60006121a78260d81c90565b64ffffffffff1664ffffffffff036121c157506000919050565b60006121cc83612162565b60405110199392505050565b600080601f5b600f8160ff16111561222d5760006121f7826008612a40565b60ff1685901c905061220881612286565b61ffff16841793508160ff1660101461222357601084901b93505b50600019016121de565b50600f5b60ff8160ff16101561228057600061224a826008612a40565b60ff1685901c905061225b81612286565b61ffff16831792508160ff1660001461227657601083901b92505b5060001901612231565b50915091565b600061229860048360ff16901c6122b8565b60ff1661ffff919091161760081b6122af826122b8565b60ff1617919050565b600060f08083179060ff821690036122d35750603092915050565b8060ff1660f1036122e75750603192915050565b8060ff1660f2036122fb5750603292915050565b8060ff1660f30361230f5750603392915050565b8060ff1660f4036123235750603492915050565b8060ff1660f5036123375750603592915050565b8060ff1660f60361234b5750603692915050565b8060ff1660f70361235f5750603792915050565b8060ff1660f8036123735750603892915050565b8060ff1660f9036123875750603992915050565b8060ff1660fa0361239b5750606192915050565b8060ff1660fb036123af5750606292915050565b8060ff1660fc036123c35750606392915050565b8060ff1660fd036123d75750606492915050565b8060ff1660fe036123eb5750606592915050565b8060ff1660ff036123ff5750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b0381168114610a1457600080fd5b60006020828403121561244b57600080fd5b8135610ecb81612424565b60006020828403121561246857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106124a757634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126124d457600080fd5b813567ffffffffffffffff808211156124ef576124ef6124ad565b604051601f8301601f19908116603f01168101908282118183101715612517576125176124ad565b8160405283815286602085880101111561253057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561256257600080fd5b813567ffffffffffffffff81111561257957600080fd5b611f8b848285016124c3565b6000806000610440848603121561259b57600080fd5b833567ffffffffffffffff8111156125b257600080fd5b6125be868287016124c3565b9350506104208401858111156125d357600080fd5b60208501925080359150509250925092565b803563ffffffff811681146125f957600080fd5b919050565b60006020828403121561261057600080fd5b610ecb826125e5565b60008060006060848603121561262e57600080fd5b612637846125e5565b925060208401359150604084013567ffffffffffffffff81111561265a57600080fd5b612666868287016124c3565b9150509250925092565b60005b8381101561268b578181015183820152602001612673565b8381111561078e5750506000910152565b600081518084526126b4816020860160208601612670565b601f01601f19169290920160200192915050565b6040815260006126db604083018561269c565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561271a5761271a6126f2565b500390565b600063ffffffff80831681851680830382111561273e5761273e6126f2565b01949350505050565b8481528360208201528260408201526080606082015260006120ea608083018461269c565b805160208083015191908110156123ff5760001960209190910360031b1b16919050565b600082198211156127a3576127a36126f2565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526120ea608083018461269c565b8381528215156020820152606060408201526000611515606083018461269c565b85815284602082015260018060a01b038416604082015282606082015260a06080820152600061282b60a083018461269c565b979650505050505050565b60006020828403121561284857600080fd5b5051919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161289781604c850160208701612670565b91909101604c01979650505050505050565b600181815b808511156128e45781600019048211156128ca576128ca6126f2565b808516156128d757918102915b93841c93908002906128ae565b509250929050565b6000826128fb57506001610bae565b8161290857506000610bae565b816001811461291e576002811461292857612944565b6001915050610bae565b60ff841115612939576129396126f2565b50506001821b610bae565b5060208310610133831016604e8410600b8410161715612967575081810a610bae565b61297183836128a9565b8060001904821115612985576129856126f2565b029392505050565b6000610ecb83836128ec565b634e487b7160e01b600052603260045260246000fd5b6000826129cc57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e3576129e36126f2565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600060208284031215612a1257600080fd5b8151610ecb81612424565b600060ff821660ff841680821015612a3757612a376126f2565b90039392505050565b600060ff821660ff84168160ff0481118215151615612985576129856126f2565b602081526000610ecb602083018461269c565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016120ea56fea264697066735822122091edb3bcb9dca9d10ffc173aa28cd77d5205a2b788c5f7fa58de2256472202db64736f6c634300080f0033";

type ArbitrumL1ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumL1ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumL1Connector__factory extends ContractFactory {
  constructor(...args: ArbitrumL1ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumL1Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      _defaultGasPrice,
      overrides || {}
    ) as Promise<ArbitrumL1Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      _defaultGasPrice,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumL1Connector {
    return super.attach(address) as ArbitrumL1Connector;
  }
  override connect(signer: Signer): ArbitrumL1Connector__factory {
    return super.connect(signer) as ArbitrumL1Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumL1ConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumL1ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumL1Connector {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumL1Connector;
  }
}
