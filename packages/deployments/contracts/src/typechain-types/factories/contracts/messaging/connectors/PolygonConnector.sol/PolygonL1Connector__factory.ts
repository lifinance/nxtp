/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonL1Connector,
  PolygonL1ConnectorInterface,
} from "../../../../../contracts/messaging/connectors/PolygonConnector.sol/PolygonL1Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200451738038062004517833981016040819052620000359162000364565b80878a8a8a8a8a8a8a8a878063ffffffff16600003620000865760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000cb5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064016200007d565b6001600160a01b038516620001125760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016200007d565b6200011d3362000243565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001a35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b60448201526064016200007d565b613a98811015620001e65760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b60448201526064016200007d565b61012091909152610140525050602c80546001600160a01b039788166001600160a01b031991821617909155602b8054969097169516949094179094555062000234925087915050620002a2565b50505050505050505062000404565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602d546001600160a01b031615620003105760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200007d565b602d80546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200034757600080fd5b919050565b80516001600160a01b03811681146200034757600080fd5b60008060008060008060008060006101208a8c0312156200038457600080fd5b6200038f8a62000332565b98506200039f60208b0162000332565b9750620003af60408b016200034c565b9650620003bf60608b016200034c565b9550620003cf60808b016200034c565b945060a08a0151935060c08a0151925060e08a01519150620003f56101008b016200034c565b90509295985092959850929598565b60805160a05160c05160e051610100516101205161014051614072620004a5600039600081816102c70152610f9001526000818161061301528181610fb1015261103801526000818161035a01526115800152600081816104090152818161092801526115590152600081816105ec01526106ca0152600081816103cf01528181610d500152610e920152600081816104a7015261058701526140726000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80639fa92f9d1161015c578063d1851c92116100ce578063ebf0c71711610087578063ebf0c7171461065b578063ee250e0614610663578063f38a267b1461066c578063f953cec71461068f578063fa31de01146106a2578063fd54b228146106b557600080fd5b8063d1851c92146105c4578063d232c220146105d5578063d69f9d61146105e7578063d88beda21461060e578063db1b765914610635578063de9b771f1461064857600080fd5b8063b697f53111610120578063b697f53114610536578063b95a200114610549578063c0857ba01461056f578063c2fb26a614610582578063c5b350df146105a9578063cc394283146105b157600080fd5b80639fa92f9d146104ef578063aea4e49e146104f5578063b1f8100d14610508578063b2f876431461051b578063b46300ec1461052e57600080fd5b80635bd11efc116101f55780636a42b8f8116101b95780636a42b8f814610481578063715018a61461048a57806382646a58146104925780638d3638f4146104a55780638da5cb5b146104cb578063972c4928146104dc57600080fd5b80635bd11efc146103f15780635f61e3ec14610404578063607f2d42146104435780636188af0e1461046657806365eaf11b1461047957600080fd5b80632bbd59ca116102475780632bbd59ca146103255780633490334a146103555780633cf52ffb146103915780634ff746f6146103995780635190bc53146103ae57806352a9674b146103ca57600080fd5b806306661abd146102845780630e387de61461029b57806325e3beda146102c2578063272efc69146102e957806329460bd01461031c575b600080fd5b6023545b6040519081526020015b60405180910390f35b6102887f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6102887f000000000000000000000000000000000000000000000000000000000000000081565b61030c6102f73660046137f7565b60286020526000908152604090205460ff1681565b6040519015158152602001610292565b61028860255481565b610348610333366004613814565b602a6020526000908152604090205460ff1681565b6040516102929190613843565b61037c7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610292565b600254610288565b6103ac6103a736600461392e565b6106bf565b005b61030c6103bc3660046137f7565b6001600160a01b0316301490565b61037c7f000000000000000000000000000000000000000000000000000000000000000081565b6103ac6103ff3660046137f7565b610765565b61042b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610292565b61030c610451366004613814565b602e6020526000908152604090205460ff1681565b6103ac610474366004613962565b6107f9565b61028861084f565b62093a80610288565b6103ac61085e565b6103ac6104a036600461392e565b61091d565b7f000000000000000000000000000000000000000000000000000000000000000061037c565b6000546001600160a01b031661042b565b602d5461042b906001600160a01b031681565b3061042b565b6103ac6105033660046137f7565b6109be565b6103ac6105163660046137f7565b610a4c565b6103ac6105293660046137f7565b610af4565b6103ac610b70565b6103ac6105443660046137f7565b610ba6565b61037c6105573660046139da565b60296020526000908152604090205463ffffffff1681565b602c5461042b906001600160a01b031681565b61037c7f000000000000000000000000000000000000000000000000000000000000000081565b6103ac610c25565b60245461042b906001600160a01b031681565b6001546001600160a01b031661042b565b6000546001600160a01b03161561030c565b61042b7f000000000000000000000000000000000000000000000000000000000000000081565b6102887f000000000000000000000000000000000000000000000000000000000000000081565b61030c6106433660046137f7565b610c80565b602b5461042b906001600160a01b031681565b610288610c8b565b61028860265481565b61030c61067a366004613814565b60276020526000908152604090205460ff1681565b6103ac61069d36600461392e565b610c97565b6103ac6106b03660046139f5565b610cb1565b6023546102889081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107295760405162461bcd60e51b81526004016107209060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161075a929190613aa3565b60405180910390a150565b6000546001600160a01b03163314610790576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b61080b83805190602001208383610dee565b6108405760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610720565b61084983610e7c565b50505050565b6000610859610c8b565b905090565b6000546001600160a01b03163314610889576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036108ac57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108be9190613ae3565b116108dc576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610906576040516323295ef960e01b815260040160405180910390fd5b60015461091b906001600160a01b0316611165565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109845760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610720565b61098d816111c4565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161075a929190613aa3565b602d546001600160a01b031615610a2a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610720565b602d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a77576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a9c57506001600160a01b03811615155b15610aba576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610ae857604051634a2fb73f60e11b815260040160405180910390fd5b610af1816111cd565b50565b6000546001600160a01b03163314610b1f576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad910161075a565b6000610b7a610c8b565b604051602001610b8c91815260200190565b604051602081830303815290604052905061098d816111c4565b6000546001600160a01b03163314610bd1576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260286020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87910161075a565b6001546001600160a01b03163314610c50576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610c629190613ae3565b116109065760405163d39c12bb60e01b815260040160405180910390fd5b600060015b92915050565b6000610859600361121b565b6000610ca28261122e565b9050610cad81611514565b5050565b3360009081526028602052604090205460ff16610cff5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610720565b63ffffffff80841660009081526029602052604090205416610d22816001613afa565b63ffffffff8581166000908152602960205260408120805463ffffffff191693909216929092179055610d797f00000000000000000000000000000000000000000000000000000000000000003384888888611635565b80516020820120909150610d8e60038261166d565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610dbb60235490565b610dc59190613ae3565b610dcd610c8b565b85604051610dde9493929190613b22565b60405180910390a1505050505050565b6000806000858152602a602052604090205460ff166002811115610e1457610e1461382d565b14610e575760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610720565b506000838152602a60205260409020805460ff191660019081179091555b9392505050565b600080610e89838261178a565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610ec162ffffff1983166117ae565b63ffffffff1614610f035760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610720565b6000610f1462ffffff1983166117c3565b905060016000828152602a602052604090205460ff166002811115610f3b57610f3b61382d565b14610f725760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610720565b6000818152602a60205260409020805460ff19166002179055610fd57f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613b47565b5a101561100d5760405162461bcd60e51b8152600401610720906020808252600490820152632167617360e01b604082015260600190565b600061101e62ffffff19841661180c565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061107b62ffffff19891661181d565b61108a62ffffff198a16611831565b61109962ffffff198b16611846565b6110b66110ab62ffffff198d1661185b565b62ffffff1916611889565b6040516024016110c99493929190613b5f565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611112578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a8460405161115093929190613b8e565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610af1816118d2565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610c858261122961193d565b611dfe565b6060600061123b83611ed0565b9050600061124882611f2f565b9050600061125583611f58565b905060008161126384611f81565b61126c8661213d565b60405160200161127e93929190613baf565b60408051601f1981840301815291815281516020928301206000818152602e90935291205490915060ff16156113025760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610720565b6000818152602e60205260408120805460ff1916600117905561132485612159565b90506000611331826122a2565b905061133c81612332565b602d546001600160a01b039081169116146113a75760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610720565b60006113b28761235b565b90506113d26113c2846020015190565b876113cc8a612377565b84612393565b61142a5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610720565b6114588561143789612646565b6114408a612662565b8461144a8c61267e565b6114538d61269a565b6126b6565b506000611464836127dc565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03661149a611495836000612818565b612850565b146114e75760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610720565b60006114f2846128cb565b8060200190518101906115059190613bdc565b9b9a5050505050505050505050565b805160201461154f5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610720565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166378ffd0a17f00000000000000000000000000000000000000000000000000000000000000006115a884613c49565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156115ec57600080fd5b505af1158015611600573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161075a929190613aa3565b606086868686868660405160200161165296959493929190613c6d565b60405160208183030381529060405290509695505050505050565b600161167b60206002613dab565b6116859190613ae3565b8260200154106116ca5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610720565b60018260200160008282546116df9190613b47565b9091555050602082015460005b602081101561177c578160011660010361171b578284826020811061171357611713613db7565b015550505050565b83816020811061172d5761172d613db7565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826117689190613de3565b91508061177481613df7565b9150506116ec565b50611785613e10565b505050565b8151600090602084016117a564ffffffffff851682846128e7565b95945050505050565b6000610c8562ffffff1983166028600461292e565b6000806117d98360781c6001600160601b031690565b6001600160601b0316905060006117f98460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610c8561181a8361295e565b90565b6000610c8562ffffff19831682600461292e565b6000610c8562ffffff1983166024600461292e565b6000610c8562ffffff1983166004602061296f565b6000610c85604c61187981601886901c6001600160601b0316613ae3565b62ffffff19851691906000612acb565b60606000806118a18460181c6001600160601b031690565b6001600160601b0316905060405191508192506118c18483602001612b45565b508181016020016040529052919050565b602b54602d5460405163b472047760e01b81526001600160a01b039283169263b472047792611908929116908590600401613e26565b600060405180830381600087803b15801561192257600080fd5b505af1158015611936573d6000803e3d6000fd5b5050505050565b6119456137c3565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611ec857600182821c166000868360208110611e2b57611e2b613db7565b0154905081600103611e68576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611eb3565b84868460208110611e7b57611e7b613db7565b6020020151604051602001611e9a929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611ec090613df7565b915050611e08565b505092915050565b6040805160208101909152606081526000611f1a611f158460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b612c9c565b60408051602081019091529081529392505050565b6060610c858260000151600881518110611f4b57611f4b613db7565b6020026020010151612db1565b6000610c858260000151600281518110611f7457611f74613db7565b6020026020010151612850565b60408051602081019091526000815281516060919015610c8557600080611fa9600086612e4d565b60f81c90506001811480611fc057508060ff166003145b1561206757600185516002611fd59190613e4a565b611fdf9190613ae3565b6001600160401b03811115611ff657611ff661386b565b6040519080825280601f01601f191660200182016040528015612020576020820181803683370190505b5092506000612030600187612e4d565b9050808460008151811061204657612046613db7565b60200101906001600160f81b031916908160001a90535060019250506120ca565b6002855160026120779190613e4a565b6120819190613ae3565b6001600160401b038111156120985761209861386b565b6040519080825280601f01601f1916602001820160405280156120c2576020820181803683370190505b509250600091505b60ff82165b8351811015612134576120f96120e860ff851683613ae3565b6120f3906002613b47565b87612e4d565b84828151811061210b5761210b613db7565b60200101906001600160f81b031916908160001a9053508061212c81613df7565b9150506120cf565b50505092915050565b6000610c858260000151600981518110611f7457611f74613db7565b61217d60405180606001604052806060815260200160608152602001600081525090565b6121978260000151600681518110611f4b57611f4b613db7565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526121cd81612ece565b156121e2576121db81612c9c565b825261228e565b602082015180516000906121f890600190613ae3565b6001600160401b0381111561220f5761220f61386b565b6040519080825280601f01601f191660200182016040528015612239576020820181803683370190505b50905060008083602101915082602001905061225782828551612f09565b60408051808201825260008082526020918201528151808301909252845182528085019082015261228790612c9c565b8652505050505b6122978361213d565b604083015250919050565b6040805160808101825260009181018281526060808301939093528152602081019190915260006122f083600001516003815181106122e3576122e3613db7565b6020026020010151612c9c565b83604001518151811061230557612305613db7565b60200260200101519050604051806040016040528082815260200161232983612c9c565b90529392505050565b6000610c85826020015160008151811061234e5761234e613db7565b6020026020010151612f94565b6000610c858260000151600581518110611f7457611f74613db7565b6060610c858260000151600781518110611f4b57611f4b613db7565b6000806123c78460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006123d482612c9c565b9050606080856000806123e68b611f81565b9050805160000361240157600097505050505050505061263e565b60005b86518110156126355781518311156124275760009850505050505050505061263e565b61244987828151811061243c5761243c613db7565b6020026020010151612fae565b95508580519060200120841461246a5760009850505050505050505061263e565b61247f8782815181106122e3576122e3613db7565b9450845160110361255157815183036124de578c805190602001206124b086601081518110611f4b57611f4b613db7565b80519060200120036124cd5760019850505050505050505061263e565b60009850505050505050505061263e565b60008284815181106124f2576124f2613db7565b016020015160f81c90506010811115612517576000995050505050505050505061263e565b61253c868260ff168151811061252f5761252f613db7565b602002602001015161302c565b9450612549600185613b47565b935050612623565b84516002036124cd57600061257c61257587600081518110611f4b57611f4b613db7565b848661305a565b835190915061258b8286613b47565b036125de578d805190602001206125ae87600181518110611f4b57611f4b613db7565b80519060200120036125cc576001995050505050505050505061263e565b6000995050505050505050505061263e565b806000036125f8576000995050505050505050505061263e565b6126028185613b47565b935061261a8660018151811061252f5761252f613db7565b94506126239050565b8061262d81613df7565b915050612404565b50505050505050505b949350505050565b6000610c858260000151600381518110611f7457611f74613db7565b6000610c858260000151600481518110611f7457611f74613db7565b6000610c858260000151600081518110611f7457611f74613db7565b6060610c858260000151600181518110611f4b57611f4b613db7565b602c546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa158015612708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272c9190613e69565b5093505092509250612783828b6127439190613ae3565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588613161565b6127cf5760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610720565b9998505050505050505050565b604080516020810190915260608152604051806020016040528061281084602001516001815181106122e3576122e3613db7565b905292915050565b6040805180820190915260008082526020820152825180518390811061284057612840613db7565b6020026020010151905092915050565b80516000901580159061286557508151602110155b61286e57600080fd5b600061287d83602001516132c9565b905060008184600001516128919190613ae3565b90506000808386602001516128a69190613b47565b90508051915060208310156128c257826020036101000a820491505b50949350505050565b6060610c858260200151600281518110611f4b57611f4b613db7565b6000806128f48385613b47565b9050604051811115612904575060005b806000036129195762ffffff19915050610e75565b5050606092831b9190911790911b1760181b90565b600061293b826020613eb6565b612946906008613ed9565b60ff1661295485858561296f565b901c949350505050565b6000610c8562ffffff198316602c60205b60008160ff1660000361298457506000610e75565b6129978460181c6001600160601b031690565b6001600160601b03166129ad60ff841685613b47565b1115612a11576129f86129c98560781c6001600160601b031690565b6001600160601b03166129e58660181c6001600160601b031690565b6001600160601b0316858560ff1661334a565b60405162461bcd60e51b81526004016107209190613efa565b60208260ff161115612a8b5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610720565b600882026000612aa48660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612ae18660781c6001600160601b031690565b6001600160601b03169050612af5866133b8565b84612b008784613b47565b612b0a9190613b47565b1115612b1d5762ffffff1991505061263e565b612b278582613b47565b9050612b3b8364ffffffffff1682866128e7565b9695505050505050565b600062ffffff1980841603612bad5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610720565b612bb6836133f1565b612c165760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610720565b6000612c2b8460181c6001600160601b031690565b6001600160601b031690506000612c4b8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115612c6b5760206060fd5b8285848460045afa50612b3b612c818760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6060612ca782612ece565b612cb057600080fd5b6000612cbb8361342e565b90506000816001600160401b03811115612cd757612cd761386b565b604051908082528060200260200182016040528015612d1c57816020015b6040805180820190915260008082526020820152815260200190600190039081612cf55790505b5090506000612d2e85602001516132c9565b8560200151612d3d9190613b47565b90506000805b84811015612da657612d54836134b3565b9150604051806040016040528083815260200184815250848281518110612d7d57612d7d613db7565b6020908102919091010152612d928284613b47565b925080612d9e81613df7565b915050612d43565b509195945050505050565b8051606090612dbf57600080fd5b6000612dce83602001516132c9565b90506000818460000151612de29190613ae3565b90506000816001600160401b03811115612dfe57612dfe61386b565b6040519080825280601f01601f191660200182016040528015612e28576020820181803683370190505b50905060008160200190506128c2848760200151612e469190613b47565b8285613557565b6000612e5a600284613f0d565b15612e9457601082612e6d600286613de3565b81518110612e7d57612e7d613db7565b0160200151612e8f919060f81c613f21565b612ec4565b601082612ea2600286613de3565b81518110612eb257612eb2613db7565b0160200151612ec4919060f81c613f43565b60f81b9392505050565b80516000908103612ee157506000919050565b6020820151805160001a9060c0821015612eff575060009392505050565b5060019392505050565b80600003612f1657505050565b60208110612f4e5782518252612f2d602084613b47565b9250612f3a602083613b47565b9150612f47602082613ae3565b9050612f16565b80600003612f5b57505050565b60006001612f6a836020613ae3565b612f7690610100613dab565b612f809190613ae3565b935183518516941916939093179091525050565b8051600090601514612fa557600080fd5b610c8582612850565b6060600082600001516001600160401b03811115612fce57612fce61386b565b6040519080825280601f01601f191660200182016040528015612ff8576020820181803683370190505b509050805160000361300a5792915050565b60008160200190506130258460200151828660000151613557565b5092915050565b805160009060211461303d57600080fd5b600080836020015160016130519190613b47565b51949350505050565b6000808061306786611f81565b9050600081516001600160401b038111156130845761308461386b565b6040519080825280601f01601f1916602001820160405280156130ae576020820181803683370190505b509050845b82516130bf9087613b47565b8110156131325760008782815181106130da576130da613db7565b01602001516001600160f81b031916905080836130f78985613ae3565b8151811061310757613107613db7565b60200101906001600160f81b031916908160001a90535050808061312a90613df7565b9150506130b3565b5080805190602001208280519060200120036131515781519250613156565b600092505b509095945050505050565b6000602082516131719190613f0d565b156131b55760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610720565b6000602083516131c59190613de3565b90506131d2816002613dab565b85106132185760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610720565b60008660205b855181116132bb57858101519250613237600289613f0d565b60000361326f57604080516020810184905290810184905260600160405160208183030381529060405280519060200120915061329c565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b6132a7600289613de3565b97506132b4602082613b47565b905061321e565b509094149695505050505050565b8051600090811a60808110156132e25750600092915050565b60b88110806132fd575060c081108015906132fd575060f881105b1561330b5750600192915050565b60c081101561333857613320600160b8613eb6565b61332d9060ff1682613ae3565b610e75906001613b47565b613320600160f8613eb6565b50919050565b606060006133578661359c565b91505060006133658661359c565b91505060006133738661359c565b91505060006133818661359c565b9150508383838360405160200161339b9493929190613f65565b604051602081830303815290604052945050505050949350505050565b60006133cd8260181c6001600160601b031690565b6133e08360781c6001600160601b031690565b016001600160601b03169050919050565b60006133fd8260d81c90565b64ffffffffff1664ffffffffff0361341757506000919050565b6000613422836133b8565b60405110199392505050565b8051600090810361344157506000919050565b60008061345184602001516132c9565b84602001516134609190613b47565b90506000846000015185602001516134789190613b47565b90505b808210156134aa5761348c826134b3565b6134969083613b47565b9150826134a281613df7565b93505061347b565b50909392505050565b80516000908190811a60808110156134ce5760019150613025565b60b88110156134f4576134e2608082613ae3565b6134ed906001613b47565b9150613025565b60c08110156135215760b78103600185019450806020036101000a85510460018201810193505050613025565b60f8811015613535576134e260c082613ae3565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361356457505050565b60208110612f4e578251825261357b602084613b47565b9250613588602083613b47565b9150613595602082613ae3565b9050613564565b600080601f5b600f8160ff1611156135f15760006135bb826008613ed9565b60ff1685901c90506135cc8161364a565b61ffff16841793508160ff166010146135e757601084901b93505b50600019016135a2565b50600f5b60ff8160ff16101561364457600061360e826008613ed9565b60ff1685901c905061361f8161364a565b61ffff16831792508160ff1660001461363a57601083901b92505b50600019016135f5565b50915091565b600061365c60048360ff16901c61367c565b60ff1661ffff919091161760081b6136738261367c565b60ff1617919050565b600060f08083179060ff821690036136975750603092915050565b8060ff1660f1036136ab5750603192915050565b8060ff1660f2036136bf5750603292915050565b8060ff1660f3036136d35750603392915050565b8060ff1660f4036136e75750603492915050565b8060ff1660f5036136fb5750603592915050565b8060ff1660f60361370f5750603692915050565b8060ff1660f7036137235750603792915050565b8060ff1660f8036137375750603892915050565b8060ff1660f90361374b5750603992915050565b8060ff1660fa0361375f5750606192915050565b8060ff1660fb036137735750606292915050565b8060ff1660fc036137875750606392915050565b8060ff1660fd0361379b5750606492915050565b8060ff1660fe036137af5750606592915050565b8060ff1660ff036133445750606692915050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b0381168114610af157600080fd5b60006020828403121561380957600080fd5b8135610e75816137e2565b60006020828403121561382657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061386557634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156138a9576138a961386b565b604052919050565b60006001600160401b038211156138ca576138ca61386b565b50601f01601f191660200190565b600082601f8301126138e957600080fd5b81356138fc6138f7826138b1565b613881565b81815284602083860101111561391157600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561394057600080fd5b81356001600160401b0381111561395657600080fd5b61263e848285016138d8565b6000806000610440848603121561397857600080fd5b83356001600160401b0381111561398e57600080fd5b61399a868287016138d8565b9350506104208401858111156139af57600080fd5b60208501925080359150509250925092565b803563ffffffff811681146139d557600080fd5b919050565b6000602082840312156139ec57600080fd5b610e75826139c1565b600080600060608486031215613a0a57600080fd5b613a13846139c1565b92506020840135915060408401356001600160401b03811115613a3557600080fd5b613a41868287016138d8565b9150509250925092565b60005b83811015613a66578181015183820152602001613a4e565b838111156108495750506000910152565b60008151808452613a8f816020860160208601613a4b565b601f01601f19169290920160200192915050565b604081526000613ab66040830185613a77565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613af557613af5613acd565b500390565b600063ffffffff808316818516808303821115613b1957613b19613acd565b01949350505050565b848152836020820152826040820152608060608201526000612b3b6080830184613a77565b60008219821115613b5a57613b5a613acd565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152612b3b6080830184613a77565b83815282151560208201526060604082015260006117a56060830184613a77565b83815260008351613bc7816020850160208801613a4b565b60209201918201929092526040019392505050565b600060208284031215613bee57600080fd5b81516001600160401b03811115613c0457600080fd5b8201601f81018413613c1557600080fd5b8051613c236138f7826138b1565b818152856020838501011115613c3857600080fd5b6117a5826020830160208601613a4b565b805160208083015191908110156133445760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251613cb581604c850160208701613a4b565b91909101604c01979650505050505050565b600181815b80851115613d02578160001904821115613ce857613ce8613acd565b80851615613cf557918102915b93841c9390800290613ccc565b509250929050565b600082613d1957506001610c85565b81613d2657506000610c85565b8160018114613d3c5760028114613d4657613d62565b6001915050610c85565b60ff841115613d5757613d57613acd565b50506001821b610c85565b5060208310610133831016604e8410600b8410161715613d85575081810a610c85565b613d8f8383613cc7565b8060001904821115613da357613da3613acd565b029392505050565b6000610e758383613d0a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082613df257613df2613dcd565b500490565b600060018201613e0957613e09613acd565b5060010190565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b038316815260406020820181905260009061263e90830184613a77565b6000816000190483118215151615613e6457613e64613acd565b500290565b600080600080600060a08688031215613e8157600080fd5b855194506020860151935060408601519250606086015191506080860151613ea8816137e2565b809150509295509295909350565b600060ff821660ff841680821015613ed057613ed0613acd565b90039392505050565b600060ff821660ff84168160ff0481118215151615613da357613da3613acd565b602081526000610e756020830184613a77565b600082613f1c57613f1c613dcd565b500690565b600060ff831680613f3457613f34613dcd565b8060ff84160691505092915050565b600060ff831680613f5657613f56613dcd565b8060ff84160491505092915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201612b3b56fea264697066735822122012c80a1c5be68e2184592e889584d17189fb8b51ae124d9170f3cb097417889a64736f6c634300080f0033";

type PolygonL1ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonL1ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonL1Connector__factory extends ContractFactory {
  constructor(...args: PolygonL1ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonL1Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonL1Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonL1Connector {
    return super.attach(address) as PolygonL1Connector;
  }
  override connect(signer: Signer): PolygonL1Connector__factory {
    return super.connect(signer) as PolygonL1Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonL1ConnectorInterface {
    return new utils.Interface(_abi) as PolygonL1ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonL1Connector {
    return new Contract(address, _abi, signerOrProvider) as PolygonL1Connector;
  }
}
