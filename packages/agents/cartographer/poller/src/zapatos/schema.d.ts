/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos, and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 - 2022 George MacKerron
Released under the MIT licence: see LICENCE file
*/

declare module 'zapatos/schema' {

  import type * as db from 'zapatos/db';

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary { version: 104 }


  /* === schema: public === */

  /* --- enums --- */

  export type transfer_status = 'CompletedFast' | 'CompletedSlow' | 'Executed' | 'Reconciled' | 'XCalled';
  export namespace every {
    export type transfer_status = ['CompletedFast', 'CompletedSlow', 'Executed', 'Reconciled', 'XCalled'];
  }

  /* --- tables --- */

  /**
   * **asset_balances**
   * - Table in database
   */
  export namespace asset_balances {
    export type Table = 'asset_balances';
    export interface Selectable {
      /**
      * **asset_balances.asset_canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    asset_canonical_id: string;
      /**
      * **asset_balances.asset_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    asset_domain: string;
      /**
      * **asset_balances.router_address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    router_address: string;
      /**
      * **asset_balances.balance**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    balance: number;
    }
    export interface JSONSelectable {
      /**
      * **asset_balances.asset_canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    asset_canonical_id: string;
      /**
      * **asset_balances.asset_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    asset_domain: string;
      /**
      * **asset_balances.router_address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    router_address: string;
      /**
      * **asset_balances.balance**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    balance: number;
    }
    export interface Whereable {
      /**
      * **asset_balances.asset_canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    asset_canonical_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **asset_balances.asset_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    asset_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **asset_balances.router_address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    router_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **asset_balances.balance**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    balance?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **asset_balances.asset_canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    asset_canonical_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **asset_balances.asset_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    asset_domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **asset_balances.router_address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    router_address: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **asset_balances.balance**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    balance?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **asset_balances.asset_canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    asset_canonical_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **asset_balances.asset_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    asset_domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **asset_balances.router_address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    router_address?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **asset_balances.balance**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    balance?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'asset_balances_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **assets**
   * - Table in database
   */
  export namespace assets {
    export type Table = 'assets';
    export interface Selectable {
      /**
      * **assets.local**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    local: string;
      /**
      * **assets.adopted**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    adopted: string;
      /**
      * **assets.canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    canonical_id: string;
      /**
      * **assets.canonical_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    canonical_domain: string;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    domain: string;
    }
    export interface JSONSelectable {
      /**
      * **assets.local**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    local: string;
      /**
      * **assets.adopted**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    adopted: string;
      /**
      * **assets.canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    canonical_id: string;
      /**
      * **assets.canonical_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    canonical_domain: string;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    domain: string;
    }
    export interface Whereable {
      /**
      * **assets.local**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    local?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.adopted**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    adopted?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    canonical_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.canonical_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    canonical_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **assets.local**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    local: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.adopted**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    adopted: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    canonical_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.canonical_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    canonical_domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    domain: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **assets.local**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    local?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.adopted**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    adopted?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.canonical_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    canonical_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.canonical_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    canonical_domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'assets_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **checkpoints**
   * - Table in database
   */
  export namespace checkpoints {
    export type Table = 'checkpoints';
    export interface Selectable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    check_name: string;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    check_point: number;
    }
    export interface JSONSelectable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    check_name: string;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    check_point: number;
    }
    export interface Whereable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    check_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    check_point?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    check_name: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    check_point?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    check_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
    check_point?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'checkpoints_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **daily_router_tvl**
   * - View in database
   */
  export namespace daily_router_tvl {
    export type Table = 'daily_router_tvl';
    export interface Selectable {
      /**
      * **daily_router_tvl.latest_transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    latest_transfer_day: Date | null;
      /**
      * **daily_router_tvl.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **daily_router_tvl.router**
      * - `bpchar` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **daily_router_tvl.tvl**
      * - `numeric` in database
      * - Nullable, no default
      */
    tvl: number | null;
    }
    export interface JSONSelectable {
      /**
      * **daily_router_tvl.latest_transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    latest_transfer_day: db.DateString | null;
      /**
      * **daily_router_tvl.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **daily_router_tvl.router**
      * - `bpchar` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **daily_router_tvl.tvl**
      * - `numeric` in database
      * - Nullable, no default
      */
    tvl: number | null;
    }
    export interface Whereable {
      /**
      * **daily_router_tvl.latest_transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    latest_transfer_day?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_router_tvl.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_router_tvl.router**
      * - `bpchar` in database
      * - Nullable, no default
      */
    router?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_router_tvl.tvl**
      * - `numeric` in database
      * - Nullable, no default
      */
    tvl?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **daily_transfer_metrics**
   * - View in database
   */
  export namespace daily_transfer_metrics {
    export type Table = 'daily_transfer_metrics';
    export interface Selectable {
      /**
      * **daily_transfer_metrics.transfer_date**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_date: Date | null;
      /**
      * **daily_transfer_metrics.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **daily_transfer_metrics.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **daily_transfer_metrics.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **daily_transfer_metrics.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **daily_transfer_metrics.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.unique_user_count**
      * - `int8` in database
      * - Nullable, no default
      */
    unique_user_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.force_slow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.zero_amount_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    zero_amount_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.xcalled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    xcalled_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.executed_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    executed_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.reconciled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    reconciled_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.completedfast_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedfast_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.completedslow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedslow_transfer_count: db.Int8String | null;
      /**
      * **daily_transfer_metrics.fastpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttv_in_secs: number | null;
      /**
      * **daily_transfer_metrics.fastpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttr_in_secs: number | null;
      /**
      * **daily_transfer_metrics.slowpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttv_in_secs: number | null;
      /**
      * **daily_transfer_metrics.slowpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttr_in_secs: number | null;
    }
    export interface JSONSelectable {
      /**
      * **daily_transfer_metrics.transfer_date**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_date: db.DateString | null;
      /**
      * **daily_transfer_metrics.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **daily_transfer_metrics.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **daily_transfer_metrics.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **daily_transfer_metrics.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **daily_transfer_metrics.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count: number | null;
      /**
      * **daily_transfer_metrics.unique_user_count**
      * - `int8` in database
      * - Nullable, no default
      */
    unique_user_count: number | null;
      /**
      * **daily_transfer_metrics.force_slow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.zero_amount_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    zero_amount_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.xcalled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    xcalled_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.executed_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    executed_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.reconciled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    reconciled_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.completedfast_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedfast_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.completedslow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedslow_transfer_count: number | null;
      /**
      * **daily_transfer_metrics.fastpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttv_in_secs: number | null;
      /**
      * **daily_transfer_metrics.fastpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttr_in_secs: number | null;
      /**
      * **daily_transfer_metrics.slowpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttv_in_secs: number | null;
      /**
      * **daily_transfer_metrics.slowpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttr_in_secs: number | null;
    }
    export interface Whereable {
      /**
      * **daily_transfer_metrics.transfer_date**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.router**
      * - `text` in database
      * - Nullable, no default
      */
    router?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.unique_user_count**
      * - `int8` in database
      * - Nullable, no default
      */
    unique_user_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.force_slow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.zero_amount_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    zero_amount_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.xcalled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    xcalled_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.executed_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    executed_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.reconciled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    reconciled_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.completedfast_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedfast_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.completedslow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedslow_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.fastpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttv_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.fastpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttr_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.slowpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttv_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_metrics.slowpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttr_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **daily_transfer_volume**
   * - View in database
   */
  export namespace daily_transfer_volume {
    export type Table = 'daily_transfer_volume';
    export interface Selectable {
      /**
      * **daily_transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **daily_transfer_volume.transfer_date**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_date: Date | null;
      /**
      * **daily_transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **daily_transfer_volume.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **daily_transfer_volume.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **daily_transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **daily_transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume: number | null;
      /**
      * **daily_transfer_volume.force_slow_transfer_volume**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_volume: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **daily_transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **daily_transfer_volume.transfer_date**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_date: db.DateString | null;
      /**
      * **daily_transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **daily_transfer_volume.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **daily_transfer_volume.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **daily_transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **daily_transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume: number | null;
      /**
      * **daily_transfer_volume.force_slow_transfer_volume**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_volume: number | null;
    }
    export interface Whereable {
      /**
      * **daily_transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.transfer_date**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_date?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.router**
      * - `text` in database
      * - Nullable, no default
      */
    router?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_transfer_volume.force_slow_transfer_volume**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_volume?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **hourly_transfer_metrics**
   * - View in database
   */
  export namespace hourly_transfer_metrics {
    export type Table = 'hourly_transfer_metrics';
    export interface Selectable {
      /**
      * **hourly_transfer_metrics.transfer_hour**
      * - `timestamptz` in database
      * - Nullable, no default
      */
    transfer_hour: Date | null;
      /**
      * **hourly_transfer_metrics.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **hourly_transfer_metrics.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **hourly_transfer_metrics.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **hourly_transfer_metrics.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **hourly_transfer_metrics.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.unique_user_count**
      * - `int8` in database
      * - Nullable, no default
      */
    unique_user_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.force_slow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.zero_amount_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    zero_amount_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.xcalled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    xcalled_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.executed_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    executed_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.reconciled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    reconciled_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.completedfast_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedfast_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.completedslow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedslow_transfer_count: db.Int8String | null;
      /**
      * **hourly_transfer_metrics.fastpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttv_in_secs: number | null;
      /**
      * **hourly_transfer_metrics.fastpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttr_in_secs: number | null;
      /**
      * **hourly_transfer_metrics.slowpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttv_in_secs: number | null;
      /**
      * **hourly_transfer_metrics.slowpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttr_in_secs: number | null;
    }
    export interface JSONSelectable {
      /**
      * **hourly_transfer_metrics.transfer_hour**
      * - `timestamptz` in database
      * - Nullable, no default
      */
    transfer_hour: db.TimestampTzString | null;
      /**
      * **hourly_transfer_metrics.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **hourly_transfer_metrics.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **hourly_transfer_metrics.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **hourly_transfer_metrics.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **hourly_transfer_metrics.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.unique_user_count**
      * - `int8` in database
      * - Nullable, no default
      */
    unique_user_count: number | null;
      /**
      * **hourly_transfer_metrics.force_slow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.zero_amount_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    zero_amount_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.xcalled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    xcalled_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.executed_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    executed_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.reconciled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    reconciled_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.completedfast_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedfast_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.completedslow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedslow_transfer_count: number | null;
      /**
      * **hourly_transfer_metrics.fastpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttv_in_secs: number | null;
      /**
      * **hourly_transfer_metrics.fastpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttr_in_secs: number | null;
      /**
      * **hourly_transfer_metrics.slowpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttv_in_secs: number | null;
      /**
      * **hourly_transfer_metrics.slowpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttr_in_secs: number | null;
    }
    export interface Whereable {
      /**
      * **hourly_transfer_metrics.transfer_hour**
      * - `timestamptz` in database
      * - Nullable, no default
      */
    transfer_hour?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.router**
      * - `text` in database
      * - Nullable, no default
      */
    router?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.unique_user_count**
      * - `int8` in database
      * - Nullable, no default
      */
    unique_user_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.force_slow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.zero_amount_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    zero_amount_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.xcalled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    xcalled_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.executed_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    executed_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.reconciled_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    reconciled_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.completedfast_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedfast_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.completedslow_transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    completedslow_transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.fastpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttv_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.fastpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    fastpath_avg_ttr_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.slowpath_avg_ttv_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttv_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_metrics.slowpath_avg_ttr_in_secs**
      * - `numeric` in database
      * - Nullable, no default
      */
    slowpath_avg_ttr_in_secs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **hourly_transfer_volume**
   * - View in database
   */
  export namespace hourly_transfer_volume {
    export type Table = 'hourly_transfer_volume';
    export interface Selectable {
      /**
      * **hourly_transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **hourly_transfer_volume.transfer_hour**
      * - `timestamptz` in database
      * - Nullable, no default
      */
    transfer_hour: Date | null;
      /**
      * **hourly_transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **hourly_transfer_volume.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **hourly_transfer_volume.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **hourly_transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **hourly_transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume: number | null;
      /**
      * **hourly_transfer_volume.force_slow_transfer_volume**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_volume: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **hourly_transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **hourly_transfer_volume.transfer_hour**
      * - `timestamptz` in database
      * - Nullable, no default
      */
    transfer_hour: db.TimestampTzString | null;
      /**
      * **hourly_transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **hourly_transfer_volume.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **hourly_transfer_volume.router**
      * - `text` in database
      * - Nullable, no default
      */
    router: string | null;
      /**
      * **hourly_transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **hourly_transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume: number | null;
      /**
      * **hourly_transfer_volume.force_slow_transfer_volume**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_volume: number | null;
    }
    export interface Whereable {
      /**
      * **hourly_transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.transfer_hour**
      * - `timestamptz` in database
      * - Nullable, no default
      */
    transfer_hour?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.router**
      * - `text` in database
      * - Nullable, no default
      */
    router?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hourly_transfer_volume.force_slow_transfer_volume**
      * - `int8` in database
      * - Nullable, no default
      */
    force_slow_transfer_volume?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **messages**
   * - Table in database
   */
  export namespace messages {
    export type Table = 'messages';
    export interface Selectable {
      /**
      * **messages.leaf**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    leaf: string;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain: string;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain: string | null;
      /**
      * **messages.index**
      * - `numeric` in database
      * - Nullable, no default
      */
    index: number | null;
      /**
      * **messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root: string | null;
      /**
      * **messages.message**
      * - `varchar` in database
      * - Nullable, no default
      */
    message: string | null;
      /**
      * **messages.processed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
    processed: boolean | null;
      /**
      * **messages.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
    return_data: string | null;
    }
    export interface JSONSelectable {
      /**
      * **messages.leaf**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    leaf: string;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain: string;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain: string | null;
      /**
      * **messages.index**
      * - `numeric` in database
      * - Nullable, no default
      */
    index: number | null;
      /**
      * **messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root: string | null;
      /**
      * **messages.message**
      * - `varchar` in database
      * - Nullable, no default
      */
    message: string | null;
      /**
      * **messages.processed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
    processed: boolean | null;
      /**
      * **messages.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
    return_data: string | null;
    }
    export interface Whereable {
      /**
      * **messages.leaf**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    leaf?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.index**
      * - `numeric` in database
      * - Nullable, no default
      */
    index?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.message**
      * - `varchar` in database
      * - Nullable, no default
      */
    message?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.processed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
    processed?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
    return_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **messages.leaf**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    leaf: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.index**
      * - `numeric` in database
      * - Nullable, no default
      */
    index?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.message**
      * - `varchar` in database
      * - Nullable, no default
      */
    message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.processed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
    processed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
    return_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **messages.leaf**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    leaf?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.index**
      * - `numeric` in database
      * - Nullable, no default
      */
    index?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.message**
      * - `varchar` in database
      * - Nullable, no default
      */
    message?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.processed**
      * - `bool` in database
      * - Nullable, default: `false`
      */
    processed?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
    return_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'messages_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **processed_root_messages**
   * - Table in database
   */
  export namespace processed_root_messages {
    export type Table = 'processed_root_messages';
    export interface Selectable {
      /**
      * **processed_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id: string;
      /**
      * **processed_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain: string | null;
      /**
      * **processed_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain: string | null;
      /**
      * **processed_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root: string | null;
      /**
      * **processed_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller: string | null;
      /**
      * **processed_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash: string | null;
      /**
      * **processed_root_messages.processed_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    processed_timestamp: number | null;
      /**
      * **processed_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price: number | null;
      /**
      * **processed_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit: number | null;
      /**
      * **processed_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number: number | null;
    }
    export interface JSONSelectable {
      /**
      * **processed_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id: string;
      /**
      * **processed_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain: string | null;
      /**
      * **processed_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain: string | null;
      /**
      * **processed_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root: string | null;
      /**
      * **processed_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller: string | null;
      /**
      * **processed_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash: string | null;
      /**
      * **processed_root_messages.processed_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    processed_timestamp: number | null;
      /**
      * **processed_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price: number | null;
      /**
      * **processed_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit: number | null;
      /**
      * **processed_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number: number | null;
    }
    export interface Whereable {
      /**
      * **processed_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.processed_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    processed_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **processed_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **processed_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **processed_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.processed_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    processed_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **processed_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **processed_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **processed_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.processed_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    processed_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **processed_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'processed_root_messages_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **router_tvl**
   * - View in database
   */
  export namespace router_tvl {
    export type Table = 'router_tvl';
    export interface Selectable {
      /**
      * **router_tvl.latest_transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    latest_transfer_day: Date | null;
      /**
      * **router_tvl.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **router_tvl.tvl**
      * - `numeric` in database
      * - Nullable, no default
      */
    tvl: number | null;
    }
    export interface JSONSelectable {
      /**
      * **router_tvl.latest_transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    latest_transfer_day: db.DateString | null;
      /**
      * **router_tvl.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **router_tvl.tvl**
      * - `numeric` in database
      * - Nullable, no default
      */
    tvl: number | null;
    }
    export interface Whereable {
      /**
      * **router_tvl.latest_transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    latest_transfer_day?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **router_tvl.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **router_tvl.tvl**
      * - `numeric` in database
      * - Nullable, no default
      */
    tvl?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **routers**
   * - Table in database
   */
  export namespace routers {
    export type Table = 'routers';
    export interface Selectable {
      /**
      * **routers.address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    address: string;
    }
    export interface JSONSelectable {
      /**
      * **routers.address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    address: string;
    }
    export interface Whereable {
      /**
      * **routers.address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **routers.address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    address: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **routers.address**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    address?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'routers_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **routers_with_balances**
   * - View in database
   */
  export namespace routers_with_balances {
    export type Table = 'routers_with_balances';
    export interface Selectable {
      /**
      * **routers_with_balances.address**
      * - `bpchar` in database
      * - Nullable, no default
      */
    address: string | null;
      /**
      * **routers_with_balances.asset_canonical_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset_canonical_id: string | null;
      /**
      * **routers_with_balances.asset_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    asset_domain: string | null;
      /**
      * **routers_with_balances.router_address**
      * - `bpchar` in database
      * - Nullable, no default
      */
    router_address: string | null;
      /**
      * **routers_with_balances.balance**
      * - `numeric` in database
      * - Nullable, no default
      */
    balance: number | null;
      /**
      * **routers_with_balances.local**
      * - `bpchar` in database
      * - Nullable, no default
      */
    local: string | null;
      /**
      * **routers_with_balances.adopted**
      * - `bpchar` in database
      * - Nullable, no default
      */
    adopted: string | null;
      /**
      * **routers_with_balances.canonical_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    canonical_id: string | null;
      /**
      * **routers_with_balances.canonical_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    canonical_domain: string | null;
      /**
      * **routers_with_balances.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    domain: string | null;
    }
    export interface JSONSelectable {
      /**
      * **routers_with_balances.address**
      * - `bpchar` in database
      * - Nullable, no default
      */
    address: string | null;
      /**
      * **routers_with_balances.asset_canonical_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset_canonical_id: string | null;
      /**
      * **routers_with_balances.asset_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    asset_domain: string | null;
      /**
      * **routers_with_balances.router_address**
      * - `bpchar` in database
      * - Nullable, no default
      */
    router_address: string | null;
      /**
      * **routers_with_balances.balance**
      * - `numeric` in database
      * - Nullable, no default
      */
    balance: number | null;
      /**
      * **routers_with_balances.local**
      * - `bpchar` in database
      * - Nullable, no default
      */
    local: string | null;
      /**
      * **routers_with_balances.adopted**
      * - `bpchar` in database
      * - Nullable, no default
      */
    adopted: string | null;
      /**
      * **routers_with_balances.canonical_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    canonical_id: string | null;
      /**
      * **routers_with_balances.canonical_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    canonical_domain: string | null;
      /**
      * **routers_with_balances.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    domain: string | null;
    }
    export interface Whereable {
      /**
      * **routers_with_balances.address**
      * - `bpchar` in database
      * - Nullable, no default
      */
    address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.asset_canonical_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset_canonical_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.asset_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    asset_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.router_address**
      * - `bpchar` in database
      * - Nullable, no default
      */
    router_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.balance**
      * - `numeric` in database
      * - Nullable, no default
      */
    balance?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.local**
      * - `bpchar` in database
      * - Nullable, no default
      */
    local?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.adopted**
      * - `bpchar` in database
      * - Nullable, no default
      */
    adopted?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.canonical_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    canonical_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.canonical_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    canonical_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **routers_with_balances.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **schema_migrations**
   * - Table in database
   */
  export namespace schema_migrations {
    export type Table = 'schema_migrations';
    export interface Selectable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    version: string;
    }
    export interface JSONSelectable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    version: string;
    }
    export interface Whereable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    version?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    version: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    version?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'schema_migrations_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **sent_root_messages**
   * - Table in database
   */
  export namespace sent_root_messages {
    export type Table = 'sent_root_messages';
    export interface Selectable {
      /**
      * **sent_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id: string;
      /**
      * **sent_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain: string | null;
      /**
      * **sent_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain: string | null;
      /**
      * **sent_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root: string | null;
      /**
      * **sent_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller: string | null;
      /**
      * **sent_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash: string | null;
      /**
      * **sent_root_messages.sent_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    sent_timestamp: number | null;
      /**
      * **sent_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price: number | null;
      /**
      * **sent_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit: number | null;
      /**
      * **sent_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number: number | null;
    }
    export interface JSONSelectable {
      /**
      * **sent_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id: string;
      /**
      * **sent_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain: string | null;
      /**
      * **sent_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain: string | null;
      /**
      * **sent_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root: string | null;
      /**
      * **sent_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller: string | null;
      /**
      * **sent_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash: string | null;
      /**
      * **sent_root_messages.sent_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    sent_timestamp: number | null;
      /**
      * **sent_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price: number | null;
      /**
      * **sent_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit: number | null;
      /**
      * **sent_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number: number | null;
    }
    export interface Whereable {
      /**
      * **sent_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.sent_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    sent_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **sent_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **sent_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **sent_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.sent_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    sent_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **sent_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **sent_root_messages.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **sent_root_messages.spoke_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    spoke_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.hub_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    hub_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.root**
      * - `bpchar` in database
      * - Nullable, no default
      */
    root?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.sent_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    sent_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **sent_root_messages.block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'sent_root_messages_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **transfer_count**
   * - View in database
   */
  export namespace transfer_count {
    export type Table = 'transfer_count';
    export interface Selectable {
      /**
      * **transfer_count.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **transfer_count.transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_day: Date | null;
      /**
      * **transfer_count.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfer_count.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **transfer_count.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **transfer_count.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **transfer_count.transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_day: db.DateString | null;
      /**
      * **transfer_count.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfer_count.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **transfer_count.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count: number | null;
    }
    export interface Whereable {
      /**
      * **transfer_count.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_count.transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_day?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_count.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_count.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_count.transfer_count**
      * - `int8` in database
      * - Nullable, no default
      */
    transfer_count?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **transfer_volume**
   * - View in database
   */
  export namespace transfer_volume {
    export type Table = 'transfer_volume';
    export interface Selectable {
      /**
      * **transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **transfer_volume.transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_day: Date | null;
      /**
      * **transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume: number | null;
    }
    export interface JSONSelectable {
      /**
      * **transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **transfer_volume.transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_day: db.DateString | null;
      /**
      * **transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset: string | null;
      /**
      * **transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume: number | null;
    }
    export interface Whereable {
      /**
      * **transfer_volume.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_volume.transfer_day**
      * - `date` in database
      * - Nullable, no default
      */
    transfer_day?: (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.DateString | Date) | db.Parameter<(db.DateString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_volume.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_volume.asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfer_volume.volume**
      * - `numeric` in database
      * - Nullable, no default
      */
    volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **transfers**
   * - Table in database
   */
  export namespace transfers {
    export type Table = 'transfers';
    export interface Selectable {
      /**
      * **transfers.transfer_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    transfer_id: string;
      /**
      * **transfers.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce: db.Int8String | null;
      /**
      * **transfers.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to: string | null;
      /**
      * **transfers.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data: string | null;
      /**
      * **transfers.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain: string;
      /**
      * **transfers.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain: string | null;
      /**
      * **transfers.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery: string | null;
      /**
      * **transfers.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow: boolean | null;
      /**
      * **transfers.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local: boolean | null;
      /**
      * **transfers.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback: string | null;
      /**
      * **transfers.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee: number | null;
      /**
      * **transfers.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee: number | null;
      /**
      * **transfers.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfers.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset: string | null;
      /**
      * **transfers.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount: number | null;
      /**
      * **transfers.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset: string | null;
      /**
      * **transfers.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount: number | null;
      /**
      * **transfers.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller: string | null;
      /**
      * **transfers.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash: string | null;
      /**
      * **transfers.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp: number | null;
      /**
      * **transfers.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price: number | null;
      /**
      * **transfers.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit: number | null;
      /**
      * **transfers.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number: number | null;
      /**
      * **transfers.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **transfers.status**
      * - `transfer_status` in database
      * - `NOT NULL`, default: `'XCalled'::transfer_status`
      */
    status: transfer_status;
      /**
      * **transfers.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers: string[] | null;
      /**
      * **transfers.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset: string | null;
      /**
      * **transfers.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount: number | null;
      /**
      * **transfers.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset: string | null;
      /**
      * **transfers.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount: number | null;
      /**
      * **transfers.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller: string | null;
      /**
      * **transfers.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash: string | null;
      /**
      * **transfers.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp: number | null;
      /**
      * **transfers.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price: number | null;
      /**
      * **transfers.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit: number | null;
      /**
      * **transfers.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number: number | null;
      /**
      * **transfers.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender: string | null;
      /**
      * **transfers.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller: string | null;
      /**
      * **transfers.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash: string | null;
      /**
      * **transfers.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp: number | null;
      /**
      * **transfers.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price: number | null;
      /**
      * **transfers.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit: number | null;
      /**
      * **transfers.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number: number | null;
      /**
      * **transfers.update_time**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
    update_time: Date;
      /**
      * **transfers.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent: string | null;
      /**
      * **transfers.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out: number | null;
      /**
      * **transfers.transfer_status_update_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_update_by_agent: string | null;
      /**
      * **transfers.transfer_status_message_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_message_by_agent: string | null;
    }
    export interface JSONSelectable {
      /**
      * **transfers.transfer_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    transfer_id: string;
      /**
      * **transfers.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce: number | null;
      /**
      * **transfers.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to: string | null;
      /**
      * **transfers.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data: string | null;
      /**
      * **transfers.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain: string;
      /**
      * **transfers.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain: string | null;
      /**
      * **transfers.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery: string | null;
      /**
      * **transfers.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow: boolean | null;
      /**
      * **transfers.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local: boolean | null;
      /**
      * **transfers.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback: string | null;
      /**
      * **transfers.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee: number | null;
      /**
      * **transfers.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee: number | null;
      /**
      * **transfers.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfers.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset: string | null;
      /**
      * **transfers.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount: number | null;
      /**
      * **transfers.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset: string | null;
      /**
      * **transfers.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount: number | null;
      /**
      * **transfers.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller: string | null;
      /**
      * **transfers.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash: string | null;
      /**
      * **transfers.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp: number | null;
      /**
      * **transfers.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price: number | null;
      /**
      * **transfers.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit: number | null;
      /**
      * **transfers.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number: number | null;
      /**
      * **transfers.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **transfers.status**
      * - `transfer_status` in database
      * - `NOT NULL`, default: `'XCalled'::transfer_status`
      */
    status: transfer_status;
      /**
      * **transfers.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers: string[] | null;
      /**
      * **transfers.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset: string | null;
      /**
      * **transfers.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount: number | null;
      /**
      * **transfers.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset: string | null;
      /**
      * **transfers.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount: number | null;
      /**
      * **transfers.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller: string | null;
      /**
      * **transfers.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash: string | null;
      /**
      * **transfers.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp: number | null;
      /**
      * **transfers.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price: number | null;
      /**
      * **transfers.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit: number | null;
      /**
      * **transfers.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number: number | null;
      /**
      * **transfers.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender: string | null;
      /**
      * **transfers.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller: string | null;
      /**
      * **transfers.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash: string | null;
      /**
      * **transfers.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp: number | null;
      /**
      * **transfers.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price: number | null;
      /**
      * **transfers.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit: number | null;
      /**
      * **transfers.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number: number | null;
      /**
      * **transfers.update_time**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
    update_time: db.TimestampString;
      /**
      * **transfers.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent: string | null;
      /**
      * **transfers.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out: number | null;
      /**
      * **transfers.transfer_status_update_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_update_by_agent: string | null;
      /**
      * **transfers.transfer_status_message_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_message_by_agent: string | null;
    }
    export interface Whereable {
      /**
      * **transfers.transfer_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    transfer_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.status**
      * - `transfer_status` in database
      * - `NOT NULL`, default: `'XCalled'::transfer_status`
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.update_time**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
    update_time?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.transfer_status_update_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_update_by_agent?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers.transfer_status_message_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_message_by_agent?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **transfers.transfer_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    transfer_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **transfers.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **transfers.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.status**
      * - `transfer_status` in database
      * - `NOT NULL`, default: `'XCalled'::transfer_status`
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.update_time**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
    update_time?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.transfer_status_update_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_update_by_agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers.transfer_status_message_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_message_by_agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **transfers.transfer_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
    transfer_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **transfers.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.origin_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
    origin_domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **transfers.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.status**
      * - `transfer_status` in database
      * - `NOT NULL`, default: `'XCalled'::transfer_status`
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.update_time**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
    update_time?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.transfer_status_update_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_update_by_agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers.transfer_status_message_by_agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_status_message_by_agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'transfers_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **transfers_with_ttr_ttv**
   * - View in database
   */
  export namespace transfers_with_ttr_ttv {
    export type Table = 'transfers_with_ttr_ttv';
    export interface Selectable {
      /**
      * **transfers_with_ttr_ttv.transfer_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_id: string | null;
      /**
      * **transfers_with_ttr_ttv.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce: db.Int8String | null;
      /**
      * **transfers_with_ttr_ttv.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to: string | null;
      /**
      * **transfers_with_ttr_ttv.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_domain: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain: string | null;
      /**
      * **transfers_with_ttr_ttv.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery: string | null;
      /**
      * **transfers_with_ttr_ttv.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow: boolean | null;
      /**
      * **transfers_with_ttr_ttv.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local: boolean | null;
      /**
      * **transfers_with_ttr_ttv.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback: string | null;
      /**
      * **transfers_with_ttr_ttv.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee: number | null;
      /**
      * **transfers_with_ttr_ttv.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee: number | null;
      /**
      * **transfers_with_ttr_ttv.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller: string | null;
      /**
      * **transfers_with_ttr_ttv.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash: string | null;
      /**
      * **transfers_with_ttr_ttv.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number: number | null;
      /**
      * **transfers_with_ttr_ttv.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **transfers_with_ttr_ttv.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **transfers_with_ttr_ttv.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers: string[] | null;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller: string | null;
      /**
      * **transfers_with_ttr_ttv.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash: string | null;
      /**
      * **transfers_with_ttr_ttv.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender: string | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller: string | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash: string | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp: number | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price: number | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit: number | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number: number | null;
      /**
      * **transfers_with_ttr_ttv.update_time**
      * - `timestamp` in database
      * - Nullable, no default
      */
    update_time: Date | null;
      /**
      * **transfers_with_ttr_ttv.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out: number | null;
      /**
      * **transfers_with_ttr_ttv.ttr**
      * - `int4` in database
      * - Nullable, no default
      */
    ttr: number | null;
      /**
      * **transfers_with_ttr_ttv.ttv**
      * - `int4` in database
      * - Nullable, no default
      */
    ttv: number | null;
    }
    export interface JSONSelectable {
      /**
      * **transfers_with_ttr_ttv.transfer_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_id: string | null;
      /**
      * **transfers_with_ttr_ttv.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce: number | null;
      /**
      * **transfers_with_ttr_ttv.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to: string | null;
      /**
      * **transfers_with_ttr_ttv.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_domain: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain: string | null;
      /**
      * **transfers_with_ttr_ttv.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery: string | null;
      /**
      * **transfers_with_ttr_ttv.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow: boolean | null;
      /**
      * **transfers_with_ttr_ttv.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local: boolean | null;
      /**
      * **transfers_with_ttr_ttv.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback: string | null;
      /**
      * **transfers_with_ttr_ttv.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee: number | null;
      /**
      * **transfers_with_ttr_ttv.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee: number | null;
      /**
      * **transfers_with_ttr_ttv.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller: string | null;
      /**
      * **transfers_with_ttr_ttv.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash: string | null;
      /**
      * **transfers_with_ttr_ttv.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit: number | null;
      /**
      * **transfers_with_ttr_ttv.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number: number | null;
      /**
      * **transfers_with_ttr_ttv.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain: string | null;
      /**
      * **transfers_with_ttr_ttv.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status: transfer_status | null;
      /**
      * **transfers_with_ttr_ttv.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers: string[] | null;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller: string | null;
      /**
      * **transfers_with_ttr_ttv.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash: string | null;
      /**
      * **transfers_with_ttr_ttv.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number: number | null;
      /**
      * **transfers_with_ttr_ttv.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender: string | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller: string | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash: string | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp: number | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price: number | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit: number | null;
      /**
      * **transfers_with_ttr_ttv.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number: number | null;
      /**
      * **transfers_with_ttr_ttv.update_time**
      * - `timestamp` in database
      * - Nullable, no default
      */
    update_time: db.TimestampString | null;
      /**
      * **transfers_with_ttr_ttv.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent: string | null;
      /**
      * **transfers_with_ttr_ttv.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out: number | null;
      /**
      * **transfers_with_ttr_ttv.ttr**
      * - `int4` in database
      * - Nullable, no default
      */
    ttr: number | null;
      /**
      * **transfers_with_ttr_ttv.ttv**
      * - `int4` in database
      * - Nullable, no default
      */
    ttv: number | null;
    }
    export interface Whereable {
      /**
      * **transfers_with_ttr_ttv.transfer_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.update_time**
      * - `timestamp` in database
      * - Nullable, no default
      */
    update_time?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.ttr**
      * - `int4` in database
      * - Nullable, no default
      */
    ttr?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **transfers_with_ttr_ttv.ttv**
      * - `int4` in database
      * - Nullable, no default
      */
    ttv?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **transfers_with_ttr_ttv.transfer_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.update_time**
      * - `timestamp` in database
      * - Nullable, no default
      */
    update_time?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.ttr**
      * - `int4` in database
      * - Nullable, no default
      */
    ttr?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
      /**
      * **transfers_with_ttr_ttv.ttv**
      * - `int4` in database
      * - Nullable, no default
      */
    ttv?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **transfers_with_ttr_ttv.transfer_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
    transfer_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.nonce**
      * - `int8` in database
      * - Nullable, no default
      */
    nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.to**
      * - `bpchar` in database
      * - Nullable, no default
      */
    to?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.call_data**
      * - `text` in database
      * - Nullable, no default
      */
    call_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.recovery**
      * - `bpchar` in database
      * - Nullable, no default
      */
    recovery?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.force_slow**
      * - `bool` in database
      * - Nullable, no default
      */
    force_slow?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.receive_local**
      * - `bool` in database
      * - Nullable, no default
      */
    receive_local?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.callback**
      * - `bpchar` in database
      * - Nullable, no default
      */
    callback?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.callback_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    callback_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.relayer_fee**
      * - `numeric` in database
      * - Nullable, no default
      */
    relayer_fee?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.origin_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    origin_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.origin_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    origin_bridged_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.origin_bridged_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    origin_bridged_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.xcall_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.xcall_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    xcall_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.xcall_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.xcall_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    xcall_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.xcall_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    xcall_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_chain**
      * - `varchar` in database
      * - Nullable, no default
      */
    destination_chain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.status**
      * - `transfer_status` in database
      * - Nullable, no default
      */
    status?: transfer_status | db.Parameter<transfer_status> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, transfer_status | db.Parameter<transfer_status> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.routers**
      * - `_bpchar` in database
      * - Nullable, no default
      */
    routers?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_transacting_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_transacting_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_transacting_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_local_asset**
      * - `bpchar` in database
      * - Nullable, no default
      */
    destination_local_asset?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_local_amount**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_local_amount?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    execute_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    execute_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.execute_origin_sender**
      * - `bpchar` in database
      * - Nullable, no default
      */
    execute_origin_sender?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.reconcile_caller**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_caller?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.reconcile_transaction_hash**
      * - `bpchar` in database
      * - Nullable, no default
      */
    reconcile_transaction_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.reconcile_timestamp**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_timestamp?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_price**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_price?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.reconcile_gas_limit**
      * - `numeric` in database
      * - Nullable, no default
      */
    reconcile_gas_limit?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.reconcile_block_number**
      * - `int4` in database
      * - Nullable, no default
      */
    reconcile_block_number?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.update_time**
      * - `timestamp` in database
      * - Nullable, no default
      */
    update_time?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.agent**
      * - `bpchar` in database
      * - Nullable, no default
      */
    agent?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.destination_min_out**
      * - `numeric` in database
      * - Nullable, no default
      */
    destination_min_out?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.ttr**
      * - `int4` in database
      * - Nullable, no default
      */
    ttr?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **transfers_with_ttr_ttv.ttv**
      * - `int4` in database
      * - Nullable, no default
      */
    ttv?: number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /* --- aggregate types --- */

  export namespace public {  
    export type Table = asset_balances.Table | assets.Table | checkpoints.Table | daily_router_tvl.Table | daily_transfer_metrics.Table | daily_transfer_volume.Table | hourly_transfer_metrics.Table | hourly_transfer_volume.Table | messages.Table | processed_root_messages.Table | router_tvl.Table | routers.Table | routers_with_balances.Table | schema_migrations.Table | sent_root_messages.Table | transfer_count.Table | transfer_volume.Table | transfers.Table | transfers_with_ttr_ttv.Table;
    export type Selectable = asset_balances.Selectable | assets.Selectable | checkpoints.Selectable | daily_router_tvl.Selectable | daily_transfer_metrics.Selectable | daily_transfer_volume.Selectable | hourly_transfer_metrics.Selectable | hourly_transfer_volume.Selectable | messages.Selectable | processed_root_messages.Selectable | router_tvl.Selectable | routers.Selectable | routers_with_balances.Selectable | schema_migrations.Selectable | sent_root_messages.Selectable | transfer_count.Selectable | transfer_volume.Selectable | transfers.Selectable | transfers_with_ttr_ttv.Selectable;
    export type JSONSelectable = asset_balances.JSONSelectable | assets.JSONSelectable | checkpoints.JSONSelectable | daily_router_tvl.JSONSelectable | daily_transfer_metrics.JSONSelectable | daily_transfer_volume.JSONSelectable | hourly_transfer_metrics.JSONSelectable | hourly_transfer_volume.JSONSelectable | messages.JSONSelectable | processed_root_messages.JSONSelectable | router_tvl.JSONSelectable | routers.JSONSelectable | routers_with_balances.JSONSelectable | schema_migrations.JSONSelectable | sent_root_messages.JSONSelectable | transfer_count.JSONSelectable | transfer_volume.JSONSelectable | transfers.JSONSelectable | transfers_with_ttr_ttv.JSONSelectable;
    export type Whereable = asset_balances.Whereable | assets.Whereable | checkpoints.Whereable | daily_router_tvl.Whereable | daily_transfer_metrics.Whereable | daily_transfer_volume.Whereable | hourly_transfer_metrics.Whereable | hourly_transfer_volume.Whereable | messages.Whereable | processed_root_messages.Whereable | router_tvl.Whereable | routers.Whereable | routers_with_balances.Whereable | schema_migrations.Whereable | sent_root_messages.Whereable | transfer_count.Whereable | transfer_volume.Whereable | transfers.Whereable | transfers_with_ttr_ttv.Whereable;
    export type Insertable = asset_balances.Insertable | assets.Insertable | checkpoints.Insertable | daily_router_tvl.Insertable | daily_transfer_metrics.Insertable | daily_transfer_volume.Insertable | hourly_transfer_metrics.Insertable | hourly_transfer_volume.Insertable | messages.Insertable | processed_root_messages.Insertable | router_tvl.Insertable | routers.Insertable | routers_with_balances.Insertable | schema_migrations.Insertable | sent_root_messages.Insertable | transfer_count.Insertable | transfer_volume.Insertable | transfers.Insertable | transfers_with_ttr_ttv.Insertable;
    export type Updatable = asset_balances.Updatable | assets.Updatable | checkpoints.Updatable | daily_router_tvl.Updatable | daily_transfer_metrics.Updatable | daily_transfer_volume.Updatable | hourly_transfer_metrics.Updatable | hourly_transfer_volume.Updatable | messages.Updatable | processed_root_messages.Updatable | router_tvl.Updatable | routers.Updatable | routers_with_balances.Updatable | schema_migrations.Updatable | sent_root_messages.Updatable | transfer_count.Updatable | transfer_volume.Updatable | transfers.Updatable | transfers_with_ttr_ttv.Updatable;
    export type UniqueIndex = asset_balances.UniqueIndex | assets.UniqueIndex | checkpoints.UniqueIndex | daily_router_tvl.UniqueIndex | daily_transfer_metrics.UniqueIndex | daily_transfer_volume.UniqueIndex | hourly_transfer_metrics.UniqueIndex | hourly_transfer_volume.UniqueIndex | messages.UniqueIndex | processed_root_messages.UniqueIndex | router_tvl.UniqueIndex | routers.UniqueIndex | routers_with_balances.UniqueIndex | schema_migrations.UniqueIndex | sent_root_messages.UniqueIndex | transfer_count.UniqueIndex | transfer_volume.UniqueIndex | transfers.UniqueIndex | transfers_with_ttr_ttv.UniqueIndex;
    export type Column = asset_balances.Column | assets.Column | checkpoints.Column | daily_router_tvl.Column | daily_transfer_metrics.Column | daily_transfer_volume.Column | hourly_transfer_metrics.Column | hourly_transfer_volume.Column | messages.Column | processed_root_messages.Column | router_tvl.Column | routers.Column | routers_with_balances.Column | schema_migrations.Column | sent_root_messages.Column | transfer_count.Column | transfer_volume.Column | transfers.Column | transfers_with_ttr_ttv.Column;
  
    export type AllBaseTables = [asset_balances.Table, assets.Table, checkpoints.Table, messages.Table, processed_root_messages.Table, routers.Table, schema_migrations.Table, sent_root_messages.Table, transfers.Table];
    export type AllForeignTables = [];
    export type AllViews = [daily_router_tvl.Table, daily_transfer_metrics.Table, daily_transfer_volume.Table, hourly_transfer_metrics.Table, hourly_transfer_volume.Table, router_tvl.Table, routers_with_balances.Table, transfer_count.Table, transfer_volume.Table, transfers_with_ttr_ttv.Table];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [asset_balances.Table, assets.Table, checkpoints.Table, daily_router_tvl.Table, daily_transfer_metrics.Table, daily_transfer_volume.Table, hourly_transfer_metrics.Table, hourly_transfer_volume.Table, messages.Table, processed_root_messages.Table, router_tvl.Table, routers.Table, routers_with_balances.Table, schema_migrations.Table, sent_root_messages.Table, transfer_count.Table, transfer_volume.Table, transfers.Table, transfers_with_ttr_ttv.Table];
  }



  /* === global aggregate types === */

  export type Schema = 'public';
  export type Table = public.Table;
  export type Selectable = public.Selectable;
  export type JSONSelectable = public.JSONSelectable;
  export type Whereable = public.Whereable;
  export type Insertable = public.Insertable;
  export type Updatable = public.Updatable;
  export type UniqueIndex = public.UniqueIndex;
  export type Column = public.Column;

  export type AllSchemas = ['public'];
  export type AllBaseTables = [...public.AllBaseTables];
  export type AllForeignTables = [...public.AllForeignTables];
  export type AllViews = [...public.AllViews];
  export type AllMaterializedViews = [...public.AllMaterializedViews];
  export type AllTablesAndViews = [...public.AllTablesAndViews];


  /* === lookups === */

  export type SelectableForTable<T extends Table> = {
    "asset_balances": asset_balances.Selectable;
    "assets": assets.Selectable;
    "checkpoints": checkpoints.Selectable;
    "daily_router_tvl": daily_router_tvl.Selectable;
    "daily_transfer_metrics": daily_transfer_metrics.Selectable;
    "daily_transfer_volume": daily_transfer_volume.Selectable;
    "hourly_transfer_metrics": hourly_transfer_metrics.Selectable;
    "hourly_transfer_volume": hourly_transfer_volume.Selectable;
    "messages": messages.Selectable;
    "processed_root_messages": processed_root_messages.Selectable;
    "router_tvl": router_tvl.Selectable;
    "routers": routers.Selectable;
    "routers_with_balances": routers_with_balances.Selectable;
    "schema_migrations": schema_migrations.Selectable;
    "sent_root_messages": sent_root_messages.Selectable;
    "transfer_count": transfer_count.Selectable;
    "transfer_volume": transfer_volume.Selectable;
    "transfers": transfers.Selectable;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.Selectable;
  }[T];

  export type JSONSelectableForTable<T extends Table> = {
    "asset_balances": asset_balances.JSONSelectable;
    "assets": assets.JSONSelectable;
    "checkpoints": checkpoints.JSONSelectable;
    "daily_router_tvl": daily_router_tvl.JSONSelectable;
    "daily_transfer_metrics": daily_transfer_metrics.JSONSelectable;
    "daily_transfer_volume": daily_transfer_volume.JSONSelectable;
    "hourly_transfer_metrics": hourly_transfer_metrics.JSONSelectable;
    "hourly_transfer_volume": hourly_transfer_volume.JSONSelectable;
    "messages": messages.JSONSelectable;
    "processed_root_messages": processed_root_messages.JSONSelectable;
    "router_tvl": router_tvl.JSONSelectable;
    "routers": routers.JSONSelectable;
    "routers_with_balances": routers_with_balances.JSONSelectable;
    "schema_migrations": schema_migrations.JSONSelectable;
    "sent_root_messages": sent_root_messages.JSONSelectable;
    "transfer_count": transfer_count.JSONSelectable;
    "transfer_volume": transfer_volume.JSONSelectable;
    "transfers": transfers.JSONSelectable;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.JSONSelectable;
  }[T];

  export type WhereableForTable<T extends Table> = {
    "asset_balances": asset_balances.Whereable;
    "assets": assets.Whereable;
    "checkpoints": checkpoints.Whereable;
    "daily_router_tvl": daily_router_tvl.Whereable;
    "daily_transfer_metrics": daily_transfer_metrics.Whereable;
    "daily_transfer_volume": daily_transfer_volume.Whereable;
    "hourly_transfer_metrics": hourly_transfer_metrics.Whereable;
    "hourly_transfer_volume": hourly_transfer_volume.Whereable;
    "messages": messages.Whereable;
    "processed_root_messages": processed_root_messages.Whereable;
    "router_tvl": router_tvl.Whereable;
    "routers": routers.Whereable;
    "routers_with_balances": routers_with_balances.Whereable;
    "schema_migrations": schema_migrations.Whereable;
    "sent_root_messages": sent_root_messages.Whereable;
    "transfer_count": transfer_count.Whereable;
    "transfer_volume": transfer_volume.Whereable;
    "transfers": transfers.Whereable;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.Whereable;
  }[T];

  export type InsertableForTable<T extends Table> = {
    "asset_balances": asset_balances.Insertable;
    "assets": assets.Insertable;
    "checkpoints": checkpoints.Insertable;
    "daily_router_tvl": daily_router_tvl.Insertable;
    "daily_transfer_metrics": daily_transfer_metrics.Insertable;
    "daily_transfer_volume": daily_transfer_volume.Insertable;
    "hourly_transfer_metrics": hourly_transfer_metrics.Insertable;
    "hourly_transfer_volume": hourly_transfer_volume.Insertable;
    "messages": messages.Insertable;
    "processed_root_messages": processed_root_messages.Insertable;
    "router_tvl": router_tvl.Insertable;
    "routers": routers.Insertable;
    "routers_with_balances": routers_with_balances.Insertable;
    "schema_migrations": schema_migrations.Insertable;
    "sent_root_messages": sent_root_messages.Insertable;
    "transfer_count": transfer_count.Insertable;
    "transfer_volume": transfer_volume.Insertable;
    "transfers": transfers.Insertable;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.Insertable;
  }[T];

  export type UpdatableForTable<T extends Table> = {
    "asset_balances": asset_balances.Updatable;
    "assets": assets.Updatable;
    "checkpoints": checkpoints.Updatable;
    "daily_router_tvl": daily_router_tvl.Updatable;
    "daily_transfer_metrics": daily_transfer_metrics.Updatable;
    "daily_transfer_volume": daily_transfer_volume.Updatable;
    "hourly_transfer_metrics": hourly_transfer_metrics.Updatable;
    "hourly_transfer_volume": hourly_transfer_volume.Updatable;
    "messages": messages.Updatable;
    "processed_root_messages": processed_root_messages.Updatable;
    "router_tvl": router_tvl.Updatable;
    "routers": routers.Updatable;
    "routers_with_balances": routers_with_balances.Updatable;
    "schema_migrations": schema_migrations.Updatable;
    "sent_root_messages": sent_root_messages.Updatable;
    "transfer_count": transfer_count.Updatable;
    "transfer_volume": transfer_volume.Updatable;
    "transfers": transfers.Updatable;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.Updatable;
  }[T];

  export type UniqueIndexForTable<T extends Table> = {
    "asset_balances": asset_balances.UniqueIndex;
    "assets": assets.UniqueIndex;
    "checkpoints": checkpoints.UniqueIndex;
    "daily_router_tvl": daily_router_tvl.UniqueIndex;
    "daily_transfer_metrics": daily_transfer_metrics.UniqueIndex;
    "daily_transfer_volume": daily_transfer_volume.UniqueIndex;
    "hourly_transfer_metrics": hourly_transfer_metrics.UniqueIndex;
    "hourly_transfer_volume": hourly_transfer_volume.UniqueIndex;
    "messages": messages.UniqueIndex;
    "processed_root_messages": processed_root_messages.UniqueIndex;
    "router_tvl": router_tvl.UniqueIndex;
    "routers": routers.UniqueIndex;
    "routers_with_balances": routers_with_balances.UniqueIndex;
    "schema_migrations": schema_migrations.UniqueIndex;
    "sent_root_messages": sent_root_messages.UniqueIndex;
    "transfer_count": transfer_count.UniqueIndex;
    "transfer_volume": transfer_volume.UniqueIndex;
    "transfers": transfers.UniqueIndex;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.UniqueIndex;
  }[T];

  export type ColumnForTable<T extends Table> = {
    "asset_balances": asset_balances.Column;
    "assets": assets.Column;
    "checkpoints": checkpoints.Column;
    "daily_router_tvl": daily_router_tvl.Column;
    "daily_transfer_metrics": daily_transfer_metrics.Column;
    "daily_transfer_volume": daily_transfer_volume.Column;
    "hourly_transfer_metrics": hourly_transfer_metrics.Column;
    "hourly_transfer_volume": hourly_transfer_volume.Column;
    "messages": messages.Column;
    "processed_root_messages": processed_root_messages.Column;
    "router_tvl": router_tvl.Column;
    "routers": routers.Column;
    "routers_with_balances": routers_with_balances.Column;
    "schema_migrations": schema_migrations.Column;
    "sent_root_messages": sent_root_messages.Column;
    "transfer_count": transfer_count.Column;
    "transfer_volume": transfer_volume.Column;
    "transfers": transfers.Column;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.Column;
  }[T];

  export type SQLForTable<T extends Table> = {
    "asset_balances": asset_balances.SQL;
    "assets": assets.SQL;
    "checkpoints": checkpoints.SQL;
    "daily_router_tvl": daily_router_tvl.SQL;
    "daily_transfer_metrics": daily_transfer_metrics.SQL;
    "daily_transfer_volume": daily_transfer_volume.SQL;
    "hourly_transfer_metrics": hourly_transfer_metrics.SQL;
    "hourly_transfer_volume": hourly_transfer_volume.SQL;
    "messages": messages.SQL;
    "processed_root_messages": processed_root_messages.SQL;
    "router_tvl": router_tvl.SQL;
    "routers": routers.SQL;
    "routers_with_balances": routers_with_balances.SQL;
    "schema_migrations": schema_migrations.SQL;
    "sent_root_messages": sent_root_messages.SQL;
    "transfer_count": transfer_count.SQL;
    "transfer_volume": transfer_volume.SQL;
    "transfers": transfers.SQL;
    "transfers_with_ttr_ttv": transfers_with_ttr_ttv.SQL;
  }[T];

}
